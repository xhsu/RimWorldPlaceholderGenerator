inline constexpr char RIMWORLD_ASSEMBLY_VERSION[] = "1.5.8909.13066";

inline classinfo_dict_t const gRimWorldClasses
{
	{ "RimWorld.AbilityCategoryDef"                                  , { "RimWorld"     , "AbilityCategoryDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.AbilityDef"                                          , { "RimWorld"     , "AbilityDef"                                          , "Verse.Def"                                              , { "confirmationDialogText", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredMemes", "RimWorld.MemeDef" } }, { { "category", "RimWorld.AbilityCategoryDef" }, { "verbProperties", "Verse.VerbProperties" }, { "hotKey", "Verse.KeyBindingDef" }, { "jobDef", "Verse.JobDef" }, { "warmupMote", "Verse.ThingDef" }, { "warmupEffecter", "Verse.EffecterDef" }, { "emittedFleck", "Verse.FleckDef" }, { "warmupStartSound", "Verse.SoundDef" }, { "warmupSound", "Verse.SoundDef" }, { "warmupPreEndSound", "Verse.SoundDef" }, { "groupDef", "RimWorld.AbilityGroupDef" } }, }, },
	{ "RimWorld.AbilityGroupDef"                                     , { "RimWorld"     , "AbilityGroupDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.AnomalyPlaystyleDef"                                 , { "RimWorld"     , "AnomalyPlaystyleDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.ApparelRequirement"                                  , { "RimWorld"     , "ApparelRequirement"                                  , ""                                                       , { "groupLabel" }, {}, { { "bodyPartGroupsMatchAny", "Verse.BodyPartGroupDef" }, { "requiredDefs", "Verse.ThingDef" } }, {}, }, },
	{ "RimWorld.BabyPlayDef"                                         , { "RimWorld"     , "BabyPlayDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.BackstoryDef"                                        , { "RimWorld"     , "BackstoryDef"                                        , "Verse.Def"                                              , { "title", "titleFemale", "titleShort", "titleShortFemale", "label", "description", "ignoreConfigErrors" }, {}, { { "cachedDisabledWorkTypes", "Verse.WorkTypeDef" } }, { { "bodyTypeGlobal", "RimWorld.BodyTypeDef" }, { "bodyTypeFemale", "RimWorld.BodyTypeDef" }, { "bodyTypeMale", "RimWorld.BodyTypeDef" }, { "nameMaker", "Verse.RulePackDef" } }, }, },
	{ "RimWorld.BeardDef"                                            , { "RimWorld"     , "BeardDef"                                            , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "overrideShaderTypeDef", "Verse.ShaderTypeDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredMutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.BillRepeatModeDef"                                   , { "RimWorld"     , "BillRepeatModeDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.BillStoreModeDef"                                    , { "RimWorld"     , "BillStoreModeDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.BiomeDef"                                            , { "RimWorld"     , "BiomeDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "soundsAmbient", "Verse.SoundDef" }, { "allowedPackAnimals", "Verse.ThingDef" }, { "cachedWildPlants", "Verse.ThingDef" } }, { { "foragedFood", "Verse.ThingDef" } }, }, },
	{ "RimWorld.BodyTypeDef"                                         , { "RimWorld"     , "BodyTypeDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.BossDef"                                             , { "RimWorld"     , "BossDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "kindDef", "Verse.PawnKindDef" } }, }, },
	{ "RimWorld.BossgroupDef"                                        , { "RimWorld"     , "BossgroupDef"                                        , "Verse.Def"                                              , { "leaderDescription", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "boss", "RimWorld.BossDef" }, { "quest", "RimWorld.QuestScriptDef" }, { "rewardDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.ChemicalDef"                                         , { "RimWorld"     , "ChemicalDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "addictionHediff", "Verse.HediffDef" }, { "toleranceHediff", "Verse.HediffDef" } }, }, },
	{ "RimWorld.ColorDef"                                            , { "RimWorld"     , "ColorDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.ComplexLayoutDef"                                    , { "RimWorld"     , "ComplexLayoutDef"                                    , "RimWorld.LayoutDef"                                     , { "label", "description", "ignoreConfigErrors" }, {}, { { "roomDefs", "RimWorld.LayoutRoomDef" } }, { { "rewardThingSetMakerDef", "RimWorld.ThingSetMakerDef" } }, }, },
	{ "RimWorld.ComplexThreatDef"                                    , { "RimWorld"     , "ComplexThreatDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "faction", "RimWorld.FactionDef" } }, }, },
	{ "RimWorld.CompProperties_AbilityConvert"                       , { "RimWorld"     , "CompProperties_AbilityConvert"                       , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage", "failMessage" }, {}, {}, { { "failedThoughtInitiator", "RimWorld.ThoughtDef" }, { "failedThoughtRecipient", "RimWorld.ThoughtDef" }, { "clamorType", "Verse.ClamorDef" }, { "sound", "Verse.SoundDef" }, { "soundMale", "Verse.SoundDef" }, { "soundFemale", "Verse.SoundDef" }, { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.CompProperties_AbilityCounsel"                       , { "RimWorld"     , "CompProperties_AbilityCounsel"                       , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage", "successMessageNoNegativeThought", "failMessage" }, {}, {}, { { "failedThoughtRecipient", "RimWorld.ThoughtDef" }, { "clamorType", "Verse.ClamorDef" }, { "sound", "Verse.SoundDef" }, { "soundMale", "Verse.SoundDef" }, { "soundFemale", "Verse.SoundDef" }, { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.CompProperties_AbilityReassure"                      , { "RimWorld"     , "CompProperties_AbilityReassure"                      , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage" }, {}, {}, { { "clamorType", "Verse.ClamorDef" }, { "sound", "Verse.SoundDef" }, { "soundMale", "Verse.SoundDef" }, { "soundFemale", "Verse.SoundDef" }, { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.CompProperties_Activity"                             , { "RimWorld"     , "CompProperties_Activity"                             , "Verse.CompProperties"                                   , { "letterTitle", "letterDesc" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_Analyzable"                           , { "RimWorld"     , "CompProperties_Analyzable"                           , "RimWorld.CompProperties_Interactable"                   , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, { { "progressedLetterDef", "Verse.LetterDef" }, { "completedLetterDef", "Verse.LetterDef" }, { "repeatCompletedLetterDef", "Verse.LetterDef" }, { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_ApparelReloadable"                    , { "RimWorld"     , "CompProperties_ApparelReloadable"                    , "RimWorld.CompProperties_ApparelVerbOwnerCharged"        , { "cooldownGerund", "chargeNoun" }, {}, {}, { { "ammoDef", "Verse.ThingDef" }, { "soundReload", "Verse.SoundDef" }, { "hotKey", "Verse.KeyBindingDef" } }, }, },
	{ "RimWorld.CompProperties_ApparelVerbOwnerCharged"              , { "RimWorld"     , "CompProperties_ApparelVerbOwnerCharged"              , "RimWorld.CompProperties_ApparelVerbOwner"               , { "chargeNoun" }, {}, {}, { { "hotKey", "Verse.KeyBindingDef" } }, }, },
	{ "RimWorld.CompProperties_AssignableToPawn"                     , { "RimWorld"     , "CompProperties_AssignableToPawn"                     , "Verse.CompProperties"                                   , { "noAssignablePawnsDesc" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_AgeReversalCycle"      , { "RimWorld"     , "CompProperties_BiosculpterPod_AgeReversalCycle"      , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "requiredResearch", "Verse.ResearchProjectDef" } }, { { "gainThoughtOnCompletion", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_BaseCycle"             , { "RimWorld"     , "CompProperties_BiosculpterPod_BaseCycle"             , "Verse.CompProperties"                                   , { "label", "description" }, {}, { { "requiredResearch", "Verse.ResearchProjectDef" } }, { { "gainThoughtOnCompletion", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_HealingCycle"          , { "RimWorld"     , "CompProperties_BiosculpterPod_HealingCycle"          , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "bodyPartsToRestore", "Verse.BodyPartDef" }, { "conditionsToPossiblyCure", "Verse.HediffDef" }, { "requiredResearch", "Verse.ResearchProjectDef" } }, { { "gainThoughtOnCompletion", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_PleasureCycle"         , { "RimWorld"     , "CompProperties_BiosculpterPod_PleasureCycle"         , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "requiredResearch", "Verse.ResearchProjectDef" } }, { { "gainThoughtOnCompletion", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.CompProperties_Chimera"                              , { "RimWorld"     , "CompProperties_Chimera"                              , "Verse.CompProperties"                                   , { "simpleAnimalLabel" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_CompAnalyzableBiosignature"           , { "RimWorld"     , "CompProperties_CompAnalyzableBiosignature"           , "RimWorld.CompProperties_Analyzable"                     , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, { { "progressedLetterDef", "Verse.LetterDef" }, { "completedLetterDef", "Verse.LetterDef" }, { "repeatCompletedLetterDef", "Verse.LetterDef" }, { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_CompAnalyzableUnlockResearch"         , { "RimWorld"     , "CompProperties_CompAnalyzableUnlockResearch"         , "RimWorld.CompProperties_Analyzable"                     , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, { { "progressedLetterDef", "Verse.LetterDef" }, { "completedLetterDef", "Verse.LetterDef" }, { "repeatCompletedLetterDef", "Verse.LetterDef" }, { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_DestroyAfterDelay"                    , { "RimWorld"     , "CompProperties_DestroyAfterDelay"                    , "Verse.CompProperties"                                   , { "countdownLabel" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_Devourer"                             , { "RimWorld"     , "CompProperties_Devourer"                             , "Verse.CompProperties"                                   , { "messageDigested", "messageEmerged", "messageEmergedCorpse", "messageDigestionCompleted", "digestingInspector" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_DisableUnnaturalCorpse"               , { "RimWorld"     , "CompProperties_DisableUnnaturalCorpse"               , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_EquippableAbilityReloadable"          , { "RimWorld"     , "CompProperties_EquippableAbilityReloadable"          , "RimWorld.CompProperties_EquippableAbility"              , { "chargeNoun", "cooldownGerund" }, {}, {}, { { "ammoDef", "Verse.ThingDef" }, { "soundReload", "Verse.SoundDef" }, { "abilityDef", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.CompProperties_GiveThoughtToAllMapPawnsOnDestroy"    , { "RimWorld"     , "CompProperties_GiveThoughtToAllMapPawnsOnDestroy"    , "Verse.CompProperties"                                   , { "message" }, {}, {}, { { "thought", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.CompProperties_GoldenCube"                           , { "RimWorld"     , "CompProperties_GoldenCube"                           , "RimWorld.CompProperties_Interactable"                   , { "letterDeactivatedLabel", "letterDeactivatedDesc", "letterDeactivatedAppend", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_GrayStatue"                           , { "RimWorld"     , "CompProperties_GrayStatue"                           , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_GrayStatueGas"                        , { "RimWorld"     , "CompProperties_GrayStatueGas"                        , "RimWorld.CompProperties_GrayStatue"                     , { "letterLabel", "letterText" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_GrayStatueTeleporter"                 , { "RimWorld"     , "CompProperties_GrayStatueTeleporter"                 , "RimWorld.CompProperties_GrayStatue"                     , { "letterLabel", "letterText" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_HasSources"                           , { "RimWorld"     , "CompProperties_HasSources"                           , "Verse.CompProperties"                                   , { "inspectStringLabel" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_HoldingPlatformTarget"                , { "RimWorld"     , "CompProperties_HoldingPlatformTarget"                , "Verse.CompProperties"                                   , { "capturedLetterLabel", "capturedLetterText" }, {}, {}, { { "heldPawnKind", "Verse.PawnKindDef" } }, }, },
	{ "RimWorld.CompProperties_InspectString"                        , { "RimWorld"     , "CompProperties_InspectString"                        , "Verse.CompProperties"                                   , { "inspectString" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_InspectStringStatValue"               , { "RimWorld"     , "CompProperties_InspectStringStatValue"               , "RimWorld.CompProperties_InspectString"                  , { "inspectString" }, {}, {}, { { "stat", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.CompProperties_Interactable"                         , { "RimWorld"     , "CompProperties_Interactable"                         , "Verse.CompProperties"                                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_LabyrinthDoor"                        , { "RimWorld"     , "CompProperties_LabyrinthDoor"                        , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_LeavingsLetter"                       , { "RimWorld"     , "CompProperties_LeavingsLetter"                       , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, { { "letterDef", "Verse.LetterDef" }, { "leavingsFilter", "Verse.ThingFilter" } }, }, },
	{ "RimWorld.CompProperties_MechPowerCell"                        , { "RimWorld"     , "CompProperties_MechPowerCell"                        , "Verse.CompProperties"                                   , { "labelOverride", "tooltipOverride" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_NeuralSupercharger"                   , { "RimWorld"     , "CompProperties_NeuralSupercharger"                   , "RimWorld.CompProperties_Rechargeable"                   , { "jobString" }, {}, {}, { { "effectCharged", "Verse.EffecterDef" }, { "chargedSoundDef", "Verse.SoundDef" }, { "dischargeSoundDef", "Verse.SoundDef" } }, }, },
	{ "RimWorld.CompProperties_Nociosphere"                          , { "RimWorld"     , "CompProperties_Nociosphere"                          , "RimWorld.CompProperties_Interactable"                   , { "onslaughtInspectText", "becomingUnstableInspectText", "unstableInspectText", "unstableWarning", "leftLetterLabel", "leftLetterText", "onslaughtEndedMessage", "departingMessage", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_ObeliskDeactivationInteractor"        , { "RimWorld"     , "CompProperties_ObeliskDeactivationInteractor"        , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_ObeliskLabyrinth"                     , { "RimWorld"     , "CompProperties_ObeliskLabyrinth"                     , "RimWorld.CompProperties_Interactable"                   , { "messageActivating", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_ObeliskTriggerInteractor"             , { "RimWorld"     , "CompProperties_ObeliskTriggerInteractor"             , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, { { "activateStat", "RimWorld.StatDef" }, { "fleckOnUsed", "Verse.FleckDef" }, { "cooldownFleck", "Verse.FleckDef" }, { "soundActivate", "Verse.SoundDef" }, { "interactionEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.CompProperties_ProximityLetter"                      , { "RimWorld"     , "CompProperties_ProximityLetter"                      , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_Refuelable"                           , { "RimWorld"     , "CompProperties_Refuelable"                           , "Verse.CompProperties"                                   , { "fuelLabel", "fuelGizmoLabel", "outOfFuelMessage" }, {}, {}, { { "fuelFilter", "Verse.ThingFilter" } }, }, },
	{ "RimWorld.CompProperties_Schedule"                             , { "RimWorld"     , "CompProperties_Schedule"                             , "Verse.CompProperties"                                   , { "offMessage" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_StatEntry"                            , { "RimWorld"     , "CompProperties_StatEntry"                            , "Verse.CompProperties"                                   , { "statLabel", "reportText" }, {}, {}, { { "statCategoryDef", "RimWorld.StatCategoryDef" } }, }, },
	{ "RimWorld.CompProperties_StopManhunter"                        , { "RimWorld"     , "CompProperties_StopManhunter"                        , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage" }, {}, {}, { { "clamorType", "Verse.ClamorDef" }, { "sound", "Verse.SoundDef" }, { "soundMale", "Verse.SoundDef" }, { "soundFemale", "Verse.SoundDef" }, { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.CompProperties_Studiable"                            , { "RimWorld"     , "CompProperties_Studiable"                            , "Verse.CompProperties"                                   , { "completedLetterTitle", "completedLetterText", "completedMessage" }, {}, {}, { { "knowledgeCategory", "RimWorld.KnowledgeCategoryDef" }, { "completedLetterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_StudiableMonolith"                    , { "RimWorld"     , "CompProperties_StudiableMonolith"                    , "RimWorld.CompProperties_Studiable"                      , { "completedLetterTitle", "completedLetterText", "completedMessage" }, {}, {}, { { "knowledgeCategory", "RimWorld.KnowledgeCategoryDef" }, { "completedLetterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.CompProperties_TempControl"                          , { "RimWorld"     , "CompProperties_TempControl"                          , "Verse.CompProperties"                                   , { "inspectString" }, {}, {}, {}, }, },
	{ "RimWorld.CompProperties_Transmute"                            , { "RimWorld"     , "CompProperties_Transmute"                            , "RimWorld.CompProperties_AbilityEffect"                  , { "failedMessage" }, {}, { { "outcomeItems", "Verse.ThingDef" }, { "outcomeStuff", "Verse.ThingDef" } }, { { "clamorType", "Verse.ClamorDef" }, { "sound", "Verse.SoundDef" }, { "soundMale", "Verse.SoundDef" }, { "soundFemale", "Verse.SoundDef" }, { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.CompProperties_Usable"                               , { "RimWorld"     , "CompProperties_Usable"                               , "Verse.CompProperties"                                   , { "useLabel", "useMessage" }, {}, { { "allowedMutants", "RimWorld.MutantDef" } }, { { "useJob", "Verse.JobDef" }, { "userMustHaveHediff", "Verse.HediffDef" }, { "floatMenuFactionIcon", "RimWorld.FactionDef" }, { "warmupMote", "Verse.ThingDef" }, { "finalizeMote", "Verse.ThingDef" } }, }, },
	{ "RimWorld.ConceptDef"                                          , { "RimWorld"     , "ConceptDef"                                          , "Verse.Def"                                              , { "helpText", "helpTextController", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.CultureDef"                                          , { "RimWorld"     , "CultureDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "pawnNameMaker", "Verse.RulePackDef" }, { "pawnNameMakerFemale", "Verse.RulePackDef" }, { "ideoNameMaker", "Verse.RulePackDef" }, { "deityNameMaker", "Verse.RulePackDef" }, { "deityTypeMaker", "Verse.RulePackDef" }, { "leaderTitleMaker", "Verse.RulePackDef" }, { "festivalNameMaker", "Verse.RulePackDef" } }, }, },
	{ "RimWorld.DebugTabMenuDef"                                     , { "RimWorld"     , "DebugTabMenuDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.DeityNameType"                                       , { "RimWorld"     , "DeityNameType"                                       , ""                                                       , { "type" }, {}, {}, {}, }, },
	{ "RimWorld.DifficultyDef"                                       , { "RimWorld"     , "DifficultyDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.DrugPolicyDef"                                       , { "RimWorld"     , "DrugPolicyDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.EntityCategoryDef"                                   , { "RimWorld"     , "EntityCategoryDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.EntityCodexEntryDef"                                 , { "RimWorld"     , "EntityCodexEntryDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "linkedThings", "Verse.ThingDef" }, { "linkedIncidents", "RimWorld.IncidentDef" }, { "discoveredResearchProjects", "Verse.ResearchProjectDef" }, { "provocationIncidents", "RimWorld.IncidentDef" }, { "hideInPlaystyles", "RimWorld.AnomalyPlaystyleDef" } }, { { "category", "RimWorld.EntityCategoryDef" }, { "useDescriptionFrom", "Verse.ThingDef" } }, }, },
	{ "RimWorld.ExpansionDef"                                        , { "RimWorld"     , "ExpansionDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.ExpectationDef"                                      , { "RimWorld"     , "ExpectationDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.FactionDef"                                          , { "RimWorld"     , "FactionDef"                                          , "Verse.Def"                                              , { "fixedName", "pawnSingular", "pawnsPlural", "leaderTitle", "leaderTitleFemale", "royalFavorLabel", "ideoDescription", "label", "description", "ignoreConfigErrors" }, {}, { { "startingResearchTags", "Verse.ResearchProjectTagDef" }, { "startingTechprintsResearchTags", "Verse.ResearchProjectTagDef" }, { "fixedLeaderKinds", "Verse.PawnKindDef" }, { "caravanTraderKinds", "RimWorld.TraderKindDef" }, { "visitorTraderKinds", "RimWorld.TraderKindDef" }, { "baseTraderKinds", "RimWorld.TraderKindDef" }, { "disallowedRaidStrategies", "RimWorld.RaidStrategyDef" }, { "disallowedRaidAgeRestrictions", "RimWorld.RaidAgeRestrictionDef" }, { "permanentEnemyToEveryoneExcept", "RimWorld.FactionDef" }, { "royalTitleInheritanceRelations", "RimWorld.PawnRelationDef" }, { "allowedCultures", "RimWorld.CultureDef" }, { "requiredMemes", "RimWorld.MemeDef" }, { "allowedMemes", "RimWorld.MemeDef" }, { "disallowedMemes", "RimWorld.MemeDef" }, { "disallowedPrecepts", "RimWorld.PreceptDef" }, { "styles", "Verse.StyleCategoryDef" }, { "forcedMemes", "RimWorld.MemeDef" }, { "royalTitlesAwardableInSeniorityOrderForReading", "RimWorld.RoyalTitleDef" }, { "royalTitlesAllInSeniorityOrderForReading", "RimWorld.RoyalTitleDef" } }, { { "factionNameMaker", "Verse.RulePackDef" }, { "settlementNameMaker", "Verse.RulePackDef" }, { "playerInitialSettlementNameMaker", "Verse.RulePackDef" }, { "basicMemberKind", "Verse.PawnKindDef" }, { "dropPodActive", "Verse.ThingDef" }, { "dropPodIncoming", "Verse.ThingDef" }, { "replacesFaction", "RimWorld.FactionDef" }, { "apparelStuffFilter", "Verse.ThingFilter" }, { "raidLootMaker", "RimWorld.ThingSetMakerDef" } }, }, },
	{ "RimWorld.FeatureDef"                                          , { "RimWorld"     , "FeatureDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "rootBiomes", "RimWorld.BiomeDef" }, { "acceptableBiomes", "RimWorld.BiomeDef" } }, { { "nameMaker", "Verse.RulePackDef" } }, }, },
	{ "RimWorld.FleshTypeDef"                                        , { "RimWorld"     , "FleshTypeDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "ateDirect", "RimWorld.ThoughtDef" }, { "ateAsIngredient", "RimWorld.ThoughtDef" }, { "corpseCategory", "Verse.ThingCategoryDef" }, { "damageEffecter", "Verse.EffecterDef" } }, }, },
	{ "RimWorld.FurDef"                                              , { "RimWorld"     , "FurDef"                                              , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "overrideShaderTypeDef", "Verse.ShaderTypeDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredMutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.GatheringDef"                                        , { "RimWorld"     , "GatheringDef"                                        , "Verse.Def"                                              , { "letterTitle", "letterText", "calledOffMessage", "finishedMessage", "label", "description", "ignoreConfigErrors" }, {}, { { "gatherSpotDefs", "Verse.ThingDef" }, { "requiredTitleAny", "RimWorld.RoyalTitleDef" } }, { { "duty", "Verse.AI.DutyDef" } }, }, },
	{ "RimWorld.GauranlenTreeModeDef"                                , { "RimWorld"     , "GauranlenTreeModeDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "requiredMemes", "RimWorld.MemeDef" }, { "displayedStats", "RimWorld.StatDef" } }, { { "previousStage", "RimWorld.GauranlenTreeModeDef" }, { "pawnKindDef", "Verse.PawnKindDef" } }, }, },
	{ "RimWorld.GeneTemplateDef"                                     , { "RimWorld"     , "GeneTemplateDef"                                     , "Verse.Def"                                              , { "labelShortAdj", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "displayCategory", "Verse.GeneCategoryDef" } }, }, },
	{ "RimWorld.GoodwillSituationDef"                                , { "RimWorld"     , "GoodwillSituationDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "meme", "RimWorld.MemeDef" }, { "otherMeme", "RimWorld.MemeDef" } }, }, },
	{ "RimWorld.HairDef"                                             , { "RimWorld"     , "HairDef"                                             , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "overrideShaderTypeDef", "Verse.ShaderTypeDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredMutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.HediffGiverSetDef"                                   , { "RimWorld"     , "HediffGiverSetDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.HibernatableStateDef"                                , { "RimWorld"     , "HibernatableStateDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.HistoryAutoRecorderDef"                              , { "RimWorld"     , "HistoryAutoRecorderDef"                              , "Verse.Def"                                              , { "graphLabelY", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.HistoryAutoRecorderGroupDef"                         , { "RimWorld"     , "HistoryAutoRecorderGroupDef"                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "historyAutoRecorderDefs", "RimWorld.HistoryAutoRecorderDef" } }, {}, }, },
	{ "RimWorld.HistoryEventDef"                                     , { "RimWorld"     , "HistoryEventDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.IdeoColorDef"                                        , { "RimWorld"     , "IdeoColorDef"                                        , "RimWorld.IdeoSymbolPartDef"                             , { "label", "description", "ignoreConfigErrors" }, {}, { { "memes", "RimWorld.MemeDef" }, { "cultures", "RimWorld.CultureDef" } }, { { "colorDef", "RimWorld.ColorDef" } }, }, },
	{ "RimWorld.IdeoFoundationDef"                                   , { "RimWorld"     , "IdeoFoundationDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.IdeoIconDef"                                         , { "RimWorld"     , "IdeoIconDef"                                         , "RimWorld.IdeoSymbolPartDef"                             , { "label", "description", "ignoreConfigErrors" }, {}, { { "memes", "RimWorld.MemeDef" }, { "cultures", "RimWorld.CultureDef" } }, {}, }, },
	{ "RimWorld.IdeoPresetCategoryDef"                               , { "RimWorld"     , "IdeoPresetCategoryDef"                               , "Verse.Def"                                              , { "groupLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.IdeoPresetDef"                                       , { "RimWorld"     , "IdeoPresetDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "memes", "RimWorld.MemeDef" } }, { { "categoryDef", "RimWorld.IdeoPresetCategoryDef" } }, }, },
	{ "RimWorld.IdeoSymbolPack"                                      , { "RimWorld"     , "IdeoSymbolPack"                                      , ""                                                       , { "ideoName", "theme", "adjective", "member" }, {}, {}, {}, }, },
	{ "RimWorld.IdeoSymbolPartDef"                                   , { "RimWorld"     , "IdeoSymbolPartDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "memes", "RimWorld.MemeDef" }, { "cultures", "RimWorld.CultureDef" } }, {}, }, },
	{ "RimWorld.IncidentCategoryDef"                                 , { "RimWorld"     , "IncidentCategoryDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "tale", "RimWorld.TaleDef" } }, }, },
	{ "RimWorld.IncidentDef"                                         , { "RimWorld"     , "IncidentDef"                                         , "Verse.Def"                                              , { "letterText", "letterLabel", "diseaseLethalLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "targetTags", "RimWorld.IncidentTargetTagDef" }, { "allowedBiomes", "RimWorld.BiomeDef" }, { "disallowedBiomes", "RimWorld.BiomeDef" }, { "letterHyperlinkHediffDefs", "Verse.HediffDef" }, { "diseasePartsToAffect", "Verse.BodyPartDef" }, { "cachedRefireCheckIncidents", "RimWorld.IncidentDef" } }, { { "category", "RimWorld.IncidentCategoryDef" }, { "tale", "RimWorld.TaleDef" }, { "codexEntry", "RimWorld.EntityCodexEntryDef" }, { "letterDef", "Verse.LetterDef" }, { "pawnKind", "Verse.PawnKindDef" }, { "pawnHediff", "Verse.HediffDef" }, { "gameCondition", "Verse.GameConditionDef" }, { "diseaseIncident", "Verse.HediffDef" }, { "mechClusterBuilding", "Verse.ThingDef" }, { "questScriptDef", "RimWorld.QuestScriptDef" }, { "treeDef", "Verse.ThingDef" }, { "treeGenStepDef", "Verse.GenStepDef" } }, }, },
	{ "RimWorld.IncidentTargetTagDef"                                , { "RimWorld"     , "IncidentTargetTagDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.InfectionPathwayDef"                                 , { "RimWorld"     , "InfectionPathwayDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.IngestibleProperties"                                , { "RimWorld"     , "IngestibleProperties"                                , ""                                                       , { "ingestCommandString", "ingestReportString", "ingestReportStringEat" }, {}, {}, { { "parent", "Verse.ThingDef" }, { "tasteThought", "RimWorld.ThoughtDef" }, { "specialThoughtDirect", "RimWorld.ThoughtDef" }, { "specialThoughtAsIngredient", "RimWorld.ThoughtDef" }, { "ateEvent", "RimWorld.HistoryEventDef" }, { "ingestEffect", "Verse.EffecterDef" }, { "ingestEffectEat", "Verse.EffecterDef" }, { "ingestSound", "Verse.SoundDef" }, { "joyKind", "RimWorld.JoyKindDef" }, { "sourceDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.InspirationDef"                                      , { "RimWorld"     , "InspirationDef"                                      , "Verse.Def"                                              , { "beginLetter", "beginLetterLabel", "endMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredNonDisabledStats", "RimWorld.StatDef" }, { "requiredNonDisabledWorkTypes", "Verse.WorkTypeDef" }, { "requiredAnyNonDisabledWorkType", "Verse.WorkTypeDef" }, { "requiredCapacities", "Verse.PawnCapacityDef" }, { "associatedSkills", "RimWorld.SkillDef" } }, { { "beginLetterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.InstructionDef"                                      , { "RimWorld"     , "InstructionDef"                                      , "Verse.Def"                                              , { "text", "textController", "rejectInputMessage", "onMapInstruction", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "eventTagInitiateSource", "RimWorld.InstructionDef" }, { "concept", "RimWorld.ConceptDef" }, { "thingDef", "Verse.ThingDef" }, { "recipeDef", "Verse.RecipeDef" }, { "giveOnActivateDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.InteractionDef"                                      , { "RimWorld"     , "InteractionDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "interactionMote", "Verse.ThingDef" }, { "initiatorThought", "RimWorld.ThoughtDef" }, { "initiatorXpGainSkill", "RimWorld.SkillDef" }, { "recipientThought", "RimWorld.ThoughtDef" }, { "recipientXpGainSkill", "RimWorld.SkillDef" }, { "logRulesInitiator", "Verse.Grammar.RulePack" }, { "logRulesRecipient", "Verse.Grammar.RulePack" } }, }, },
	{ "RimWorld.IssueDef"                                            , { "RimWorld"     , "IssueDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AcceptRole"                                 , { "RimWorld"     , "JobGiver_AcceptRole"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "soundDefMale", "Verse.SoundDef" }, { "soundDefFemale", "Verse.SoundDef" } }, }, },
	{ "RimWorld.JobGiver_ActivityDormant"                            , { "RimWorld"     , "JobGiver_ActivityDormant"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIAbilityFight"                             , { "RimWorld"     , "JobGiver_AIAbilityFight"                             , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AIBreaching"                                , { "RimWorld"     , "JobGiver_AIBreaching"                                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AICastAbility"                              , { "RimWorld"     , "JobGiver_AICastAbility"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AICastAbilityOnSelf"                        , { "RimWorld"     , "JobGiver_AICastAbilityOnSelf"                        , "RimWorld.JobGiver_AICastAbility"                        , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AICastAnimalWarcall"                        , { "RimWorld"     , "JobGiver_AICastAnimalWarcall"                        , "RimWorld.JobGiver_AICastAbility"                        , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AIDefendEscortee"                           , { "RimWorld"     , "JobGiver_AIDefendEscortee"                           , "RimWorld.JobGiver_AIDefendPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIDefendMaster"                             , { "RimWorld"     , "JobGiver_AIDefendMaster"                             , "RimWorld.JobGiver_AIDefendPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIDefendOverseer"                           , { "RimWorld"     , "JobGiver_AIDefendOverseer"                           , "RimWorld.JobGiver_AIDefendPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIDefendPawn"                               , { "RimWorld"     , "JobGiver_AIDefendPawn"                               , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIDefendPoint"                              , { "RimWorld"     , "JobGiver_AIDefendPoint"                              , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIDefendSelf"                               , { "RimWorld"     , "JobGiver_AIDefendSelf"                               , "RimWorld.JobGiver_AIDefendPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFightEnemies"                             , { "RimWorld"     , "JobGiver_AIFightEnemies"                             , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFightEnemy"                               , { "RimWorld"     , "JobGiver_AIFightEnemy"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFollowEscortee"                           , { "RimWorld"     , "JobGiver_AIFollowEscortee"                           , "RimWorld.JobGiver_AIFollowPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFollowMaster"                             , { "RimWorld"     , "JobGiver_AIFollowMaster"                             , "RimWorld.JobGiver_AIFollowPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFollowOverseer"                           , { "RimWorld"     , "JobGiver_AIFollowOverseer"                           , "RimWorld.JobGiver_AIFollowPawn"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIFollowPawn"                               , { "RimWorld"     , "JobGiver_AIFollowPawn"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIGotoNearestHostile"                       , { "RimWorld"     , "JobGiver_AIGotoNearestHostile"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIJumpEscapeEnemies"                        , { "RimWorld"     , "JobGiver_AIJumpEscapeEnemies"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AIJumpToJobRescueTarget"                    , { "RimWorld"     , "JobGiver_AIJumpToJobRescueTarget"                    , "RimWorld.JobGiver_AIJumpToJobTarget"                    , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AIJumpToJobTarget"                          , { "RimWorld"     , "JobGiver_AIJumpToJobTarget"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AIReleaseMechs"                             , { "RimWorld"     , "JobGiver_AIReleaseMechs"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIResurrectTarget"                          , { "RimWorld"     , "JobGiver_AIResurrectTarget"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AISapper"                                   , { "RimWorld"     , "JobGiver_AISapper"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AISkipToJobTarget"                          , { "RimWorld"     , "JobGiver_AISkipToJobTarget"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "ability", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.JobGiver_AITrashBuildingsDistant"                    , { "RimWorld"     , "JobGiver_AITrashBuildingsDistant"                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AITrashColonyClose"                         , { "RimWorld"     , "JobGiver_AITrashColonyClose"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AITrashDutyFocus"                           , { "RimWorld"     , "JobGiver_AITrashDutyFocus"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIWaitAmbush"                               , { "RimWorld"     , "JobGiver_AIWaitAmbush"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AIWaitWithOverseer"                         , { "RimWorld"     , "JobGiver_AIWaitWithOverseer"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AnimalFlee"                                 , { "RimWorld"     , "JobGiver_AnimalFlee"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_AnimaLinking"                               , { "RimWorld"     , "JobGiver_AnimaLinking"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Autofeed"                                   , { "RimWorld"     , "JobGiver_Autofeed"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Berserk"                                    , { "RimWorld"     , "JobGiver_Berserk"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Berserk_Warcall"                            , { "RimWorld"     , "JobGiver_Berserk_Warcall"                            , "RimWorld.JobGiver_Berserk"                              , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_BestowingCeremony"                          , { "RimWorld"     , "JobGiver_BestowingCeremony"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Binge"                                      , { "RimWorld"     , "JobGiver_Binge"                                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_BingeDrug"                                  , { "RimWorld"     , "JobGiver_BingeDrug"                                  , "RimWorld.JobGiver_Binge"                                , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_BingeFood"                                  , { "RimWorld"     , "JobGiver_BingeFood"                                  , "RimWorld.JobGiver_Binge"                                , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Blind"                                      , { "RimWorld"     , "JobGiver_Blind"                                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_BringBabyToSafety"                          , { "RimWorld"     , "JobGiver_BringBabyToSafety"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ChimeraAttackNearbyHumans"                  , { "RimWorld"     , "JobGiver_ChimeraAttackNearbyHumans"                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ConcertOrganizerPlayInstrument"             , { "RimWorld"     , "JobGiver_ConcertOrganizerPlayInstrument"             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ConfigurableHostilityResponse"              , { "RimWorld"     , "JobGiver_ConfigurableHostilityResponse"              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_CreateAndEnterCocoon"                       , { "RimWorld"     , "JobGiver_CreateAndEnterCocoon"                       , "RimWorld.JobGiver_CreateAndEnterDryadHolder"            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_CreateAndEnterDryadHolder"                  , { "RimWorld"     , "JobGiver_CreateAndEnterDryadHolder"                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_CreateAndEnterHealingPod"                   , { "RimWorld"     , "JobGiver_CreateAndEnterHealingPod"                   , "RimWorld.JobGiver_CreateAndEnterDryadHolder"            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_CubeSculpting"                              , { "RimWorld"     , "JobGiver_CubeSculpting"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Dance"                                      , { "RimWorld"     , "JobGiver_Dance"                                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DeliverPawnToAltar"                         , { "RimWorld"     , "JobGiver_DeliverPawnToAltar"                         , "RimWorld.JobGiver_GotoTravelDestination"                , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.JobGiver_DeliverPawnToBed"                           , { "RimWorld"     , "JobGiver_DeliverPawnToBed"                           , "RimWorld.JobGiver_GotoTravelDestination"                , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.JobGiver_DeliverPawnToCell"                          , { "RimWorld"     , "JobGiver_DeliverPawnToCell"                          , "RimWorld.JobGiver_GotoTravelDestination"                , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.JobGiver_DeliverPawnToPsychicRitualCell"             , { "RimWorld"     , "JobGiver_DeliverPawnToPsychicRitualCell"             , "RimWorld.JobGiver_DeliverPawnToCell"                    , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.JobGiver_DoLovin"                                    , { "RimWorld"     , "JobGiver_DoLovin"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DropRandomGearOrApparel"                    , { "RimWorld"     , "JobGiver_DropRandomGearOrApparel"                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DropUnusedInventory"                        , { "RimWorld"     , "JobGiver_DropUnusedInventory"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DropWeapon"                                 , { "RimWorld"     , "JobGiver_DropWeapon"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Duel"                                       , { "RimWorld"     , "JobGiver_Duel"                                       , "RimWorld.JobGiver_AIFightEnemies"                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DuelPickupWeapon"                           , { "RimWorld"     , "JobGiver_DuelPickupWeapon"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_DyeHair"                                    , { "RimWorld"     , "JobGiver_DyeHair"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EatAtCannibalPlatter"                       , { "RimWorld"     , "JobGiver_EatAtCannibalPlatter"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EatInGatheringArea"                         , { "RimWorld"     , "JobGiver_EatInGatheringArea"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EatRandom"                                  , { "RimWorld"     , "JobGiver_EatRandom"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EnterPortal"                                , { "RimWorld"     , "JobGiver_EnterPortal"                                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EnterTransporter"                           , { "RimWorld"     , "JobGiver_EnterTransporter"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_EscapingHoldingPlatform"                    , { "RimWorld"     , "JobGiver_EscapingHoldingPlatform"                    , "RimWorld.JobGiver_AIFightEnemies"                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ExtinguishSelf"                             , { "RimWorld"     , "JobGiver_ExtinguishSelf"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FightFiresNearPoint"                        , { "RimWorld"     , "JobGiver_FightFiresNearPoint"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FireStartingSpree"                          , { "RimWorld"     , "JobGiver_FireStartingSpree"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleeAllPawns"                               , { "RimWorld"     , "JobGiver_FleeAllPawns"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleeDanger"                                 , { "RimWorld"     , "JobGiver_FleeDanger"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleeFire"                                   , { "RimWorld"     , "JobGiver_FleeFire"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleeForDistance"                            , { "RimWorld"     , "JobGiver_FleeForDistance"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleeImmediateThreat"                        , { "RimWorld"     , "JobGiver_FleeImmediateThreat"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FleePotentialExplosion"                     , { "RimWorld"     , "JobGiver_FleePotentialExplosion"                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_FollowRoper"                                , { "RimWorld"     , "JobGiver_FollowRoper"                                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ForceSleepNow"                              , { "RimWorld"     , "JobGiver_ForceSleepNow"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GatherOfferingsForPsychicRitual"            , { "RimWorld"     , "JobGiver_GatherOfferingsForPsychicRitual"            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetAgeReversal"                             , { "RimWorld"     , "JobGiver_GetAgeReversal"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetDeathrest"                               , { "RimWorld"     , "JobGiver_GetDeathrest"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetEnergy"                                  , { "RimWorld"     , "JobGiver_GetEnergy"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetEnergy_Charger"                          , { "RimWorld"     , "JobGiver_GetEnergy_Charger"                          , "RimWorld.JobGiver_GetEnergy"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetEnergy_SelfShutdown"                     , { "RimWorld"     , "JobGiver_GetEnergy_SelfShutdown"                     , "RimWorld.JobGiver_GetEnergy"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetFood"                                    , { "RimWorld"     , "JobGiver_GetFood"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetHemogen"                                 , { "RimWorld"     , "JobGiver_GetHemogen"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetJoy"                                     , { "RimWorld"     , "JobGiver_GetJoy"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetJoyInBed"                                , { "RimWorld"     , "JobGiver_GetJoyInBed"                                , "RimWorld.JobGiver_GetJoy"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetJoyInGatheringArea"                      , { "RimWorld"     , "JobGiver_GetJoyInGatheringArea"                      , "RimWorld.JobGiver_GetJoy"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetNeuralSupercharge"                       , { "RimWorld"     , "JobGiver_GetNeuralSupercharge"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GetRest"                                    , { "RimWorld"     , "JobGiver_GetRest"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GiveSpeech"                                 , { "RimWorld"     , "JobGiver_GiveSpeech"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "soundDefMale", "Verse.SoundDef" }, { "soundDefFemale", "Verse.SoundDef" } }, }, },
	{ "RimWorld.JobGiver_GiveSpeechFacingTarget"                     , { "RimWorld"     , "JobGiver_GiveSpeechFacingTarget"                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "soundDefMale", "Verse.SoundDef" }, { "soundDefFemale", "Verse.SoundDef" } }, }, },
	{ "RimWorld.JobGiver_GotoAndStandSociallyActive"                 , { "RimWorld"     , "JobGiver_GotoAndStandSociallyActive"                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_GotoTravelDestination"                      , { "RimWorld"     , "JobGiver_GotoTravelDestination"                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.JobGiver_HateChant"                                  , { "RimWorld"     , "JobGiver_HateChant"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Haul"                                       , { "RimWorld"     , "JobGiver_Haul"                                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_HaulCorpseToPublicPlace"                    , { "RimWorld"     , "JobGiver_HaulCorpseToPublicPlace"                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_HaulToPortal"                               , { "RimWorld"     , "JobGiver_HaulToPortal"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_HiveDefense"                                , { "RimWorld"     , "JobGiver_HiveDefense"                                , "RimWorld.JobGiver_AIFightEnemies"                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_IdleJoy"                                    , { "RimWorld"     , "JobGiver_IdleJoy"                                    , "RimWorld.JobGiver_GetJoy"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_InducePrisonerToEscape"                     , { "RimWorld"     , "JobGiver_InducePrisonerToEscape"                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_InduceSlaveToRebel"                         , { "RimWorld"     , "JobGiver_InduceSlaveToRebel"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_InsultingSpree"                             , { "RimWorld"     , "JobGiver_InsultingSpree"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_JumpInWater"                                , { "RimWorld"     , "JobGiver_JumpInWater"                                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_KeepLyingDown"                              , { "RimWorld"     , "JobGiver_KeepLyingDown"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Kidnap"                                     , { "RimWorld"     , "JobGiver_Kidnap"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_LayDownAwake"                               , { "RimWorld"     , "JobGiver_LayDownAwake"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_LayDownResting"                             , { "RimWorld"     , "JobGiver_LayDownResting"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_LayEgg"                                     , { "RimWorld"     , "JobGiver_LayEgg"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Learn"                                      , { "RimWorld"     , "JobGiver_Learn"                                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_LoadTransporters"                           , { "RimWorld"     , "JobGiver_LoadTransporters"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MaintainHives"                              , { "RimWorld"     , "JobGiver_MaintainHives"                              , "RimWorld.JobGiver_AIFightEnemies"                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Manhunter"                                  , { "RimWorld"     , "JobGiver_Manhunter"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ManTurrets"                                 , { "RimWorld"     , "JobGiver_ManTurrets"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ManTurretsNearPoint"                        , { "RimWorld"     , "JobGiver_ManTurretsNearPoint"                        , "RimWorld.JobGiver_ManTurrets"                           , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ManTurretsNearSelf"                         , { "RimWorld"     , "JobGiver_ManTurretsNearSelf"                         , "RimWorld.JobGiver_ManTurrets"                           , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MarryAdjacentPawn"                          , { "RimWorld"     , "JobGiver_MarryAdjacentPawn"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Mate"                                       , { "RimWorld"     , "JobGiver_Mate"                                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Meditate"                                   , { "RimWorld"     , "JobGiver_Meditate"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MeditateInBed"                              , { "RimWorld"     , "JobGiver_MeditateInBed"                              , "RimWorld.JobGiver_Meditate"                             , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MergeIntoGaumakerPod"                       , { "RimWorld"     , "JobGiver_MergeIntoGaumakerPod"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MetalhorrorFight"                           , { "RimWorld"     , "JobGiver_MetalhorrorFight"                           , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MineRandom"                                 , { "RimWorld"     , "JobGiver_MineRandom"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MoveDrugsToInventory"                       , { "RimWorld"     , "JobGiver_MoveDrugsToInventory"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_MurderousRage"                              , { "RimWorld"     , "JobGiver_MurderousRage"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_NociosphereDepart"                          , { "RimWorld"     , "JobGiver_NociosphereDepart"                          , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_NociosphereFight"                           , { "RimWorld"     , "JobGiver_NociosphereFight"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_NociosphereSkip"                            , { "RimWorld"     , "JobGiver_NociosphereSkip"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_NPCCastNonCombatAbilities"                  , { "RimWorld"     , "JobGiver_NPCCastNonCombatAbilities"                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Nuzzle"                                     , { "RimWorld"     , "JobGiver_Nuzzle"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_OptimizeApparel"                            , { "RimWorld"     , "JobGiver_OptimizeApparel"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PackAnimalFollowColonists"                  , { "RimWorld"     , "JobGiver_PackAnimalFollowColonists"                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PackFood"                                   , { "RimWorld"     , "JobGiver_PackFood"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PatientGoToBed"                             , { "RimWorld"     , "JobGiver_PatientGoToBed"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PickUpOpportunisticWeapon"                  , { "RimWorld"     , "JobGiver_PickUpOpportunisticWeapon"                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PlayTargetInstrument"                       , { "RimWorld"     , "JobGiver_PlayTargetInstrument"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PlayWithGoldenCube"                         , { "RimWorld"     , "JobGiver_PlayWithGoldenCube"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareCaravan_CollectPawns"                , { "RimWorld"     , "JobGiver_PrepareCaravan_CollectPawns"                , "RimWorld.JobGiver_PrepareCaravan_RopePawns"             , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareCaravan_GatherDownedPawns"           , { "RimWorld"     , "JobGiver_PrepareCaravan_GatherDownedPawns"           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareCaravan_GatherItems"                 , { "RimWorld"     , "JobGiver_PrepareCaravan_GatherItems"                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareCaravan_GatherPawns"                 , { "RimWorld"     , "JobGiver_PrepareCaravan_GatherPawns"                 , "RimWorld.JobGiver_PrepareCaravan_RopePawns"             , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareCaravan_RopePawns"                   , { "RimWorld"     , "JobGiver_PrepareCaravan_RopePawns"                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrepareSkylantern"                          , { "RimWorld"     , "JobGiver_PrepareSkylantern"                          , "RimWorld.JobGiver_GotoAndStandSociallyActive"           , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "def", "Verse.ThingDef" } }, }, },
	{ "RimWorld.JobGiver_PrisonerEscape"                             , { "RimWorld"     , "JobGiver_PrisonerEscape"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrisonerGetDressed"                         , { "RimWorld"     , "JobGiver_PrisonerGetDressed"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_PrisonerWaitInsteadOfEscaping"              , { "RimWorld"     , "JobGiver_PrisonerWaitInsteadOfEscaping"              , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ReachOutside"                               , { "RimWorld"     , "JobGiver_ReachOutside"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ReactToCloseMeleeThreat"                    , { "RimWorld"     , "JobGiver_ReactToCloseMeleeThreat"                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ReleaseEntity"                              , { "RimWorld"     , "JobGiver_ReleaseEntity"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Reload"                                     , { "RimWorld"     , "JobGiver_Reload"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_RescueNearby"                               , { "RimWorld"     , "JobGiver_RescueNearby"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ReturnedCaravan_PenAnimals"                 , { "RimWorld"     , "JobGiver_ReturnedCaravan_PenAnimals"                 , "RimWorld.JobGiver_PrepareCaravan_RopePawns"             , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ReturnToGauranlenTree"                      , { "RimWorld"     , "JobGiver_ReturnToGauranlenTree"                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_RevenantAttack"                             , { "RimWorld"     , "JobGiver_RevenantAttack"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_RevenantEscape"                             , { "RimWorld"     , "JobGiver_RevenantEscape"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_RevenantSleep"                              , { "RimWorld"     , "JobGiver_RevenantSleep"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_RevenantWander"                             , { "RimWorld"     , "JobGiver_RevenantWander"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Sacrifice"                                  , { "RimWorld"     , "JobGiver_Sacrifice"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SatifyChemicalDependency"                   , { "RimWorld"     , "JobGiver_SatifyChemicalDependency"                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SatisfyChemicalNeed"                        , { "RimWorld"     , "JobGiver_SatisfyChemicalNeed"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Scarify"                                    , { "RimWorld"     , "JobGiver_Scarify"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SeekAllowedArea"                            , { "RimWorld"     , "JobGiver_SeekAllowedArea"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SeekSafeTemperature"                        , { "RimWorld"     , "JobGiver_SeekSafeTemperature"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SelfShutdown"                               , { "RimWorld"     , "JobGiver_SelfShutdown"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SelfTend"                                   , { "RimWorld"     , "JobGiver_SelfTend"                                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ShamblerFight"                              , { "RimWorld"     , "JobGiver_ShamblerFight"                              , "RimWorld.JobGiver_AIFightEnemy"                         , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_ShamblerWander"                             , { "RimWorld"     , "JobGiver_ShamblerWander"                             , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SightstealerAttack"                         , { "RimWorld"     , "JobGiver_SightstealerAttack"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SlaughterEntity"                            , { "RimWorld"     , "JobGiver_SlaughterEntity"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SlaughterRandomAnimal"                      , { "RimWorld"     , "JobGiver_SlaughterRandomAnimal"                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SocialFighting"                             , { "RimWorld"     , "JobGiver_SocialFighting"                             , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SpectateDutySpectateRect"                   , { "RimWorld"     , "JobGiver_SpectateDutySpectateRect"                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_SpectateInCircleDuty"                       , { "RimWorld"     , "JobGiver_SpectateInCircleDuty"                       , "RimWorld.JobGiver_SpectateDutySpectateRect"             , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_StandAndBeSociallyActive"                   , { "RimWorld"     , "JobGiver_StandAndBeSociallyActive"                   , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_StandAndStare"                              , { "RimWorld"     , "JobGiver_StandAndStare"                              , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_StartRoaming"                               , { "RimWorld"     , "JobGiver_StartRoaming"                               , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Steal"                                      , { "RimWorld"     , "JobGiver_Steal"                                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_TakeCombatEnhancingDrug"                    , { "RimWorld"     , "JobGiver_TakeCombatEnhancingDrug"                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_TakeCountToInventory"                       , { "RimWorld"     , "JobGiver_TakeCountToInventory"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "def", "Verse.ThingDef" } }, }, },
	{ "RimWorld.JobGiver_TakeDrugsForDrugPolicy"                     , { "RimWorld"     , "JobGiver_TakeDrugsForDrugPolicy"                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_TakeForInventoryStock"                      , { "RimWorld"     , "JobGiver_TakeForInventoryStock"                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_TakeWoundedGuest"                           , { "RimWorld"     , "JobGiver_TakeWoundedGuest"                           , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_Tantrum"                                    , { "RimWorld"     , "JobGiver_Tantrum"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnloadMyLordCarriers"                       , { "RimWorld"     , "JobGiver_UnloadMyLordCarriers"                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnloadYourInventory"                        , { "RimWorld"     , "JobGiver_UnloadYourInventory"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseAttack"                      , { "RimWorld"     , "JobGiver_UnnaturalCorpseAttack"                      , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseIdle"                        , { "RimWorld"     , "JobGiver_UnnaturalCorpseIdle"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseSkip"                        , { "RimWorld"     , "JobGiver_UnnaturalCorpseSkip"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseSkipBackup"                  , { "RimWorld"     , "JobGiver_UnnaturalCorpseSkipBackup"                  , "RimWorld.JobGiver_UnnaturalCorpseSkip"                  , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseTowardVictimDirection"       , { "RimWorld"     , "JobGiver_UnnaturalCorpseTowardVictimDirection"       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_UnnaturalCorpseUnstuck"                     , { "RimWorld"     , "JobGiver_UnnaturalCorpseUnstuck"                     , "RimWorld.JobGiver_UnnaturalCorpseSkip"                  , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_WanderColony"                               , { "RimWorld"     , "JobGiver_WanderColony"                               , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_WanderControlGroupTarget"                   , { "RimWorld"     , "JobGiver_WanderControlGroupTarget"                   , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_WanderHive"                                 , { "RimWorld"     , "JobGiver_WanderHive"                                 , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_WanderInGatheringArea"                      , { "RimWorld"     , "JobGiver_WanderInGatheringArea"                      , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JobGiver_WanderOverseer"                             , { "RimWorld"     , "JobGiver_WanderOverseer"                             , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "RimWorld.JoyGiverDef"                                         , { "RimWorld"     , "JoyGiverDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "thingDefs", "Verse.ThingDef" }, { "requiredCapacities", "Verse.PawnCapacityDef" } }, { { "jobDef", "Verse.JobDef" }, { "joyKind", "RimWorld.JoyKindDef" } }, }, },
	{ "RimWorld.JoyKindDef"                                          , { "RimWorld"     , "JoyKindDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "titleRequiredAny", "RimWorld.RoyalTitleDef" } }, {}, }, },
	{ "RimWorld.KnowledgeCategoryDef"                                , { "RimWorld"     , "KnowledgeCategoryDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "overflowCategory", "RimWorld.KnowledgeCategoryDef" } }, }, },
	{ "RimWorld.LayoutDef"                                           , { "RimWorld"     , "LayoutDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "roomDefs", "RimWorld.LayoutRoomDef" } }, {}, }, },
	{ "RimWorld.LayoutRoomDef"                                       , { "RimWorld"     , "LayoutRoomDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "floorTypes", "Verse.TerrainDef" } }, { { "sketchResolverDef", "RimWorld.SketchResolverDef" } }, }, },
	{ "RimWorld.LearningDesireDef"                                   , { "RimWorld"     , "LearningDesireDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "RimWorld.LifeStageDef"                                        , { "RimWorld"     , "LifeStageDef"                                        , "Verse.Def"                                              , { "adjective", "customMoodTipString", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "thinkTreeMainOverride", "Verse.ThinkTreeDef" }, { "thinkTreeConstantOverride", "Verse.ThinkTreeDef" } }, }, },
	{ "RimWorld.MainButtonDef"                                       , { "RimWorld"     , "MainButtonDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "hotKey", "Verse.KeyBindingDef" } }, }, },
	{ "RimWorld.MapMeshFlagDef"                                      , { "RimWorld"     , "MapMeshFlagDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.MeditationFocusDef"                                  , { "RimWorld"     , "MeditationFocusDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.MemeDef"                                             , { "RimWorld"     , "MemeDef"                                             , "Verse.Def"                                              , { "worshipRoomLabel", "label", "description", "ignoreConfigErrors" }, { "symbolPacks" }, { { "requireAnyRitualSeat", "Verse.ThingDef" }, { "factionWhitelist", "RimWorld.FactionDef" }, { "fixedDeityNameTypes", "RimWorld.DeityNameType" }, { "replacementPatterns", "RimWorld.RitualPatternDef" }, { "consumableBuildings", "Verse.ThingDef" }, { "startingResearchProjects", "Verse.ResearchProjectDef" }, { "addDesignators", "Verse.BuildableDef" }, { "addDesignatorGroups", "Verse.DesignatorDropdownGroupDef" }, { "cachedAllDesignatorBuildables", "Verse.BuildableDef" } }, { { "groupDef", "RimWorld.MemeGroupDef" }, { "generalRules", "Verse.Grammar.RulePack" }, { "deityNameMakerOverride", "Verse.RulePackDef" }, { "deityTypeMakerOverride", "Verse.RulePackDef" } }, }, },
	{ "RimWorld.MemeGroupDef"                                        , { "RimWorld"     , "MemeGroupDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.MonolithLevelDef"                                    , { "RimWorld"     , "MonolithLevelDef"                                    , "Verse.Def"                                              , { "monolithLabel", "monolithDescription", "levelInspectText", "extraQuestDescription", "activateGizmoText", "activateFloatMenuText", "activateGizmoDescription", "pawnSentToActivateMessage", "monolithCanBeActivatedText", "activateQuestText", "activatableLetterLabel", "activatableLetterText", "activatedLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "incidentsOnReached", "RimWorld.IncidentDef" }, { "unreachableDuringConditions", "Verse.GameConditionDef" } }, { { "monolithStudyCategory", "RimWorld.KnowledgeCategoryDef" }, { "entityCatagoryCompletionRequired", "RimWorld.EntityCategoryDef" }, { "activateSound", "Verse.SoundDef" }, { "activatedSound", "Verse.SoundDef" } }, }, },
	{ "RimWorld.MusicSequenceDef"                                    , { "RimWorld"     , "MusicSequenceDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "songs", "Verse.SongDef" } }, { { "song", "Verse.SongDef" }, { "nextSequence", "RimWorld.MusicSequenceDef" } }, }, },
	{ "RimWorld.MusicTransitionDef"                                  , { "RimWorld"     , "MusicTransitionDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "sequence", "RimWorld.MusicSequenceDef" } }, }, },
	{ "RimWorld.MutantCount"                                         , { "RimWorld"     , "MutantCount"                                         , "RimWorld.StartingPawnCount"                             , { "description" }, {}, {}, { { "mutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.MutantDef"                                           , { "RimWorld"     , "MutantDef"                                           , "Verse.Def"                                              , { "namePrefix", "deathLetter", "deathLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "disablesGenes", "Verse.GeneDef" }, { "enabledNeeds", "RimWorld.NeedDef" }, { "forcedHeadTypes", "Verse.HeadTypeDef" }, { "drugWhitelist", "Verse.ThingDef" }, { "removesHediffs", "Verse.HediffDef" }, { "verbs", "Verse.VerbProperties" }, { "tools", "Verse.Tool" }, { "abilities", "RimWorld.AbilityDef" }, { "abilityWhitelist", "RimWorld.AbilityDef" }, { "cachedDisabledWorkTypes", "Verse.WorkTypeDef" } }, { { "hediff", "Verse.HediffDef" }, { "thinkTree", "Verse.ThinkTreeDef" }, { "thinkTreeConstant", "Verse.ThinkTreeDef" }, { "codexEntry", "RimWorld.EntityCodexEntryDef" }, { "relativeTurnedThought", "RimWorld.ThoughtDef" }, { "standingAnimation", "Verse.AnimationDef" }, { "bloodDef", "Verse.ThingDef" }, { "bloodSmearDef", "Verse.ThingDef" }, { "knowledgeCategory", "RimWorld.KnowledgeCategoryDef" }, { "soundCall", "Verse.SoundDef" }, { "soundAttack", "Verse.SoundDef" }, { "soundWounded", "Verse.SoundDef" }, { "soundDeath", "Verse.SoundDef" }, { "soundAngry", "Verse.SoundDef" }, { "defaultFaction", "RimWorld.FactionDef" } }, }, },
	{ "RimWorld.NeedDef"                                             , { "RimWorld"     , "NeedDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "titleRequiredAny", "RimWorld.RoyalTitleDef" }, { "hediffRequiredAny", "Verse.HediffDef" }, { "nullifyingPrecepts", "RimWorld.PreceptDef" } }, {}, }, },
	{ "RimWorld.PawnColumnDef"                                       , { "RimWorld"     , "PawnColumnDef"                                       , "Verse.Def"                                              , { "headerTip", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "trainable", "RimWorld.TrainableDef" }, { "workType", "Verse.WorkTypeDef" } }, }, },
	{ "RimWorld.PawnExpectationsQualityOffset"                       , { "RimWorld"     , "PawnExpectationsQualityOffset"                       , ""                                                       , { "labelOverride" }, {}, {}, { { "expectation", "RimWorld.ExpectationDef" } }, }, },
	{ "RimWorld.PawnGroupKindDef"                                    , { "RimWorld"     , "PawnGroupKindDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.PawnRelationDef"                                     , { "RimWorld"     , "PawnRelationDef"                                     , "Verse.Def"                                              , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, { { "soldThoughts", "RimWorld.ThoughtDef" } }, { { "diedThought", "RimWorld.ThoughtDef" }, { "diedThoughtFemale", "RimWorld.ThoughtDef" }, { "lostThought", "RimWorld.ThoughtDef" }, { "lostThoughtFemale", "RimWorld.ThoughtDef" }, { "killedThought", "RimWorld.ThoughtDef" }, { "killedThoughtFemale", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.PawnsArrivalModeDef"                                 , { "RimWorld"     , "PawnsArrivalModeDef"                                 , "Verse.Def"                                              , { "textEnemy", "textFriendly", "textWillArrive", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.PawnTableDef"                                        , { "RimWorld"     , "PawnTableDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "columns", "RimWorld.PawnColumnDef" } }, {}, }, },
	{ "RimWorld.PitGateIncidentDef"                                  , { "RimWorld"     , "PitGateIncidentDef"                                  , "Verse.Def"                                              , { "disableEnteringReason", "letterText", "letterLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.PreceptComp"                                         , { "RimWorld"     , "PreceptComp"                                         , ""                                                       , { "description" }, {}, {}, { { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_Apparel"                                 , { "RimWorld"     , "PreceptComp_Apparel"                                 , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, { { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_Apparel_Desired"                         , { "RimWorld"     , "PreceptComp_Apparel_Desired"                         , "RimWorld.PreceptComp_Apparel"                           , { "description" }, {}, {}, { { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_Apparel_DesiredStrong"                   , { "RimWorld"     , "PreceptComp_Apparel_DesiredStrong"                   , "RimWorld.PreceptComp_Apparel"                           , { "description" }, {}, {}, { { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_BedThought"                              , { "RimWorld"     , "PreceptComp_BedThought"                              , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, { { "thought", "RimWorld.ThoughtDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_DevelopmentPoints"                       , { "RimWorld"     , "PreceptComp_DevelopmentPoints"                       , "RimWorld.PreceptComp"                                   , { "eventLabel", "description" }, {}, {}, { { "eventDef", "RimWorld.HistoryEventDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_GoodwillSituation"                       , { "RimWorld"     , "PreceptComp_GoodwillSituation"                       , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, { { "goodwillSituation", "RimWorld.GoodwillSituationDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_KnowsMemoryThought"                      , { "RimWorld"     , "PreceptComp_KnowsMemoryThought"                      , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, { { "eventDef", "RimWorld.HistoryEventDef" }, { "removesThought", "RimWorld.ThoughtDef" }, { "thought", "RimWorld.ThoughtDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_MentalBreak"                             , { "RimWorld"     , "PreceptComp_MentalBreak"                             , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, { { "mentalBreakDef", "Verse.MentalBreakDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_SelfTookMemoryThought"                   , { "RimWorld"     , "PreceptComp_SelfTookMemoryThought"                   , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, { { "eventDef", "RimWorld.HistoryEventDef" }, { "thought", "RimWorld.ThoughtDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_SituationalThought"                      , { "RimWorld"     , "PreceptComp_SituationalThought"                      , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, { { "thought", "RimWorld.ThoughtDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_Thought"                                 , { "RimWorld"     , "PreceptComp_Thought"                                 , "RimWorld.PreceptComp"                                   , { "description" }, { "thoughtStageDescriptions" }, {}, { { "thought", "RimWorld.ThoughtDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo"                           , { "RimWorld"     , "PreceptComp_UnwillingToDo"                           , "RimWorld.PreceptComp"                                   , { "description" }, {}, { { "nullifyingHediffs", "Verse.HediffDef" } }, { { "eventDef", "RimWorld.HistoryEventDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_Chance"                    , { "RimWorld"     , "PreceptComp_UnwillingToDo_Chance"                    , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "nullifyingHediffs", "Verse.HediffDef" } }, { { "eventDef", "RimWorld.HistoryEventDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_Gendered"                  , { "RimWorld"     , "PreceptComp_UnwillingToDo_Gendered"                  , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "nullifyingHediffs", "Verse.HediffDef" } }, { { "eventDef", "RimWorld.HistoryEventDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_WithDef"                   , { "RimWorld"     , "PreceptComp_UnwillingToDo_WithDef"                   , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "nullifyingHediffs", "Verse.HediffDef" } }, { { "buildingDef", "Verse.ThingDef" }, { "eventDef", "RimWorld.HistoryEventDef" }, { "preceptDef", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.PreceptDef"                                          , { "RimWorld"     , "PreceptDef"                                          , "Verse.Def"                                              , { "tipLabelOverride", "extraTextPawnDeathLetter", "label", "description", "ignoreConfigErrors" }, {}, { { "comps", "RimWorld.PreceptComp" }, { "opposedWorkTypes", "Verse.WorkTypeDef" }, { "associatedMemes", "RimWorld.MemeDef" }, { "conflictingMemes", "RimWorld.MemeDef" }, { "requiredMemes", "RimWorld.MemeDef" }, { "buildingMinExpectations", "RimWorld.ExpectationDef" }, { "grantedAbilities", "RimWorld.AbilityDef" }, { "roleEffects", "RimWorld.RoleEffect" } }, { { "issue", "RimWorld.IssueDef" }, { "takeNameFrom", "RimWorld.PreceptDef" }, { "alsoAdds", "RimWorld.PreceptDef" }, { "nameMaker", "Verse.RulePackDef" }, { "ritualPatternBase", "RimWorld.RitualPatternDef" }, { "defaultDrugPolicyOverride", "RimWorld.DrugPolicyDef" }, { "apparelPreceptSwapDef", "RimWorld.PreceptDef" }, { "useCooldownFromAbilityGroupDef", "RimWorld.AbilityGroupDef" }, { "sourcePawnRoleDef", "RimWorld.PreceptDef" }, { "sourceAbilityDef", "RimWorld.AbilityDef" } }, }, },
	{ "RimWorld.PrisonerInteractionModeDef"                          , { "RimWorld"     , "PrisonerInteractionModeDef"                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef"                                    , { "RimWorld"     , "PsychicRitualDef"                                    , "Verse.Def"                                              , { "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, { { "rolesBackingList", "RimWorld.PsychicRitualRoleDef" } }, { { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_BloodRain"                          , { "RimWorld"     , "PsychicRitualDef_BloodRain"                          , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_Brainwipe"                          , { "RimWorld"     , "PsychicRitualDef_Brainwipe"                          , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_Chronophagy"                        , { "RimWorld"     , "PsychicRitualDef_Chronophagy"                        , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_ImbueDeathRefusal"                  , { "RimWorld"     , "PsychicRitualDef_ImbueDeathRefusal"                  , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_InvocationCircle"                   , { "RimWorld"     , "PsychicRitualDef_InvocationCircle"                   , "RimWorld.PsychicRitualDef"                              , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_NeurosisPulse"                      , { "RimWorld"     , "PsychicRitualDef_NeurosisPulse"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_Philophagy"                         , { "RimWorld"     , "PsychicRitualDef_Philophagy"                         , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_PleasurePulse"                      , { "RimWorld"     , "PsychicRitualDef_PleasurePulse"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_Psychophagy"                        , { "RimWorld"     , "PsychicRitualDef_Psychophagy"                        , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SkipAbduction"                      , { "RimWorld"     , "PsychicRitualDef_SkipAbduction"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SkipAbductionPlayer"                , { "RimWorld"     , "PsychicRitualDef_SkipAbductionPlayer"                , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SummonAnimals"                      , { "RimWorld"     , "PsychicRitualDef_SummonAnimals"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SummonFleshbeasts"                  , { "RimWorld"     , "PsychicRitualDef_SummonFleshbeasts"                  , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SummonFleshbeastsPlayer"            , { "RimWorld"     , "PsychicRitualDef_SummonFleshbeastsPlayer"            , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SummonPitGate"                      , { "RimWorld"     , "PsychicRitualDef_SummonPitGate"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_SummonShamblers"                    , { "RimWorld"     , "PsychicRitualDef_SummonShamblers"                    , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualDef_VoidProvocation"                    , { "RimWorld"     , "PsychicRitualDef_VoidProvocation"                    , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "invokerRole", "RimWorld.PsychicRitualRoleDef" }, { "chanterRole", "RimWorld.PsychicRitualRoleDef" }, { "targetRole", "RimWorld.PsychicRitualRoleDef" }, { "defenderRole", "RimWorld.PsychicRitualRoleDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "RimWorld.PsychicRitualRoleDef"                                , { "RimWorld"     , "PsychicRitualRoleDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.PsychicRitualRoleDef_DeathRefusalTarget"             , { "RimWorld"     , "PsychicRitualRoleDef_DeathRefusalTarget"             , "RimWorld.PsychicRitualRoleDef"                          , { "psychicRitualLeaveReason_MaxDeathRefusal", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.QuestScriptDef"                                      , { "RimWorld"     , "QuestScriptDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "questDescriptionRules", "Verse.Grammar.RulePack" }, { "questNameRules", "Verse.Grammar.RulePack" }, { "questDescriptionAndNameRules", "Verse.Grammar.RulePack" }, { "questContentRules", "Verse.Grammar.RulePack" }, { "questAvailableLetterDef", "Verse.LetterDef" }, { "successHistoryEvent", "RimWorld.HistoryEventDef" }, { "failedOrExpiredHistoryEvent", "RimWorld.HistoryEventDef" }, { "epicParent", "RimWorld.QuestScriptDef" } }, }, },
	{ "RimWorld.RaidAgeRestrictionDef"                               , { "RimWorld"     , "RaidAgeRestrictionDef"                               , "Verse.Def"                                              , { "arrivalTextExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RaidStrategyDef"                                     , { "RimWorld"     , "RaidStrategyDef"                                     , "Verse.Def"                                              , { "arrivalTextFriendly", "arrivalTextEnemy", "letterLabelEnemy", "letterLabelFriendly", "label", "description", "ignoreConfigErrors" }, {}, { { "arriveModes", "RimWorld.PawnsArrivalModeDef" } }, {}, }, },
	{ "RimWorld.RecordDef"                                           , { "RimWorld"     , "RecordDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "measuredTimeJobs", "Verse.JobDef" } }, {}, }, },
	{ "RimWorld.RenderSkipFlagDef"                                   , { "RimWorld"     , "RenderSkipFlagDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.ResearchTabDef"                                      , { "RimWorld"     , "ResearchTabDef"                                      , "Verse.Def"                                              , { "generalTitle", "generalDescription", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RitualAttachableOutcomeEffectDef"                    , { "RimWorld"     , "RitualAttachableOutcomeEffectDef"                    , "Verse.Def"                                              , { "letterInfoText", "effectDesc", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredMemeAny", "RimWorld.MemeDef" }, { "allowedRituals", "RimWorld.RitualPatternDef" }, { "disallowedRituals", "RimWorld.RitualPatternDef" } }, { { "requiredFaction", "RimWorld.FactionDef" } }, }, },
	{ "RimWorld.RitualBehaviorDef"                                   , { "RimWorld"     , "RitualBehaviorDef"                                   , "Verse.Def"                                              , { "letterTitle", "letterText", "spectatorsLabel", "spectatorGerund", "label", "description", "ignoreConfigErrors" }, {}, { { "roles", "RimWorld.RitualRole" }, { "soundDefsPerEnhancerCount", "Verse.SoundDef" } }, { { "spectatorFilter", "RimWorld.RitualSpectatorFilter" } }, }, },
	{ "RimWorld.RitualObligationTargetFilterDef"                     , { "RimWorld"     , "RitualObligationTargetFilterDef"                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "thingDefs", "Verse.ThingDef" } }, {}, }, },
	{ "RimWorld.RitualOutcomeComp"                                   , { "RimWorld"     , "RitualOutcomeComp"                                   , ""                                                       , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_AtLeastOneSpectator"               , { "RimWorld"     , "RitualOutcomeComp_AtLeastOneSpectator"               , "RimWorld.RitualOutcomeComp_ParticipantCount"            , { "labelNotMet", "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_BuildingOfAnyDefPresent"           , { "RimWorld"     , "RitualOutcomeComp_BuildingOfAnyDefPresent"           , "RimWorld.RitualOutcomeComp_BuildingsPresent"            , { "label", "labelAbstract" }, {}, { { "defs", "Verse.ThingDef" } }, {}, }, },
	{ "RimWorld.RitualOutcomeComp_BuildingOfDefPresent"              , { "RimWorld"     , "RitualOutcomeComp_BuildingOfDefPresent"              , "RimWorld.RitualOutcomeComp_BuildingsPresent"            , { "label", "labelAbstract" }, {}, {}, { { "def", "Verse.ThingDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_BuildingOfDefUsed"                 , { "RimWorld"     , "RitualOutcomeComp_BuildingOfDefUsed"                 , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, { { "def", "Verse.ThingDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_BuildingsPresent"                  , { "RimWorld"     , "RitualOutcomeComp_BuildingsPresent"                  , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_DestroyConsumableBuilding"         , { "RimWorld"     , "RitualOutcomeComp_DestroyConsumableBuilding"         , "RimWorld.RitualOutcomeComp"                             , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_DuelistDied"                       , { "RimWorld"     , "RitualOutcomeComp_DuelistDied"                       , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_Indoors"                           , { "RimWorld"     , "RitualOutcomeComp_Indoors"                           , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_LovedOnePresent"                   , { "RimWorld"     , "RitualOutcomeComp_LovedOnePresent"                   , "RimWorld.RitualOutcomeComp_Quality"                     , { "labelNotMet", "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_NumActiveLoudspeakers"             , { "RimWorld"     , "RitualOutcomeComp_NumActiveLoudspeakers"             , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_NumParticipantsWithTag"            , { "RimWorld"     , "RitualOutcomeComp_NumParticipantsWithTag"            , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_NumPlayedDrums"                    , { "RimWorld"     , "RitualOutcomeComp_NumPlayedDrums"                    , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_ParticipantCount"                  , { "RimWorld"     , "RitualOutcomeComp_ParticipantCount"                  , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_PawnAge"                           , { "RimWorld"     , "RitualOutcomeComp_PawnAge"                           , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_PawnExpectations"                  , { "RimWorld"     , "RitualOutcomeComp_PawnExpectations"                  , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, { { "offsetPerExpectation", "RimWorld.PawnExpectationsQualityOffset" } }, { { "slaveExpectationCached", "RimWorld.PawnExpectationsQualityOffset" } }, }, },
	{ "RimWorld.RitualOutcomeComp_PawnSkill"                         , { "RimWorld"     , "RitualOutcomeComp_PawnSkill"                         , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, { { "skillDef", "RimWorld.SkillDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_PawnStatScaled"                    , { "RimWorld"     , "RitualOutcomeComp_PawnStatScaled"                    , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, { { "statDef", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_Quality"                           , { "RimWorld"     , "RitualOutcomeComp_Quality"                           , "RimWorld.RitualOutcomeComp"                             , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_QualitySingleOffset"               , { "RimWorld"     , "RitualOutcomeComp_QualitySingleOffset"               , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RitualSeatPresent"                 , { "RimWorld"     , "RitualOutcomeComp_RitualSeatPresent"                 , "RimWorld.RitualOutcomeComp_BuildingsPresent"            , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RitualTargetDefs"                  , { "RimWorld"     , "RitualOutcomeComp_RitualTargetDefs"                  , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "expectedThingLabelTip", "label", "labelAbstract" }, {}, { { "defs", "Verse.ThingDef" } }, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RoleChangeParticipants"            , { "RimWorld"     , "RitualOutcomeComp_RoleChangeParticipants"            , "RimWorld.RitualOutcomeComp_ParticipantCount"            , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RolePresentNotSubstituted"         , { "RimWorld"     , "RitualOutcomeComp_RolePresentNotSubstituted"         , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RoomStat"                          , { "RimWorld"     , "RitualOutcomeComp_RoomStat"                          , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, { { "statDef", "Verse.RoomStatDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_TargetThingStat"                   , { "RimWorld"     , "RitualOutcomeComp_TargetThingStat"                   , "RimWorld.RitualOutcomeComp_Quality"                     , { "label", "labelAbstract" }, {}, {}, { { "statDef", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.RitualOutcomeComp_WeaponUsed"                        , { "RimWorld"     , "RitualOutcomeComp_WeaponUsed"                        , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "label", "labelAbstract" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomeEffectDef"                              , { "RimWorld"     , "RitualOutcomeEffectDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, { "extraPredictedOutcomeDescriptions", "extraInfoLines" }, { { "outcomeChances", "RimWorld.RitualOutcomePossibility" }, { "extraOutcomeDescriptions", "RimWorld.RitualOutcomeEffectDef+ExtraOutcomeChanceDescription" }, { "comps", "RimWorld.RitualOutcomeComp" } }, { { "memoryDef", "RimWorld.ThoughtDef" }, { "effecter", "Verse.EffecterDef" }, { "fleckDef", "Verse.FleckDef" }, { "filthDefToSpawn", "Verse.ThingDef" }, { "bestOutcomeCached", "RimWorld.RitualOutcomePossibility" }, { "worstOutcomeCached", "RimWorld.RitualOutcomePossibility" } }, }, },
	{ "RimWorld.RitualOutcomeEffectDef+ExtraOutcomeChanceDescription", { "RimWorld"     , "ExtraOutcomeChanceDescription"                       , ""                                                       , { "description" }, {}, {}, {}, }, },
	{ "RimWorld.RitualOutcomePossibility"                            , { "RimWorld"     , "RitualOutcomePossibility"                            , ""                                                       , { "label", "description", "potentialExtraOutcomeDesc" }, {}, {}, { { "memory", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.RitualPatternDef"                                    , { "RimWorld"     , "RitualPatternDef"                                    , "Verse.Def"                                              , { "ritualExpectedDesc", "ritualExpectedDescNoAdjective", "shortDescOverride", "descOverride", "ritualExplanation", "beginRitualOverride", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "nameMaker", "Verse.RulePackDef" }, { "ritualObligationTargetFilter", "RimWorld.RitualObligationTargetFilterDef" }, { "ritualTargetFilter", "RimWorld.RitualTargetFilterDef" }, { "ritualBehavior", "RimWorld.RitualBehaviorDef" }, { "ritualOutcomeEffect", "RimWorld.RitualOutcomeEffectDef" } }, }, },
	{ "RimWorld.RitualRole"                                          , { "RimWorld"     , "RitualRole"                                          , ""                                                       , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRole_Mother"                                   , { "RimWorld"     , "RitualRole_Mother"                                   , "RimWorld.RitualRoleForced"                              , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleAnimal"                                    , { "RimWorld"     , "RitualRoleAnimal"                                    , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleAnimaLinker"                               , { "RimWorld"     , "RitualRoleAnimaLinker"                               , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleBehavior"                                  , { "RimWorld"     , "RitualRoleBehavior"                                  , ""                                                       , { "jobReportOverride" }, {}, {}, { { "dutyDef", "Verse.AI.DutyDef" }, { "speakerInteraction", "RimWorld.InteractionDef" } }, }, },
	{ "RimWorld.RitualRoleBlindingTarget"                            , { "RimWorld"     , "RitualRoleBlindingTarget"                            , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleColonist"                                  , { "RimWorld"     , "RitualRoleColonist"                                  , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "requiredWorkType", "Verse.WorkTypeDef" }, { "usedSkill", "RimWorld.SkillDef" }, { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleColonistConnectable"                       , { "RimWorld"     , "RitualRoleColonistConnectable"                       , "RimWorld.RitualRoleColonist"                            , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "requiredWorkType", "Verse.WorkTypeDef" }, { "usedSkill", "RimWorld.SkillDef" }, { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleConvertee"                                 , { "RimWorld"     , "RitualRoleConvertee"                                 , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleForced"                                    , { "RimWorld"     , "RitualRoleForced"                                    , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleIdeoRoleChanger"                           , { "RimWorld"     , "RitualRoleIdeoRoleChanger"                           , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleOrganizer"                                 , { "RimWorld"     , "RitualRoleOrganizer"                                 , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRolePrisoner"                                  , { "RimWorld"     , "RitualRolePrisoner"                                  , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRolePrisonerOrSlave"                           , { "RimWorld"     , "RitualRolePrisonerOrSlave"                           , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleScarificationTarget"                       , { "RimWorld"     , "RitualRoleScarificationTarget"                       , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleTag"                                       , { "RimWorld"     , "RitualRoleTag"                                       , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualRoleWarden"                                    , { "RimWorld"     , "RitualRoleWarden"                                    , "RimWorld.RitualRole"                                    , { "label", "categoryLabel", "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, { { "precept", "RimWorld.PreceptDef" } }, }, },
	{ "RimWorld.RitualSpectatorFilter"                               , { "RimWorld"     , "RitualSpectatorFilter"                               , ""                                                       , { "description" }, {}, {}, {}, }, },
	{ "RimWorld.RitualSpectatorFilter_NatureFocus"                   , { "RimWorld"     , "RitualSpectatorFilter_NatureFocus"                   , "RimWorld.RitualSpectatorFilter"                         , { "description" }, {}, {}, {}, }, },
	{ "RimWorld.RitualSpectatorFilter_WillWitnessExecution"          , { "RimWorld"     , "RitualSpectatorFilter_WillWitnessExecution"          , "RimWorld.RitualSpectatorFilter"                         , { "description" }, {}, {}, {}, }, },
	{ "RimWorld.RitualStageAction_Message"                           , { "RimWorld"     , "RitualStageAction_Message"                           , "RimWorld.RitualStageAction"                             , { "text" }, {}, {}, { { "messageTypeDef", "Verse.MessageTypeDef" } }, }, },
	{ "RimWorld.RitualTargetFilterDef"                               , { "RimWorld"     , "RitualTargetFilterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RitualVisualEffectDef"                               , { "RimWorld"     , "RitualVisualEffectDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RiverDef"                                            , { "RimWorld"     , "RiverDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "degradeChild", "RimWorld.RiverDef" } }, }, },
	{ "RimWorld.RoadDef"                                             , { "RimWorld"     , "RoadDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "pathingMode", "RimWorld.RoadPathingDef" } }, }, },
	{ "RimWorld.RoadPathingDef"                                      , { "RimWorld"     , "RoadPathingDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RoadWorldLayerDef"                                   , { "RimWorld"     , "RoadWorldLayerDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.RoleEffect"                                          , { "RimWorld"     , "RoleEffect"                                          , ""                                                       , { "label" }, {}, {}, {}, }, },
	{ "RimWorld.RoleEffect_GiveThoughtOnTend"                        , { "RimWorld"     , "RoleEffect_GiveThoughtOnTend"                        , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, { { "thoughtDef", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.RoleEffect_HuntingRevengeChanceFactor"               , { "RimWorld"     , "RoleEffect_HuntingRevengeChanceFactor"               , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, {}, }, },
	{ "RimWorld.RoleEffect_NoMeleeWeapons"                           , { "RimWorld"     , "RoleEffect_NoMeleeWeapons"                           , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, {}, }, },
	{ "RimWorld.RoleEffect_NoRangedWeapons"                          , { "RimWorld"     , "RoleEffect_NoRangedWeapons"                          , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, {}, }, },
	{ "RimWorld.RoleEffect_PawnStatFactor"                           , { "RimWorld"     , "RoleEffect_PawnStatFactor"                           , "RimWorld.RoleEffect_PawnStatModifier"                   , { "label" }, {}, {}, { { "statDef", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.RoleEffect_PawnStatModifier"                         , { "RimWorld"     , "RoleEffect_PawnStatModifier"                         , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, { { "statDef", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.RoleEffect_PawnStatOffset"                           , { "RimWorld"     , "RoleEffect_PawnStatOffset"                           , "RimWorld.RoleEffect_PawnStatModifier"                   , { "label" }, {}, {}, { { "statDef", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.RoleEffect_ProductionQualityOffset"                  , { "RimWorld"     , "RoleEffect_ProductionQualityOffset"                  , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, {}, }, },
	{ "RimWorld.RoyalTitleDef"                                       , { "RimWorld"     , "RoyalTitleDef"                                       , "Verse.Def"                                              , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredApparel", "RimWorld.ApparelRequirement" }, { "permits", "RimWorld.RoyalTitlePermitDef" }, { "disabledJoyKinds", "RimWorld.JoyKindDef" }, { "grantedAbilities", "RimWorld.AbilityDef" }, { "satisfyingMealsCached", "Verse.ThingDef" }, { "satisfyingMealsNoDrugsCached", "Verse.ThingDef" } }, { { "minExpectation", "RimWorld.ExpectationDef" }, { "awardThought", "RimWorld.ThoughtDef" }, { "lostThought", "RimWorld.ThoughtDef" }, { "replaceOnRecruited", "RimWorld.RoyalTitleDef" } }, }, },
	{ "RimWorld.RoyalTitlePermitDef"                                 , { "RimWorld"     , "RoyalTitlePermitDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "minTitle", "RimWorld.RoyalTitleDef" }, { "faction", "RimWorld.FactionDef" }, { "prerequisite", "RimWorld.RoyalTitlePermitDef" } }, }, },
	{ "RimWorld.RuleDef"                                             , { "RimWorld"     , "RuleDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.Scenario"                                            , { "RimWorld"     , "Scenario"                                            , ""                                                       , { "name", "summary", "description" }, {}, {}, {}, }, },
	{ "RimWorld.ScenarioDef"                                         , { "RimWorld"     , "ScenarioDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "scenario", "RimWorld.Scenario" } }, }, },
	{ "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawns_Mutants"  , { "RimWorld"     , "ScenPart_ConfigPage_ConfigureStartingPawns_Mutants"  , "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawnsBase", { "customSummary" }, {}, { { "mutantCounts", "RimWorld.MutantCount" } }, { { "def", "RimWorld.ScenPartDef" } }, }, },
	{ "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawns_Xenotypes", { "RimWorld"     , "ScenPart_ConfigPage_ConfigureStartingPawns_Xenotypes", "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawnsBase", { "customSummary" }, {}, { { "xenotypeCounts", "RimWorld.XenotypeCount" } }, { { "def", "RimWorld.ScenPartDef" } }, }, },
	{ "RimWorld.ScenPartDef"                                         , { "RimWorld"     , "ScenPartDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "gameCondition", "Verse.GameConditionDef" }, { "genStep", "Verse.GenStepDef" } }, }, },
	{ "RimWorld.ShipJobDef"                                          , { "RimWorld"     , "ShipJobDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.SitePartDef"                                         , { "RimWorld"     , "SitePartDef"                                         , "Verse.Def"                                              , { "approachOrderString", "approachingReportString", "arrivedLetter", "arrivedLetterLabelPart", "label", "description", "ignoreConfigErrors" }, {}, { { "arrivedLetterHediffHyperlinks", "Verse.HediffDef" }, { "extraGenSteps", "Verse.GenStepDef" } }, { { "conditionCauserDef", "Verse.ThingDef" }, { "arrivedLetterDef", "Verse.LetterDef" } }, }, },
	{ "RimWorld.SketchResolverDef"                                   , { "RimWorld"     , "SketchResolverDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.SkillDef"                                            , { "RimWorld"     , "SkillDef"                                            , "Verse.Def"                                              , { "skillLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "generalRules", "Verse.Grammar.RulePack" }, { "lessonInteraction", "RimWorld.InteractionDef" } }, }, },
	{ "RimWorld.SlaveInteractionModeDef"                             , { "RimWorld"     , "SlaveInteractionModeDef"                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.StageFailTrigger"                                    , { "RimWorld"     , "StageFailTrigger"                                    , ""                                                       , { "desc" }, {}, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_NoPoweredLoudspeakers"              , { "RimWorld"     , "StageFailTrigger_NoPoweredLoudspeakers"              , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, { { "onlyIfTargetIsOfDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.StageFailTrigger_NoThingPresent"                     , { "RimWorld"     , "StageFailTrigger_NoThingPresent"                     , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, { { "onlyIfTargetIsOfDef", "Verse.ThingDef" }, { "thingDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.StageFailTrigger_PawnAlive"                          , { "RimWorld"     , "StageFailTrigger_PawnAlive"                          , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_PawnAsleep"                         , { "RimWorld"     , "StageFailTrigger_PawnAsleep"                         , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetNotLit"                       , { "RimWorld"     , "StageFailTrigger_TargetNotLit"                       , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, { { "onlyIfTargetIsOfDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.StageFailTrigger_TargetPawnUnreachable"              , { "RimWorld"     , "StageFailTrigger_TargetPawnUnreachable"              , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetThingMissing"                 , { "RimWorld"     , "StageFailTrigger_TargetThingMissing"                 , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, { { "onlyIfTargetIsOfDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.StageFailTrigger_TargetUnpowered"                    , { "RimWorld"     , "StageFailTrigger_TargetUnpowered"                    , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, { { "onlyIfTargetIsOfDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.StatCategoryDef"                                     , { "RimWorld"     , "StatCategoryDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.StatDef"                                             , { "RimWorld"     , "StatDef"                                             , "Verse.Def"                                              , { "offsetLabel", "formatString", "formatStringUnfinalized", "statFactorsExplanationHeader", "label", "description", "ignoreConfigErrors" }, {}, { { "showIfHediffsPresent", "Verse.HediffDef" }, { "showOnPawnKind", "Verse.PawnKindDef" }, { "statFactors", "RimWorld.StatDef" }, { "postProcessStatFactors", "RimWorld.StatDef" } }, { { "category", "RimWorld.StatCategoryDef" }, { "disableIfSkillDisabled", "RimWorld.SkillDef" } }, }, },
	{ "RimWorld.StatPart_OverseerStatOffset"                         , { "RimWorld"     , "StatPart_OverseerStatOffset"                         , "RimWorld.StatPart"                                      , { "label" }, {}, {}, { { "stat", "RimWorld.StatDef" }, { "parentStat", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.StatPart_RoomStat"                                   , { "RimWorld"     , "StatPart_RoomStat"                                   , "RimWorld.StatPart"                                      , { "customLabel" }, {}, {}, { { "roomStat", "Verse.RoomStatDef" }, { "parentStat", "RimWorld.StatDef" } }, }, },
	{ "RimWorld.StorytellerDef"                                      , { "RimWorld"     , "StorytellerDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "forcedDifficulty", "RimWorld.DifficultyDef" } }, }, },
	{ "RimWorld.StudyNote"                                           , { "RimWorld"     , "StudyNote"                                           , ""                                                       , { "label", "text" }, {}, {}, {}, }, },
	{ "RimWorld.StuffCategoryDef"                                    , { "RimWorld"     , "StuffCategoryDef"                                    , "Verse.Def"                                              , { "noun", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "destroySoundSmall", "Verse.SoundDef" }, { "destroySoundMedium", "Verse.SoundDef" }, { "destroySoundLarge", "Verse.SoundDef" } }, }, },
	{ "RimWorld.StyleItemCategoryDef"                                , { "RimWorld"     , "StyleItemCategoryDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "cachedStyleItems", "RimWorld.StyleItemDef" } }, {}, }, },
	{ "RimWorld.StyleItemDef"                                        , { "RimWorld"     , "StyleItemDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "category", "RimWorld.StyleItemCategoryDef" }, { "overrideShaderTypeDef", "Verse.ShaderTypeDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredMutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.SurgeryOutcome"                                      , { "RimWorld"     , "SurgeryOutcome"                                      , ""                                                       , { "letterLabel", "letterText" }, {}, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_Death"                                , { "RimWorld"     , "SurgeryOutcome_Death"                                , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_Failure"                              , { "RimWorld"     , "SurgeryOutcome_Failure"                              , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_FailureWithHediff"                    , { "RimWorld"     , "SurgeryOutcome_FailureWithHediff"                    , "RimWorld.SurgeryOutcome_Failure"                        , { "letterLabel", "letterText" }, {}, { { "applyToRecipes", "Verse.RecipeDef" } }, { { "failedHediff", "Verse.HediffDef" } }, }, },
	{ "RimWorld.SurgeryOutcome_HediffWithDuration"                   , { "RimWorld"     , "SurgeryOutcome_HediffWithDuration"                   , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, { { "hediff", "Verse.HediffDef" } }, }, },
	{ "RimWorld.SurgeryOutcomeEffectDef"                             , { "RimWorld"     , "SurgeryOutcomeEffectDef"                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "outcomes", "RimWorld.SurgeryOutcome" } }, {}, }, },
	{ "RimWorld.SurgeryOutcomeSuccess"                               , { "RimWorld"     , "SurgeryOutcomeSuccess"                               , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, {}, }, },
	{ "RimWorld.TaleDef"                                             , { "RimWorld"     , "TaleDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "rulePack", "Verse.Grammar.RulePack" } }, }, },
	{ "RimWorld.TattooDef"                                           , { "RimWorld"     , "TattooDef"                                           , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "overrideShaderTypeDef", "Verse.ShaderTypeDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredMutant", "RimWorld.MutantDef" } }, }, },
	{ "RimWorld.TerrainTemplateDef"                                  , { "RimWorld"     , "TerrainTemplateDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "burnedDef", "Verse.TerrainDef" }, { "designatorDropdown", "Verse.DesignatorDropdownGroupDef" }, { "dominantStyleCategory", "Verse.StyleCategoryDef" } }, }, },
	{ "RimWorld.ThingSetMakerDef"                                    , { "RimWorld"     , "ThingSetMakerDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.ThoughtDef"                                          , { "RimWorld"     , "ThoughtDef"                                          , "Verse.Def"                                              , { "labelInBracketsExtraForHediff", "label", "description", "ignoreConfigErrors" }, {}, { { "stages", "RimWorld.ThoughtStage" }, { "nullifyingTraits", "RimWorld.TraitDef" }, { "neverNullifyIfAnyTrait", "RimWorld.TraitDef" }, { "nullifyingOwnTales", "RimWorld.TaleDef" }, { "nullifyingPrecepts", "RimWorld.PreceptDef" }, { "nullifyingHediffs", "Verse.HediffDef" }, { "nullifyingGenes", "Verse.GeneDef" }, { "requiredTraits", "RimWorld.TraitDef" }, { "requiredGenes", "Verse.GeneDef" }, { "requiredHediffs", "Verse.HediffDef" }, { "replaceThoughts", "RimWorld.ThoughtDef" } }, { { "nextThought", "RimWorld.ThoughtDef" }, { "producesMemoryThought", "RimWorld.ThoughtDef" }, { "effectMultiplyingStat", "RimWorld.StatDef" }, { "hediff", "Verse.HediffDef" }, { "mentalState", "Verse.MentalStateDef" }, { "gameCondition", "Verse.GameConditionDef" }, { "thoughtToMake", "RimWorld.ThoughtDef" }, { "minExpectation", "RimWorld.ExpectationDef" }, { "minExpectationForNegativeThought", "RimWorld.ExpectationDef" }, { "chemicalDef", "RimWorld.ChemicalDef" }, { "taleDef", "RimWorld.TaleDef" } }, }, },
	{ "RimWorld.ThoughtStage"                                        , { "RimWorld"     , "ThoughtStage"                                        , ""                                                       , { "label", "labelSocial", "labelAbstract", "description" }, {}, {}, {}, }, },
	{ "RimWorld.TimeAssignmentDef"                                   , { "RimWorld"     , "TimeAssignmentDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.TraderKindDef"                                       , { "RimWorld"     , "TraderKindDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "faction", "RimWorld.FactionDef" }, { "permitRequiredForTrading", "RimWorld.RoyalTitlePermitDef" } }, }, },
	{ "RimWorld.TrainableDef"                                        , { "RimWorld"     , "TrainableDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "prerequisites", "RimWorld.TrainableDef" } }, { { "requiredTrainability", "Verse.TrainabilityDef" } }, }, },
	{ "RimWorld.TraitDef"                                            , { "RimWorld"     , "TraitDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "degreeDatas", "RimWorld.TraitDegreeData" }, { "conflictingTraits", "RimWorld.TraitDef" }, { "conflictingPassions", "RimWorld.SkillDef" }, { "forcedPassions", "RimWorld.SkillDef" }, { "requiredWorkTypes", "Verse.WorkTypeDef" }, { "disabledWorkTypes", "Verse.WorkTypeDef" } }, { { "disableHostilityFromFaction", "RimWorld.FactionDef" } }, }, },
	{ "RimWorld.TraitDegreeData"                                     , { "RimWorld"     , "TraitDegreeData"                                     , ""                                                       , { "label", "labelMale", "labelFemale", "description" }, {}, { { "disallowedMentalStates", "Verse.MentalStateDef" }, { "disallowedThoughts", "RimWorld.ThoughtDef" }, { "disallowedInspirations", "RimWorld.InspirationDef" }, { "mentalBreakInspirationGainSet", "RimWorld.InspirationDef" }, { "allowedMeditationFocusTypes", "RimWorld.MeditationFocusDef" }, { "disallowedMeditationFocusTypes", "RimWorld.MeditationFocusDef" }, { "theOnlyAllowedMentalBreaks", "Verse.MentalBreakDef" }, { "abilities", "RimWorld.AbilityDef" }, { "needs", "RimWorld.NeedDef" }, { "disablesNeeds", "RimWorld.NeedDef" }, { "affectedIssuesCached", "RimWorld.IssueDef" }, { "agreeableMemesCached", "RimWorld.MemeDef" }, { "disagreeableMemesCached", "RimWorld.MemeDef" } }, { { "thinkTree", "Verse.ThinkTreeDef" }, { "randomMentalState", "Verse.MentalStateDef" }, { "forcedMentalState", "Verse.MentalStateDef" } }, }, },
	{ "RimWorld.TransferableSorterDef"                               , { "RimWorld"     , "TransferableSorterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.TransportShipDef"                                    , { "RimWorld"     , "TransportShipDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "shipThing", "Verse.ThingDef" }, { "arrivingSkyfaller", "Verse.ThingDef" }, { "leavingSkyfaller", "Verse.ThingDef" }, { "worldObject", "RimWorld.WorldObjectDef" } }, }, },
	{ "RimWorld.WeaponTraitDef"                                      , { "RimWorld"     , "WeaponTraitDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "equippedHediffs", "Verse.HediffDef" }, { "bondedHediffs", "Verse.HediffDef" } }, { { "bondedThought", "RimWorld.ThoughtDef" }, { "killThought", "RimWorld.ThoughtDef" } }, }, },
	{ "RimWorld.WorkGiverDef"                                        , { "RimWorld"     , "WorkGiverDef"                                        , "Verse.Def"                                              , { "verb", "gerund", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredCapacities", "Verse.PawnCapacityDef" }, { "fixedBillGiverDefs", "Verse.ThingDef" } }, { { "workType", "Verse.WorkTypeDef" }, { "equivalenceGroup", "RimWorld.WorkGiverEquivalenceGroupDef" }, { "forceMote", "Verse.ThingDef" }, { "forceFleck", "Verse.FleckDef" }, { "scannerDef", "Verse.ThingDef" } }, }, },
	{ "RimWorld.WorkGiverEquivalenceGroupDef"                        , { "RimWorld"     , "WorkGiverEquivalenceGroupDef"                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "RimWorld.WorldObjectDef"                                      , { "RimWorld"     , "WorldObjectDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "IncidentTargetTags", "RimWorld.IncidentTargetTagDef" } }, { { "mapGenerator", "Verse.MapGeneratorDef" } }, }, },
	{ "RimWorld.XenotypeCount"                                       , { "RimWorld"     , "XenotypeCount"                                       , "RimWorld.StartingPawnCount"                             , { "description" }, {}, {}, { { "xenotype", "RimWorld.XenotypeDef" } }, }, },
	{ "RimWorld.XenotypeDef"                                         , { "RimWorld"     , "XenotypeDef"                                         , "Verse.Def"                                              , { "descriptionShort", "label", "description", "ignoreConfigErrors" }, {}, { { "genes", "Verse.GeneDef" }, { "forbiddenWeaponClasses", "WeaponClassDef" } }, { { "nameMaker", "Verse.RulePackDef" }, { "nameMakerFemale", "Verse.RulePackDef" }, { "soundDefOnImplant", "Verse.SoundDef" } }, }, },
	{ "RimWorld.XenotypeIconDef"                                     , { "RimWorld"     , "XenotypeIconDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.AI.DutyDef"                                             , { "Verse.AI"     , "DutyDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.AI.Job"                                                 , { "Verse.AI"     , "Job"                                                 , ""                                                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, { { "def", "Verse.JobDef" }, { "plantDefToSow", "Verse.ThingDef" }, { "thingDefToCarry", "Verse.ThingDef" }, { "interaction", "RimWorld.InteractionDef" }, { "speechSoundMale", "Verse.SoundDef" }, { "speechSoundFemale", "Verse.SoundDef" }, { "jobGiverThinkTree", "Verse.ThinkTreeDef" }, { "workGiverDef", "RimWorld.WorkGiverDef" } }, }, },
	{ "Verse.AI.JobGiver_Carried"                                    , { "Verse.AI"     , "JobGiver_Carried"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMap"                                    , { "Verse.AI"     , "JobGiver_ExitMap"                                    , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMapBest"                                , { "Verse.AI"     , "JobGiver_ExitMapBest"                                , "Verse.AI.JobGiver_ExitMap"                              , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMapFollowOverseer"                      , { "Verse.AI"     , "JobGiver_ExitMapFollowOverseer"                      , "Verse.AI.JobGiver_ExitMapBest"                          , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMapNearDutyTarget"                      , { "Verse.AI"     , "JobGiver_ExitMapNearDutyTarget"                      , "Verse.AI.JobGiver_ExitMap"                              , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMapPanic"                               , { "Verse.AI"     , "JobGiver_ExitMapPanic"                               , "Verse.AI.JobGiver_ExitMapBest"                          , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ExitMapRandom"                              , { "Verse.AI"     , "JobGiver_ExitMapRandom"                              , "Verse.AI.JobGiver_ExitMap"                              , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_FightFiresNearConnectedTree"                , { "Verse.AI"     , "JobGiver_FightFiresNearConnectedTree"                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_ForcedGoto"                                 , { "Verse.AI"     , "JobGiver_ForcedGoto"                                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_Idle"                                       , { "Verse.AI"     , "JobGiver_Idle"                                       , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_IdleError"                                  , { "Verse.AI"     , "JobGiver_IdleError"                                  , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_IdleForever"                                , { "Verse.AI"     , "JobGiver_IdleForever"                                , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_IdleWhileDespawned"                         , { "Verse.AI"     , "JobGiver_IdleWhileDespawned"                         , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_MoveToStandable"                            , { "Verse.AI"     , "JobGiver_MoveToStandable"                            , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_Orders"                                     , { "Verse.AI"     , "JobGiver_Orders"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_PickupDroppedWeapon"                        , { "Verse.AI"     , "JobGiver_PickupDroppedWeapon"                        , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_RunRandom"                                  , { "Verse.AI"     , "JobGiver_RunRandom"                                  , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_UseStylingStationAutomatic"                 , { "Verse.AI"     , "JobGiver_UseStylingStationAutomatic"                 , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_Wander"                                     , { "Verse.AI"     , "JobGiver_Wander"                                     , "Verse.AI.ThinkNode_JobGiver"                            , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderAnywhere"                             , { "Verse.AI"     , "JobGiver_WanderAnywhere"                             , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderCurrentRoom"                          , { "Verse.AI"     , "JobGiver_WanderCurrentRoom"                          , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderHerd"                                 , { "Verse.AI"     , "JobGiver_WanderHerd"                                 , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderInPen"                                , { "Verse.AI"     , "JobGiver_WanderInPen"                                , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderInRoofedCellsInPen"                   , { "Verse.AI"     , "JobGiver_WanderInRoofedCellsInPen"                   , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderMapEdge"                              , { "Verse.AI"     , "JobGiver_WanderMapEdge"                              , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearBreacher"                         , { "Verse.AI"     , "JobGiver_WanderNearBreacher"                         , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearConnectedTree"                    , { "Verse.AI"     , "JobGiver_WanderNearConnectedTree"                    , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearDutyLocation"                     , { "Verse.AI"     , "JobGiver_WanderNearDutyLocation"                     , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearFallbackLocation"                 , { "Verse.AI"     , "JobGiver_WanderNearFallbackLocation"                 , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearMaster"                           , { "Verse.AI"     , "JobGiver_WanderNearMaster"                           , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderNearRoamingExit"                      , { "Verse.AI"     , "JobGiver_WanderNearRoamingExit"                      , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderOwnRoom"                              , { "Verse.AI"     , "JobGiver_WanderOwnRoom"                              , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.JobGiver_WanderRoped"                                , { "Verse.AI"     , "JobGiver_WanderRoped"                                , "Verse.AI.JobGiver_Wander"                               , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AI.ThinkNode_JobGiver"                                  , { "Verse.AI"     , "ThinkNode_JobGiver"                                  , "Verse.AI.ThinkNode"                                     , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, {}, }, },
	{ "Verse.AnimationDef"                                           , { "Verse"        , "AnimationDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.ApparelLayerDef"                                        , { "Verse"        , "ApparelLayerDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.BodyDef"                                                , { "Verse"        , "BodyDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "cachedAllParts", "Verse.BodyPartRecord" }, { "cachedPartsVulnerableToFrostbite", "Verse.BodyPartRecord" } }, { { "corePart", "Verse.BodyPartRecord" } }, }, },
	{ "Verse.BodyPartDef"                                            , { "Verse"        , "BodyPartDef"                                         , "Verse.Def"                                              , { "labelShort", "removeRecipeLabelOverride", "label", "description", "ignoreConfigErrors" }, {}, { { "tags", "Verse.BodyPartTagDef" } }, { { "spawnThingOnRemoved", "Verse.ThingDef" } }, }, },
	{ "Verse.BodyPartGroupDef"                                       , { "Verse"        , "BodyPartGroupDef"                                    , "Verse.Def"                                              , { "labelShort", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.BodyPartRecord"                                         , { "Verse"        , "BodyPartRecord"                                      , ""                                                       , { "customLabel" }, {}, { { "parts", "Verse.BodyPartRecord" }, { "groups", "Verse.BodyPartGroupDef" } }, { { "body", "Verse.BodyDef" }, { "def", "Verse.BodyPartDef" }, { "parent", "Verse.BodyPartRecord" } }, }, },
	{ "Verse.BodyPartTagDef"                                         , { "Verse"        , "BodyPartTagDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.BuildableDef"                                           , { "Verse"        , "BuildableDef"                                        , "Verse.Def"                                              , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "stuffCategories", "RimWorld.StuffCategoryDef" }, { "buildingPrerequisites", "Verse.ThingDef" }, { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "dominantStyleCategory", "Verse.StyleCategoryDef" }, { "terrainAffordanceNeeded", "Verse.TerrainAffordanceDef" }, { "repairEffect", "Verse.EffecterDef" }, { "constructEffect", "Verse.EffecterDef" }, { "designationCategory", "Verse.DesignationCategoryDef" }, { "designatorDropdown", "Verse.DesignatorDropdownGroupDef" }, { "designationHotKey", "Verse.KeyBindingDef" }, { "blueprintDef", "Verse.ThingDef" }, { "installBlueprintDef", "Verse.ThingDef" }, { "frameDef", "Verse.ThingDef" } }, }, },
	{ "Verse.ClamorDef"                                              , { "Verse"        , "ClamorDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.CreepJoinerAggressiveDef"                               , { "Verse"        , "CreepJoinerAggressiveDef"                            , "Verse.CreepJoinerBaseDef"                               , { "message", "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.CreepJoinerBaseDef"                                     , { "Verse"        , "CreepJoinerBaseDef"                                  , "Verse.Def"                                              , { "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "excludes", "Verse.CreepJoinerBaseDef" }, { "requires", "Verse.CreepJoinerBaseDef" } }, {}, }, },
	{ "Verse.CreepJoinerBenefitDef"                                  , { "Verse"        , "CreepJoinerBenefitDef"                               , "Verse.CreepJoinerBaseDef"                               , { "letterExtra", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "hediffs", "Verse.HediffDef" }, { "abilities", "RimWorld.AbilityDef" } }, {}, }, },
	{ "Verse.CreepJoinerDownsideDef"                                 , { "Verse"        , "CreepJoinerDownsideDef"                              , "Verse.CreepJoinerBaseDef"                               , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "hediffs", "Verse.HediffDef" }, { "abilities", "RimWorld.AbilityDef" } }, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.CreepJoinerFormKindDef"                                 , { "Verse"        , "CreepJoinerFormKindDef"                              , "Verse.PawnKindDef"                                      , { "letterLabel", "letterPrompt", "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, { { "forcedHeadTypes", "Verse.HeadTypeDef" }, { "excludes", "Verse.CreepJoinerBaseDef" }, { "requires", "Verse.CreepJoinerBaseDef" }, { "lifeStages", "Verse.PawnKindLifeStage" }, { "disallowedTraits", "RimWorld.TraitDef" }, { "abilities", "RimWorld.AbilityDef" }, { "fixedChildBackstories", "RimWorld.BackstoryDef" }, { "fixedAdultBackstories", "RimWorld.BackstoryDef" }, { "titleSelectOne", "RimWorld.RoyalTitleDef" }, { "meleeAttackInfectionPathways", "RimWorld.InfectionPathwayDef" }, { "rangedAttackInfectionPathways", "RimWorld.InfectionPathwayDef" }, { "apparelRequired", "Verse.ThingDef" }, { "techHediffsRequired", "Verse.ThingDef" }, { "forcedAddictions", "RimWorld.ChemicalDef" } }, { { "race", "Verse.ThingDef" }, { "defaultFactionType", "RimWorld.FactionDef" }, { "mutant", "RimWorld.MutantDef" }, { "forcedHair", "RimWorld.HairDef" }, { "nameMaker", "Verse.RulePackDef" }, { "nameMakerFemale", "Verse.RulePackDef" }, { "titleRequired", "RimWorld.RoyalTitleDef" }, { "minTitleRequired", "RimWorld.RoyalTitleDef" }, { "weaponStuffOverride", "Verse.ThingDef" }, { "weaponStyleDef", "Verse.ThingStyleDef" }, { "invFoodDef", "Verse.ThingDef" } }, }, },
	{ "Verse.CreepJoinerRejectionDef"                                , { "Verse"        , "CreepJoinerRejectionDef"                             , "Verse.CreepJoinerBaseDef"                               , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.DamageArmorCategoryDef"                                 , { "Verse"        , "DamageArmorCategoryDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "multStat", "RimWorld.StatDef" }, { "armorRatingStat", "RimWorld.StatDef" } }, }, },
	{ "Verse.DamageDef"                                              , { "Verse"        , "DamageDef"                                           , "Verse.Def"                                              , { "adaptedText", "deathMessage", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "combatLogRules", "Verse.RulePackDef" }, { "stunResistStat", "RimWorld.StatDef" }, { "impactSoundType", "Verse.Sound.ImpactSoundTypeDef" }, { "damageEffecter", "Verse.EffecterDef" }, { "armorCategory", "Verse.DamageArmorCategoryDef" }, { "hediff", "Verse.HediffDef" }, { "hediffSkin", "Verse.HediffDef" }, { "hediffSolid", "Verse.HediffDef" }, { "explosionCellMote", "Verse.ThingDef" }, { "explosionCellFleck", "Verse.FleckDef" }, { "explosionInteriorEffecter", "Verse.EffecterDef" }, { "explosionInteriorMote", "Verse.ThingDef" }, { "explosionInteriorFleck", "Verse.FleckDef" }, { "explosionCenterMote", "Verse.ThingDef" }, { "explosionCenterFleck", "Verse.FleckDef" }, { "explosionCenterEffecter", "Verse.EffecterDef" }, { "explosionCellEffecter", "Verse.EffecterDef" }, { "soundExplosion", "Verse.SoundDef" } }, }, },
	{ "Verse.Def"                                                    , { "Verse"        , "Def"                                                 , "Verse.Editable"                                         , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.DesignationCategoryDef"                                 , { "Verse"        , "DesignationCategoryDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "bindingCatDef", "Verse.KeyBindingCategoryDef" } }, }, },
	{ "Verse.DesignationDef"                                         , { "Verse"        , "DesignationDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.DesignatorDropdownGroupDef"                             , { "Verse"        , "DesignatorDropdownGroupDef"                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.Editable"                                               , { "Verse"        , "Editable"                                            , ""                                                       , {}, {}, {}, {}, }, },
	{ "Verse.EffecterDef"                                            , { "Verse"        , "EffecterDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.FleckDef"                                               , { "Verse"        , "FleckDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "landSound", "Verse.SoundDef" } }, }, },
	{ "Verse.GameConditionDef"                                       , { "Verse"        , "GameConditionDef"                                    , "Verse.Def"                                              , { "startMessage", "endMessage", "letterText", "descriptionFuture", "label", "description", "ignoreConfigErrors" }, {}, { { "exclusiveConditions", "Verse.GameConditionDef" }, { "letterHyperlinks", "Verse.ThingDef" }, { "silencedByConditions", "Verse.GameConditionDef" } }, { { "letterDef", "Verse.LetterDef" }, { "weatherDef", "Verse.WeatherDef" } }, }, },
	{ "Verse.GeneCategoryDef"                                        , { "Verse"        , "GeneCategoryDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.GeneDef"                                                , { "Verse"        , "GeneDef"                                             , "Verse.Def"                                              , { "labelShortAdj", "resourceLabel", "resourceDescription", "label", "description", "ignoreConfigErrors" }, { "customEffectDescriptions" }, { { "abilities", "RimWorld.AbilityDef" }, { "disablesNeeds", "RimWorld.NeedDef" }, { "makeImmuneTo", "Verse.HediffDef" }, { "hediffGiversCannotGive", "Verse.HediffDef" }, { "forcedHeadTypes", "Verse.HeadTypeDef" } }, { { "displayCategory", "Verse.GeneCategoryDef" }, { "fur", "RimWorld.FurDef" }, { "soundCall", "Verse.SoundDef" }, { "soundDeath", "Verse.SoundDef" }, { "soundWounded", "Verse.SoundDef" }, { "causesNeed", "RimWorld.NeedDef" }, { "deathHistoryEvent", "RimWorld.HistoryEventDef" }, { "chemical", "RimWorld.ChemicalDef" }, { "forcedHair", "RimWorld.HairDef" }, { "mentalBreakDef", "Verse.MentalBreakDef" }, { "prerequisite", "Verse.GeneDef" } }, }, },
	{ "Verse.GeneSymbolPack+WeightedSymbol"                          , { "Verse"        , "WeightedSymbol"                                      , ""                                                       , { "symbol" }, {}, {}, {}, }, },
	{ "Verse.GenStepDef"                                             , { "Verse"        , "GenStepDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "linkWithSite", "RimWorld.SitePartDef" } }, }, },
	{ "Verse.Grammar.Rule_String"                                    , { "Verse.Grammar", "Rule_String"                                         , "Verse.Grammar.Rule"                                     , { "output" }, {}, {}, {}, }, },
	{ "Verse.Grammar.RulePack"                                       , { "Verse.Grammar", "RulePack"                                            , ""                                                       , {}, { "rulesStrings" }, { { "include", "Verse.RulePackDef" } }, {}, }, },
	{ "Verse.HeadTypeDef"                                            , { "Verse"        , "HeadTypeDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "requiredGenes", "Verse.GeneDef" } }, {}, }, },
	{ "Verse.HediffCompProperties_CauseMentalState"                  , { "Verse"        , "HediffCompProperties_CauseMentalState"               , "Verse.HediffCompProperties"                             , { "overrideLetterLabel", "overrideLetterDesc" }, {}, {}, { { "animalMentalState", "Verse.MentalStateDef" }, { "animalMentalStateAlias", "Verse.MentalStateDef" }, { "humanMentalState", "Verse.MentalStateDef" }, { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.HediffCompProperties_Disappears"                        , { "Verse"        , "HediffCompProperties_Disappears"                     , "Verse.HediffCompProperties"                             , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, { { "requiredMentalState", "Verse.MentalStateDef" } }, }, },
	{ "Verse.HediffCompProperties_DisappearsAndKills"                , { "Verse"        , "HediffCompProperties_DisappearsAndKills"             , "Verse.HediffCompProperties_DisappearsDisableable"       , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, { { "requiredMentalState", "Verse.MentalStateDef" } }, }, },
	{ "Verse.HediffCompProperties_DisappearsDisableable"             , { "Verse"        , "HediffCompProperties_DisappearsDisableable"          , "Verse.HediffCompProperties_Disappears"                  , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, { { "requiredMentalState", "Verse.MentalStateDef" } }, }, },
	{ "Verse.HediffCompProperties_FleshbeastEmerge"                  , { "Verse"        , "HediffCompProperties_FleshbeastEmerge"               , "Verse.HediffCompProperties"                             , { "letterLabel", "letterText" }, {}, {}, {}, }, },
	{ "Verse.HediffCompProperties_GetsPermanent"                     , { "Verse"        , "HediffCompProperties_GetsPermanent"                  , "Verse.HediffCompProperties"                             , { "permanentLabel", "instantlyPermanentLabel" }, {}, {}, {}, }, },
	{ "Verse.HediffCompProperties_LetterOnDeath"                     , { "Verse"        , "HediffCompProperties_LetterOnDeath"                  , "Verse.HediffCompProperties"                             , { "letterText", "letterLabel" }, {}, {}, { { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.HediffCompProperties_MessageAboveSeverity"              , { "Verse"        , "HediffCompProperties_MessageAboveSeverity"           , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, { { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "Verse.HediffCompProperties_MessageAfterTicks"                 , { "Verse"        , "HediffCompProperties_MessageAfterTicks"              , "Verse.HediffCompProperties"                             , { "message", "letterLabel", "letterText" }, {}, {}, { { "messageType", "Verse.MessageTypeDef" }, { "letterType", "Verse.LetterDef" } }, }, },
	{ "Verse.HediffCompProperties_MessageBase"                       , { "Verse"        , "HediffCompProperties_MessageBase"                    , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, { { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "Verse.HediffCompProperties_MessageOnRemoval"                  , { "Verse"        , "HediffCompProperties_MessageOnRemoval"               , "Verse.HediffCompProperties_MessageBase"                 , { "message" }, {}, {}, { { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "Verse.HediffCompProperties_MessageStageIncreased"             , { "Verse"        , "HediffCompProperties_MessageStageIncreased"          , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, { { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "Verse.HediffCompProperties_RandomizeSeverityPhases"           , { "Verse"        , "HediffCompProperties_RandomizeSeverityPhases"        , "Verse.HediffCompProperties_Randomizer"                  , { "notifyMessage" }, {}, { { "phases", "Verse.HediffCompProperties_RandomizeSeverityPhases+Phase" } }, {}, }, },
	{ "Verse.HediffCompProperties_RandomizeSeverityPhases+Phase"     , { "Verse"        , "Phase"                                               , ""                                                       , { "labelPrefix", "descriptionExtra" }, {}, {}, {}, }, },
	{ "Verse.HediffCompProperties_RandomizeStageWithInterval"        , { "Verse"        , "HediffCompProperties_RandomizeStageWithInterval"     , "Verse.HediffCompProperties_Randomizer"                  , { "notifyMessage" }, {}, {}, {}, }, },
	{ "Verse.HediffCompProperties_RemoveIfOtherHediff"               , { "Verse"        , "HediffCompProperties_RemoveIfOtherHediff"            , "Verse.HediffCompProperties_MessageBase"                 , { "message" }, {}, { { "hediffs", "Verse.HediffDef" } }, { { "messageType", "Verse.MessageTypeDef" } }, }, },
	{ "Verse.HediffCompProperties_ReplaceHediff"                     , { "Verse"        , "HediffCompProperties_ReplaceHediff"                  , "Verse.HediffCompProperties"                             , { "message", "letterLabel", "letterDesc" }, {}, {}, { { "messageDef", "Verse.MessageTypeDef" }, { "letterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.HediffCompProperties_SurgeryInspectable"                , { "Verse"        , "HediffCompProperties_SurgeryInspectable"             , "Verse.HediffCompProperties"                             , { "surgicalDetectionDesc" }, {}, {}, {}, }, },
	{ "Verse.HediffCompProperties_SurgeryInspectableMetalHorror"     , { "Verse"        , "HediffCompProperties_SurgeryInspectableMetalHorror"  , "Verse.HediffCompProperties_SurgeryInspectable"          , { "surgicalDetectionDesc" }, {}, {}, {}, }, },
	{ "Verse.HediffDef"                                              , { "Verse"        , "HediffDef"                                           , "Verse.Def"                                              , { "descriptionShort", "overrideTooltip", "extraTooltip", "labelNoun", "battleStateLabel", "labelNounPretty", "targetPrefix", "label", "description", "ignoreConfigErrors" }, {}, { { "stages", "Verse.HediffStage" }, { "disablesNeeds", "RimWorld.NeedDef" }, { "onlyLifeThreateningTo", "Verse.BodyPartDef" }, { "possiblePathways", "Verse.HediffInfectionPathway" }, { "givesInfectionPathways", "RimWorld.InfectionPathwayDef" }, { "allowedMeditationFocusTypes", "RimWorld.MeditationFocusDef" }, { "abilities", "RimWorld.AbilityDef" }, { "removeOnRedressIfNotOfKind", "Verse.PawnKindDef" }, { "reportStringOverrides", "Verse.HediffDef+ReportStringOverride" } }, { { "spawnThingOnRemoved", "Verse.ThingDef" }, { "causesNeed", "RimWorld.NeedDef" }, { "taleOnVisible", "RimWorld.TaleDef" }, { "defaultInstallPart", "Verse.BodyPartDef" }, { "skinShader", "Verse.ShaderTypeDef" } }, }, },
	{ "Verse.HediffDef+ReportStringOverride"                         , { "Verse"        , "ReportStringOverride"                                , ""                                                       , { "reportString" }, {}, {}, { { "jobDef", "Verse.JobDef" } }, }, },
	{ "Verse.HediffInfectionPathway"                                 , { "Verse"        , "HediffInfectionPathway"                              , ""                                                       , { "explanation" }, {}, {}, { { "pathwayDef", "RimWorld.InfectionPathwayDef" } }, }, },
	{ "Verse.HediffStage"                                            , { "Verse"        , "HediffStage"                                         , ""                                                       , { "label", "overrideLabel", "overrideTooltip", "extraTooltip" }, {}, { { "makeImmuneTo", "Verse.HediffDef" } }, { { "tale", "RimWorld.TaleDef" }, { "statOffsetEffectMultiplier", "RimWorld.StatDef" }, { "statFactorEffectMultiplier", "RimWorld.StatDef" }, { "capacityFactorEffectMultiplier", "RimWorld.StatDef" } }, }, },
	{ "Verse.IdeoStoryPatternDef"                                    , { "Verse"        , "IdeoStoryPatternDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "rules", "Verse.Grammar.RulePack" } }, }, },
	{ "Verse.ImplementOwnerTypeDef"                                  , { "Verse"        , "ImplementOwnerTypeDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.InventoryStockGroupDef"                                 , { "Verse"        , "InventoryStockGroupDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "thingDefs", "Verse.ThingDef" } }, { { "defaultThingDef", "Verse.ThingDef" } }, }, },
	{ "Verse.JobDef"                                                 , { "Verse"        , "JobDef"                                              , "Verse.Def"                                              , { "reportString", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "taleOnCompletion", "RimWorld.TaleDef" }, { "joySkill", "RimWorld.SkillDef" }, { "joyKind", "RimWorld.JoyKindDef" }, { "containerReservationLayer", "Verse.ReservationLayerDef" } }, }, },
	{ "Verse.KeyBindingCategoryDef"                                  , { "Verse"        , "KeyBindingCategoryDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "checkForConflicts", "Verse.KeyBindingCategoryDef" } }, {}, }, },
	{ "Verse.KeyBindingDef"                                          , { "Verse"        , "KeyBindingDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "category", "Verse.KeyBindingCategoryDef" } }, }, },
	{ "Verse.LetterDef"                                              , { "Verse"        , "LetterDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "arriveSound", "Verse.SoundDef" } }, }, },
	{ "Verse.LogEntryDef"                                            , { "Verse"        , "LogEntryDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.ManeuverDef"                                            , { "Verse"        , "ManeuverDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "requiredCapacity", "Verse.ToolCapacityDef" }, { "verb", "Verse.VerbProperties" }, { "combatLogRulesHit", "Verse.RulePackDef" }, { "combatLogRulesDeflect", "Verse.RulePackDef" }, { "combatLogRulesMiss", "Verse.RulePackDef" }, { "combatLogRulesDodge", "Verse.RulePackDef" }, { "logEntryDef", "Verse.LogEntryDef" } }, }, },
	{ "Verse.MapGeneratorDef"                                        , { "Verse"        , "MapGeneratorDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "genSteps", "Verse.GenStepDef" } }, { { "roofDef", "Verse.RoofDef" } }, }, },
	{ "Verse.MechWorkModeDef"                                        , { "Verse"        , "MechWorkModeDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.MentalBreakDef"                                         , { "Verse"        , "MentalBreakDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "mentalState", "Verse.MentalStateDef" }, { "requiredTrait", "RimWorld.TraitDef" }, { "requiredGene", "Verse.GeneDef" }, { "requiredPrecept", "RimWorld.PreceptDef" } }, }, },
	{ "Verse.MentalFitDef"                                           , { "Verse"        , "MentalFitDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "mentalState", "Verse.MentalStateDef" } }, }, },
	{ "Verse.MentalStateDef"                                         , { "Verse"        , "MentalStateDef"                                      , "Verse.Def"                                              , { "beginLetter", "beginLetterLabel", "recoveryMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, { { "requiredCapacities", "Verse.PawnCapacityDef" }, { "blockInteractionInitiationExcept", "RimWorld.InteractionDef" }, { "blockInteractionRecipientExcept", "RimWorld.InteractionDef" } }, { { "stateEffecter", "Verse.EffecterDef" }, { "tale", "RimWorld.TaleDef" }, { "moodRecoveryThought", "RimWorld.ThoughtDef" }, { "beginLetterDef", "Verse.LetterDef" } }, }, },
	{ "Verse.MessageTypeDef"                                         , { "Verse"        , "MessageTypeDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "sound", "Verse.SoundDef" } }, }, },
	{ "Verse.OptionCategoryDef"                                      , { "Verse"        , "OptionCategoryDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.OrderedTakeGroupDef"                                    , { "Verse"        , "OrderedTakeGroupDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.PawnCapacityDef"                                        , { "Verse"        , "PawnCapacityDef"                                     , "Verse.Def"                                              , { "labelMechanoids", "labelAnimals", "labelAnomalyEntity", "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.PawnKindDef"                                            , { "Verse"        , "PawnKindDef"                                         , "Verse.Def"                                              , { "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, { { "lifeStages", "Verse.PawnKindLifeStage" }, { "disallowedTraits", "RimWorld.TraitDef" }, { "abilities", "RimWorld.AbilityDef" }, { "fixedChildBackstories", "RimWorld.BackstoryDef" }, { "fixedAdultBackstories", "RimWorld.BackstoryDef" }, { "titleSelectOne", "RimWorld.RoyalTitleDef" }, { "meleeAttackInfectionPathways", "RimWorld.InfectionPathwayDef" }, { "rangedAttackInfectionPathways", "RimWorld.InfectionPathwayDef" }, { "apparelRequired", "Verse.ThingDef" }, { "techHediffsRequired", "Verse.ThingDef" }, { "forcedAddictions", "RimWorld.ChemicalDef" } }, { { "race", "Verse.ThingDef" }, { "defaultFactionType", "RimWorld.FactionDef" }, { "mutant", "RimWorld.MutantDef" }, { "forcedHair", "RimWorld.HairDef" }, { "nameMaker", "Verse.RulePackDef" }, { "nameMakerFemale", "Verse.RulePackDef" }, { "titleRequired", "RimWorld.RoyalTitleDef" }, { "minTitleRequired", "RimWorld.RoyalTitleDef" }, { "weaponStuffOverride", "Verse.ThingDef" }, { "weaponStyleDef", "Verse.ThingStyleDef" }, { "invFoodDef", "Verse.ThingDef" } }, }, },
	{ "Verse.PawnKindLifeStage"                                      , { "Verse"        , "PawnKindLifeStage"                                   , ""                                                       , { "label", "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural" }, {}, {}, {}, }, },
	{ "Verse.PawnRenderNodeTagDef"                                   , { "Verse"        , "PawnRenderNodeTagDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.PawnRenderTreeDef"                                      , { "Verse"        , "PawnRenderTreeDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.PlaceDef"                                               , { "Verse"        , "PlaceDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "placeRules", "Verse.Grammar.RulePack" } }, }, },
	{ "Verse.RaceProperties"                                         , { "Verse"        , "RaceProperties"                                      , ""                                                       , { "meatLabel" }, {}, { { "hediffGiverSets", "RimWorld.HediffGiverSetDef" }, { "willNeverEat", "Verse.ThingDef" }, { "mechEnabledWorkTypes", "Verse.WorkTypeDef" } }, { { "fleshType", "RimWorld.FleshTypeDef" }, { "bloodDef", "Verse.ThingDef" }, { "bloodSmearDef", "Verse.ThingDef" }, { "thinkTreeMain", "Verse.ThinkTreeDef" }, { "thinkTreeConstant", "Verse.ThinkTreeDef" }, { "dutyBoss", "Verse.AI.DutyDef" }, { "body", "Verse.BodyDef" }, { "renderTree", "Verse.PawnRenderTreeDef" }, { "startingAnimation", "Verse.AnimationDef" }, { "linkedCorpseKind", "Verse.ThingDef" }, { "bulletStaggerEffecterDef", "Verse.EffecterDef" }, { "trainability", "Verse.TrainabilityDef" }, { "nameGenerator", "Verse.RulePackDef" }, { "nameGeneratorFemale", "Verse.RulePackDef" }, { "specificMeatDef", "Verse.ThingDef" }, { "useMeatFrom", "Verse.ThingDef" }, { "useLeatherFrom", "Verse.ThingDef" }, { "leatherDef", "Verse.ThingDef" }, { "soundMeleeHitPawn", "Verse.SoundDef" }, { "soundMeleeHitBuilding", "Verse.SoundDef" }, { "soundMeleeMiss", "Verse.SoundDef" }, { "soundMeleeDodge", "Verse.SoundDef" }, { "soundAmbience", "Verse.SoundDef" }, { "soundMoving", "Verse.SoundDef" }, { "soundEating", "Verse.SoundDef" }, { "knowledgeCategory", "RimWorld.KnowledgeCategoryDef" }, { "meatDef", "Verse.ThingDef" }, { "corpseDef", "Verse.ThingDef" }, { "unnaturalCorpseDef", "Verse.ThingDef" }, { "cachedAnyPawnKind", "Verse.PawnKindDef" } }, }, },
	{ "Verse.RecipeDef"                                              , { "Verse"        , "RecipeDef"                                           , "Verse.Def"                                              , { "jobString", "successfullyRemovedHediffMessage", "label", "description", "ignoreConfigErrors" }, {}, { { "forceHiddenSpecialFilters", "Verse.SpecialThingFilterDef" }, { "recipeUsers", "Verse.ThingDef" }, { "appliedOnFixedBodyParts", "Verse.BodyPartDef" }, { "appliedOnFixedBodyPartGroups", "Verse.BodyPartGroupDef" }, { "mutantPrerequisite", "RimWorld.MutantDef" }, { "mutantBlacklist", "RimWorld.MutantDef" }, { "memePrerequisitesAny", "RimWorld.MemeDef" }, { "researchPrerequisites", "Verse.ResearchProjectDef" }, { "premultipliedSmallIngredients", "Verse.ThingDef" } }, { { "requiredGiverWorkType", "Verse.WorkTypeDef" }, { "workSpeedStat", "RimWorld.StatDef" }, { "efficiencyStat", "RimWorld.StatDef" }, { "workTableEfficiencyStat", "RimWorld.StatDef" }, { "workTableSpeedStat", "RimWorld.StatDef" }, { "fixedIngredientFilter", "Verse.ThingFilter" }, { "defaultIngredientFilter", "Verse.ThingFilter" }, { "unfinishedThingDef", "Verse.ThingDef" }, { "workSkill", "RimWorld.SkillDef" }, { "effectWorking", "Verse.EffecterDef" }, { "soundWorking", "Verse.SoundDef" }, { "uiIconThing", "Verse.ThingDef" }, { "addsHediff", "Verse.HediffDef" }, { "removesHediff", "Verse.HediffDef" }, { "addsHediffOnFailure", "Verse.HediffDef" }, { "changesHediffLevel", "Verse.HediffDef" }, { "surgeryOutcomeEffect", "RimWorld.SurgeryOutcomeEffectDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" }, { "conceptLearned", "RimWorld.ConceptDef" } }, }, },
	{ "Verse.RecipeMakerProperties"                                  , { "Verse"        , "RecipeMakerProperties"                               , ""                                                       , { "label" }, {}, { { "recipeUsers", "Verse.ThingDef" }, { "memePrerequisitesAny", "RimWorld.MemeDef" }, { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "workSpeedStat", "RimWorld.StatDef" }, { "efficiencyStat", "RimWorld.StatDef" }, { "unfinishedThingDef", "Verse.ThingDef" }, { "defaultIngredientFilter", "Verse.ThingFilter" }, { "workSkill", "RimWorld.SkillDef" }, { "requiredGiverWorkType", "Verse.WorkTypeDef" }, { "effectWorking", "Verse.EffecterDef" }, { "soundWorking", "Verse.SoundDef" }, { "researchPrerequisite", "Verse.ResearchProjectDef" } }, }, },
	{ "Verse.ResearchProjectDef"                                     , { "Verse"        , "ResearchProjectDef"                                  , "Verse.Def"                                              , { "discoveredLetterTitle", "discoveredLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "prerequisites", "Verse.ResearchProjectDef" }, { "hiddenPrerequisites", "Verse.ResearchProjectDef" }, { "requiredByThis", "Verse.ResearchProjectDef" }, { "requiredResearchFacilities", "Verse.ThingDef" }, { "tags", "Verse.ResearchProjectTagDef" }, { "requiredAnalyzed", "Verse.ThingDef" }, { "cachedUnlockedDefs", "Verse.Def" } }, { { "requiredResearchBuilding", "Verse.ThingDef" }, { "tab", "RimWorld.ResearchTabDef" }, { "knowledgeCategory", "RimWorld.KnowledgeCategoryDef" }, { "teachConcept", "RimWorld.ConceptDef" }, { "generalRules", "Verse.Grammar.RulePack" }, { "cachedTechprint", "Verse.ThingDef" } }, }, },
	{ "Verse.ResearchProjectTagDef"                                  , { "Verse"        , "ResearchProjectTagDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.ReservationLayerDef"                                    , { "Verse"        , "ReservationLayerDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.RoofDef"                                                , { "Verse"        , "RoofDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "collapseLeavingThingDef", "Verse.ThingDef" }, { "filthLeaving", "Verse.ThingDef" }, { "soundPunchThrough", "Verse.SoundDef" } }, }, },
	{ "Verse.RoomRoleDef"                                            , { "Verse"        , "RoomRoleDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "relatedStats", "Verse.RoomStatDef" } }, {}, }, },
	{ "Verse.RoomStatDef"                                            , { "Verse"        , "RoomStatDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "inputStat", "Verse.RoomStatDef" } }, }, },
	{ "Verse.RulePackDef"                                            , { "Verse"        , "RulePackDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "include", "Verse.RulePackDef" } }, { { "rulePack", "Verse.Grammar.RulePack" } }, }, },
	{ "Verse.ScatterableDef"                                         , { "Verse"        , "ScatterableDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.ShaderTypeDef"                                          , { "Verse"        , "ShaderTypeDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.SongDef"                                                , { "Verse"        , "SongDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "minRoyalTitle", "RimWorld.RoyalTitleDef" } }, }, },
	{ "Verse.Sound.ImpactSoundTypeDef"                               , { "Verse.Sound"  , "ImpactSoundTypeDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "soundDef", "Verse.SoundDef" } }, }, },
	{ "Verse.SoundDef"                                               , { "Verse"        , "SoundDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "sustainStartSound", "Verse.SoundDef" }, { "sustainStopSound", "Verse.SoundDef" }, { "sustainFadeoutStartSound", "Verse.SoundDef" } }, }, },
	{ "Verse.SpecialThingFilterDef"                                  , { "Verse"        , "SpecialThingFilterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "parentCategory", "Verse.ThingCategoryDef" } }, }, },
	{ "Verse.StuffAppearanceDef"                                     , { "Verse"        , "StuffAppearanceDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.StyleCategoryDef"                                       , { "Verse"        , "StyleCategoryDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "addDesignators", "Verse.BuildableDef" }, { "addDesignatorGroups", "Verse.DesignatorDropdownGroupDef" }, { "cachedAllDesignatorBuildables", "Verse.BuildableDef" } }, { { "soundOngoingRitual", "Verse.SoundDef" }, { "ritualVisualEffectDef", "RimWorld.RitualVisualEffectDef" } }, }, },
	{ "Verse.SubcameraDef"                                           , { "Verse"        , "SubcameraDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.TerrainAffordanceDef"                                   , { "Verse"        , "TerrainAffordanceDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.TerrainDef"                                             , { "Verse"        , "TerrainDef"                                          , "Verse.BuildableDef"                                     , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "affordances", "Verse.TerrainAffordanceDef" }, { "tools", "Verse.Tool" }, { "stuffCategories", "RimWorld.StuffCategoryDef" }, { "buildingPrerequisites", "Verse.ThingDef" }, { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "smoothedTerrain", "Verse.TerrainDef" }, { "colorDef", "RimWorld.ColorDef" }, { "driesTo", "Verse.TerrainDef" }, { "burnedDef", "Verse.TerrainDef" }, { "traversedThought", "RimWorld.ThoughtDef" }, { "destroyEffect", "Verse.EffecterDef" }, { "destroyEffectWater", "Verse.EffecterDef" }, { "pollutionShaderType", "Verse.ShaderTypeDef" }, { "generatedFilth", "Verse.ThingDef" }, { "dominantStyleCategory", "Verse.StyleCategoryDef" }, { "terrainAffordanceNeeded", "Verse.TerrainAffordanceDef" }, { "repairEffect", "Verse.EffecterDef" }, { "constructEffect", "Verse.EffecterDef" }, { "designationCategory", "Verse.DesignationCategoryDef" }, { "designatorDropdown", "Verse.DesignatorDropdownGroupDef" }, { "designationHotKey", "Verse.KeyBindingDef" }, { "blueprintDef", "Verse.ThingDef" }, { "installBlueprintDef", "Verse.ThingDef" }, { "frameDef", "Verse.ThingDef" } }, }, },
	{ "Verse.ThingCategoryDef"                                       , { "Verse"        , "ThingCategoryDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "childCategories", "Verse.ThingCategoryDef" }, { "childThingDefs", "Verse.ThingDef" }, { "sortedChildThingDefsCached", "Verse.ThingDef" }, { "childSpecialFilters", "Verse.SpecialThingFilterDef" } }, { { "parent", "Verse.ThingCategoryDef" } }, }, },
	{ "Verse.ThingDef"                                               , { "Verse"        , "ThingDef"                                            , "Verse.BuildableDef"                                     , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "virtualDefs", "Verse.ThingDef" }, { "recipes", "Verse.RecipeDef" }, { "thingCategories", "Verse.ThingCategoryDef" }, { "verbs", "Verse.VerbProperties" }, { "tools", "Verse.Tool" }, { "weaponClasses", "WeaponClassDef" }, { "cachedRelevantStyleCategories", "Verse.StyleCategoryDef" }, { "allRecipesCached", "Verse.RecipeDef" }, { "stuffCategories", "RimWorld.StuffCategoryDef" }, { "buildingPrerequisites", "Verse.ThingDef" }, { "researchPrerequisites", "Verse.ResearchProjectDef" } }, { { "virtualDefParent", "Verse.ThingDef" }, { "recipeMaker", "Verse.RecipeMakerProperties" }, { "minifiedDef", "Verse.ThingDef" }, { "slagDef", "Verse.ThingDef" }, { "interactionCellIcon", "Verse.ThingDef" }, { "filthLeaving", "Verse.ThingDef" }, { "requiresFactionToAcquire", "RimWorld.FactionDef" }, { "orderedTakeGroup", "Verse.OrderedTakeGroupDef" }, { "defaultStuff", "Verse.ThingDef" }, { "storedConceptLearnOpportunity", "RimWorld.ConceptDef" }, { "soundSpawned", "Verse.SoundDef" }, { "soundDrop", "Verse.SoundDef" }, { "soundPickup", "Verse.SoundDef" }, { "soundInteract", "Verse.SoundDef" }, { "soundImpactDefault", "Verse.SoundDef" }, { "soundPlayInstrument", "Verse.SoundDef" }, { "soundOpen", "Verse.SoundDef" }, { "meleeHitSound", "Verse.SoundDef" }, { "entityDefToBuild", "Verse.BuildableDef" }, { "projectileWhenLoaded", "Verse.ThingDef" }, { "ideoBuildingNamerBase", "Verse.RulePackDef" }, { "entityCodexEntry", "RimWorld.EntityCodexEntryDef" }, { "ingestible", "RimWorld.IngestibleProperties" }, { "race", "Verse.RaceProperties" }, { "dominantStyleCategory", "Verse.StyleCategoryDef" }, { "terrainAffordanceNeeded", "Verse.TerrainAffordanceDef" }, { "repairEffect", "Verse.EffecterDef" }, { "constructEffect", "Verse.EffecterDef" }, { "designationCategory", "Verse.DesignationCategoryDef" }, { "designatorDropdown", "Verse.DesignatorDropdownGroupDef" }, { "designationHotKey", "Verse.KeyBindingDef" }, { "blueprintDef", "Verse.ThingDef" }, { "installBlueprintDef", "Verse.ThingDef" }, { "frameDef", "Verse.ThingDef" } }, }, },
	{ "Verse.ThingFilter"                                            , { "Verse"        , "ThingFilter"                                         , ""                                                       , { "customSummary" }, {}, { { "disallowedSpecialFilters", "Verse.SpecialThingFilterDef" }, { "hiddenSpecialFilters", "Verse.SpecialThingFilterDef" }, { "thingDefs", "Verse.ThingDef" }, { "stuffCategoriesToAllow", "RimWorld.StuffCategoryDef" }, { "allowAllWhoCanMake", "Verse.ThingDef" }, { "disallowedThingDefs", "Verse.ThingDef" } }, { { "overrideRootDef", "Verse.ThingCategoryDef" } }, }, },
	{ "Verse.ThingStyleDef"                                          , { "Verse"        , "ThingStyleDef"                                       , "Verse.Def"                                              , { "overrideLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, { { "cachedCategory", "Verse.StyleCategoryDef" } }, }, },
	{ "Verse.ThinkTreeDef"                                           , { "Verse"        , "ThinkTreeDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.TipSetDef"                                              , { "Verse"        , "TipSetDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.Tool"                                                   , { "Verse"        , "Tool"                                                , ""                                                       , { "label", "labelNoLocation" }, {}, { { "capacities", "Verse.ToolCapacityDef" } }, { { "hediff", "Verse.HediffDef" }, { "soundMeleeHit", "Verse.SoundDef" }, { "soundMeleeMiss", "Verse.SoundDef" }, { "linkedBodyPartsGroup", "Verse.BodyPartGroupDef" } }, }, },
	{ "Verse.ToolCapacityDef"                                        , { "Verse"        , "ToolCapacityDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.TrainabilityDef"                                        , { "Verse"        , "TrainabilityDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "Verse.VerbProperties"                                         , { "Verse"        , "VerbProperties"                                      , ""                                                       , { "label", "mouseTargetingText" }, {}, {}, { { "rangeStat", "RimWorld.StatDef" }, { "soundCast", "Verse.SoundDef" }, { "soundCastTail", "Verse.SoundDef" }, { "soundAiming", "Verse.SoundDef" }, { "impactMote", "Verse.ThingDef" }, { "impactFleck", "Verse.FleckDef" }, { "warmupEffecter", "Verse.EffecterDef" }, { "aimingLineMote", "Verse.ThingDef" }, { "aimingChargeMote", "Verse.ThingDef" }, { "aimingTargetMote", "Verse.ThingDef" }, { "aimingTargetEffecter", "Verse.EffecterDef" }, { "linkedBodyPartsGroup", "Verse.BodyPartGroupDef" }, { "meleeDamageDef", "Verse.DamageDef" }, { "defaultProjectile", "Verse.ThingDef" }, { "beamDamageDef", "Verse.DamageDef" }, { "beamGroundFleckDef", "Verse.FleckDef" }, { "beamEndEffecterDef", "Verse.EffecterDef" }, { "beamMoteDef", "Verse.ThingDef" }, { "beamLineFleckDef", "Verse.FleckDef" }, { "soundCastBeam", "Verse.SoundDef" }, { "sprayEffecterDef", "Verse.EffecterDef" }, { "spawnDef", "Verse.ThingDef" }, { "colonyWideTaleDef", "RimWorld.TaleDef" }, { "bodypartTagTarget", "Verse.BodyPartTagDef" }, { "rangedFireRulepack", "Verse.RulePackDef" }, { "soundLanding", "Verse.SoundDef" }, { "flightEffecterDef", "Verse.EffecterDef" }, { "workModeDef", "Verse.MechWorkModeDef" } }, }, },
	{ "Verse.WeatherDef"                                             , { "Verse"        , "WeatherDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "ambientSounds", "Verse.SoundDef" } }, { { "weatherThought", "RimWorld.ThoughtDef" } }, }, },
	{ "Verse.WorkTypeDef"                                            , { "Verse"        , "WorkTypeDef"                                         , "Verse.Def"                                              , { "labelShort", "pawnLabel", "gerundLabel", "verb", "label", "description", "ignoreConfigErrors" }, {}, { { "relevantSkills", "RimWorld.SkillDef" }, { "workGiversByPriority", "RimWorld.WorkGiverDef" } }, {}, }, },
	{ "Verse.WorldGenStepDef"                                        , { "Verse"        , "WorldGenStepDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "WeaponClassDef"                                               , { ""             , "WeaponClassDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, {}, }, },
	{ "WeaponClassPairDef"                                           , { ""             , "WeaponClassPairDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, { { "first", "WeaponClassDef" }, { "second", "WeaponClassDef" } }, }, },
};

