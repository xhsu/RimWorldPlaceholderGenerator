inline classinfo_dict_t const gRimWorldClasses
{
	{ "RimWorld.AbilityCategoryDef"               , { "RimWorld"    , "AbilityCategoryDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.AbilityDef"                       , { "RimWorld"    , "AbilityDef"                       , "Verse.Def"                  , { "confirmationDialogText", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.AbilityGroupDef"                  , { "RimWorld"    , "AbilityGroupDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BabyPlayDef"                      , { "RimWorld"    , "BabyPlayDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BackstoryDef"                     , { "RimWorld"    , "BackstoryDef"                     , "Verse.Def"                  , { "title", "titleFemale", "titleShort", "titleShortFemale", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BeardDef"                         , { "RimWorld"    , "BeardDef"                         , "RimWorld.StyleItemDef"      , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BillRepeatModeDef"                , { "RimWorld"    , "BillRepeatModeDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BillStoreModeDef"                 , { "RimWorld"    , "BillStoreModeDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BiomeDef"                         , { "RimWorld"    , "BiomeDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BodyTypeDef"                      , { "RimWorld"    , "BodyTypeDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BossDef"                          , { "RimWorld"    , "BossDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.BossgroupDef"                     , { "RimWorld"    , "BossgroupDef"                     , "Verse.Def"                  , { "leaderDescription", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ChemicalDef"                      , { "RimWorld"    , "ChemicalDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ColorDef"                         , { "RimWorld"    , "ColorDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ComplexLayoutDef"                 , { "RimWorld"    , "ComplexLayoutDef"                 , "RimWorld.LayoutDef"         , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ComplexThreatDef"                 , { "RimWorld"    , "ComplexThreatDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ConceptDef"                       , { "RimWorld"    , "ConceptDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.CultureDef"                       , { "RimWorld"    , "CultureDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.DebugTabMenuDef"                  , { "RimWorld"    , "DebugTabMenuDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.DifficultyDef"                    , { "RimWorld"    , "DifficultyDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.DrugPolicyDef"                    , { "RimWorld"    , "DrugPolicyDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.EntityCategoryDef"                , { "RimWorld"    , "EntityCategoryDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.EntityCodexEntryDef"              , { "RimWorld"    , "EntityCodexEntryDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ExpansionDef"                     , { "RimWorld"    , "ExpansionDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ExpectationDef"                   , { "RimWorld"    , "ExpectationDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.FactionDef"                       , { "RimWorld"    , "FactionDef"                       , "Verse.Def"                  , { "fixedName", "pawnSingular", "pawnsPlural", "leaderTitle", "leaderTitleFemale", "royalFavorLabel", "ideoDescription", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.FeatureDef"                       , { "RimWorld"    , "FeatureDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.FleshTypeDef"                     , { "RimWorld"    , "FleshTypeDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.FurDef"                           , { "RimWorld"    , "FurDef"                           , "RimWorld.StyleItemDef"      , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.GatheringDef"                     , { "RimWorld"    , "GatheringDef"                     , "Verse.Def"                  , { "letterTitle", "letterText", "calledOffMessage", "finishedMessage", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.GauranlenTreeModeDef"             , { "RimWorld"    , "GauranlenTreeModeDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.GeneTemplateDef"                  , { "RimWorld"    , "GeneTemplateDef"                  , "Verse.Def"                  , { "labelShortAdj", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.GoodwillSituationDef"             , { "RimWorld"    , "GoodwillSituationDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HairDef"                          , { "RimWorld"    , "HairDef"                          , "RimWorld.StyleItemDef"      , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HediffGiverSetDef"                , { "RimWorld"    , "HediffGiverSetDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HibernatableStateDef"             , { "RimWorld"    , "HibernatableStateDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HistoryAutoRecorderDef"           , { "RimWorld"    , "HistoryAutoRecorderDef"           , "Verse.Def"                  , { "graphLabelY", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HistoryAutoRecorderGroupDef"      , { "RimWorld"    , "HistoryAutoRecorderGroupDef"      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.HistoryEventDef"                  , { "RimWorld"    , "HistoryEventDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoColorDef"                     , { "RimWorld"    , "IdeoColorDef"                     , "RimWorld.IdeoSymbolPartDef" , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoFoundationDef"                , { "RimWorld"    , "IdeoFoundationDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoIconDef"                      , { "RimWorld"    , "IdeoIconDef"                      , "RimWorld.IdeoSymbolPartDef" , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoPresetCategoryDef"            , { "RimWorld"    , "IdeoPresetCategoryDef"            , "Verse.Def"                  , { "groupLabel", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoPresetDef"                    , { "RimWorld"    , "IdeoPresetDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IdeoSymbolPartDef"                , { "RimWorld"    , "IdeoSymbolPartDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IncidentCategoryDef"              , { "RimWorld"    , "IncidentCategoryDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IncidentDef"                      , { "RimWorld"    , "IncidentDef"                      , "Verse.Def"                  , { "letterText", "letterLabel", "diseaseLethalLetterText", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IncidentTargetTagDef"             , { "RimWorld"    , "IncidentTargetTagDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.InfectionPathwayDef"              , { "RimWorld"    , "InfectionPathwayDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.InspirationDef"                   , { "RimWorld"    , "InspirationDef"                   , "Verse.Def"                  , { "beginLetter", "beginLetterLabel", "endMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.InstructionDef"                   , { "RimWorld"    , "InstructionDef"                   , "Verse.Def"                  , { "text", "textController", "rejectInputMessage", "onMapInstruction", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.InteractionDef"                   , { "RimWorld"    , "InteractionDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.IssueDef"                         , { "RimWorld"    , "IssueDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.JoyGiverDef"                      , { "RimWorld"    , "JoyGiverDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.JoyKindDef"                       , { "RimWorld"    , "JoyKindDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.KnowledgeCategoryDef"             , { "RimWorld"    , "KnowledgeCategoryDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.LayoutDef"                        , { "RimWorld"    , "LayoutDef"                        , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.LayoutRoomDef"                    , { "RimWorld"    , "LayoutRoomDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.LearningDesireDef"                , { "RimWorld"    , "LearningDesireDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.LifeStageDef"                     , { "RimWorld"    , "LifeStageDef"                     , "Verse.Def"                  , { "customMoodTipString", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MainButtonDef"                    , { "RimWorld"    , "MainButtonDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MapMeshFlagDef"                   , { "RimWorld"    , "MapMeshFlagDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MeditationFocusDef"               , { "RimWorld"    , "MeditationFocusDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MemeDef"                          , { "RimWorld"    , "MemeDef"                          , "Verse.Def"                  , { "worshipRoomLabel", "label", "description", "ignoreConfigErrors" }, { "symbolPacks" }, }, },
	{ "RimWorld.MemeGroupDef"                     , { "RimWorld"    , "MemeGroupDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MonolithLevelDef"                 , { "RimWorld"    , "MonolithLevelDef"                 , "Verse.Def"                  , { "monolithLabel", "monolithDescription", "levelInspectText", "extraQuestDescription", "activateGizmoText", "activateFloatMenuText", "activateGizmoDescription", "pawnSentToActivateMessage", "monolithCanBeActivatedText", "activateQuestText", "activatableLetterLabel", "activatableLetterText", "activatedLetterText", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MusicSequenceDef"                 , { "RimWorld"    , "MusicSequenceDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MusicTransitionDef"               , { "RimWorld"    , "MusicTransitionDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.MutantDef"                        , { "RimWorld"    , "MutantDef"                        , "Verse.Def"                  , { "namePrefix", "deathLetter", "deathLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.NeedDef"                          , { "RimWorld"    , "NeedDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PawnColumnDef"                    , { "RimWorld"    , "PawnColumnDef"                    , "Verse.Def"                  , { "headerTip", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PawnGroupKindDef"                 , { "RimWorld"    , "PawnGroupKindDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PawnRelationDef"                  , { "RimWorld"    , "PawnRelationDef"                  , "Verse.Def"                  , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PawnsArrivalModeDef"              , { "RimWorld"    , "PawnsArrivalModeDef"              , "Verse.Def"                  , { "textEnemy", "textFriendly", "textWillArrive", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PawnTableDef"                     , { "RimWorld"    , "PawnTableDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PitGateIncidentDef"               , { "RimWorld"    , "PitGateIncidentDef"               , "Verse.Def"                  , { "disableEnteringReason", "letterText", "letterLabel", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PreceptDef"                       , { "RimWorld"    , "PreceptDef"                       , "Verse.Def"                  , { "tipLabelOverride", "extraTextPawnDeathLetter", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PrisonerInteractionModeDef"       , { "RimWorld"    , "PrisonerInteractionModeDef"       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PsychicRitualDef"                 , { "RimWorld"    , "PsychicRitualDef"                 , "Verse.Def"                  , { "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.PsychicRitualRoleDef"             , { "RimWorld"    , "PsychicRitualRoleDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.QuestScriptDef"                   , { "RimWorld"    , "QuestScriptDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RaidAgeRestrictionDef"            , { "RimWorld"    , "RaidAgeRestrictionDef"            , "Verse.Def"                  , { "arrivalTextExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RaidStrategyDef"                  , { "RimWorld"    , "RaidStrategyDef"                  , "Verse.Def"                  , { "arrivalTextFriendly", "arrivalTextEnemy", "letterLabelEnemy", "letterLabelFriendly", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RecordDef"                        , { "RimWorld"    , "RecordDef"                        , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RenderSkipFlagDef"                , { "RimWorld"    , "RenderSkipFlagDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ResearchTabDef"                   , { "RimWorld"    , "ResearchTabDef"                   , "Verse.Def"                  , { "generalTitle", "generalDescription", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualAttachableOutcomeEffectDef" , { "RimWorld"    , "RitualAttachableOutcomeEffectDef" , "Verse.Def"                  , { "letterInfoText", "effectDesc", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualBehaviorDef"                , { "RimWorld"    , "RitualBehaviorDef"                , "Verse.Def"                  , { "letterTitle", "letterText", "spectatorsLabel", "spectatorGerund", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualObligationTargetFilterDef"  , { "RimWorld"    , "RitualObligationTargetFilterDef"  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualOutcomeEffectDef"           , { "RimWorld"    , "RitualOutcomeEffectDef"           , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, { "extraPredictedOutcomeDescriptions", "extraInfoLines" }, }, },
	{ "RimWorld.RitualPatternDef"                 , { "RimWorld"    , "RitualPatternDef"                 , "Verse.Def"                  , { "ritualExpectedDesc", "ritualExpectedDescNoAdjective", "shortDescOverride", "descOverride", "ritualExplanation", "beginRitualOverride", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualTargetFilterDef"            , { "RimWorld"    , "RitualTargetFilterDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RitualVisualEffectDef"            , { "RimWorld"    , "RitualVisualEffectDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RiverDef"                         , { "RimWorld"    , "RiverDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RoadDef"                          , { "RimWorld"    , "RoadDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RoadPathingDef"                   , { "RimWorld"    , "RoadPathingDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RoadWorldLayerDef"                , { "RimWorld"    , "RoadWorldLayerDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RoyalTitleDef"                    , { "RimWorld"    , "RoyalTitleDef"                    , "Verse.Def"                  , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RoyalTitlePermitDef"              , { "RimWorld"    , "RoyalTitlePermitDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.RuleDef"                          , { "RimWorld"    , "RuleDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ScenarioDef"                      , { "RimWorld"    , "ScenarioDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ScenPartDef"                      , { "RimWorld"    , "ScenPartDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ShipJobDef"                       , { "RimWorld"    , "ShipJobDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.SitePartDef"                      , { "RimWorld"    , "SitePartDef"                      , "Verse.Def"                  , { "approachOrderString", "approachingReportString", "arrivedLetter", "arrivedLetterLabelPart", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.SketchResolverDef"                , { "RimWorld"    , "SketchResolverDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.SkillDef"                         , { "RimWorld"    , "SkillDef"                         , "Verse.Def"                  , { "skillLabel", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.SlaveInteractionModeDef"          , { "RimWorld"    , "SlaveInteractionModeDef"          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StatCategoryDef"                  , { "RimWorld"    , "StatCategoryDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StatDef"                          , { "RimWorld"    , "StatDef"                          , "Verse.Def"                  , { "formatString", "formatStringUnfinalized", "statFactorsExplanationHeader", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StorytellerDef"                   , { "RimWorld"    , "StorytellerDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StuffCategoryDef"                 , { "RimWorld"    , "StuffCategoryDef"                 , "Verse.Def"                  , { "noun", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StyleItemCategoryDef"             , { "RimWorld"    , "StyleItemCategoryDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.StyleItemDef"                     , { "RimWorld"    , "StyleItemDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.SurgeryOutcomeEffectDef"          , { "RimWorld"    , "SurgeryOutcomeEffectDef"          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TaleDef"                          , { "RimWorld"    , "TaleDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TattooDef"                        , { "RimWorld"    , "TattooDef"                        , "RimWorld.StyleItemDef"      , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TerrainTemplateDef"               , { "RimWorld"    , "TerrainTemplateDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ThingSetMakerDef"                 , { "RimWorld"    , "ThingSetMakerDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.ThoughtDef"                       , { "RimWorld"    , "ThoughtDef"                       , "Verse.Def"                  , { "labelInBracketsExtraForHediff", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TimeAssignmentDef"                , { "RimWorld"    , "TimeAssignmentDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TraderKindDef"                    , { "RimWorld"    , "TraderKindDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TrainableDef"                     , { "RimWorld"    , "TrainableDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TraitDef"                         , { "RimWorld"    , "TraitDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TransferableSorterDef"            , { "RimWorld"    , "TransferableSorterDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.TransportShipDef"                 , { "RimWorld"    , "TransportShipDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.WeaponTraitDef"                   , { "RimWorld"    , "WeaponTraitDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.WorkGiverDef"                     , { "RimWorld"    , "WorkGiverDef"                     , "Verse.Def"                  , { "verb", "gerund", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.WorkGiverEquivalenceGroupDef"     , { "RimWorld"    , "WorkGiverEquivalenceGroupDef"     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.WorldObjectDef"                   , { "RimWorld"    , "WorldObjectDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.XenotypeDef"                      , { "RimWorld"    , "XenotypeDef"                      , "Verse.Def"                  , { "descriptionShort", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "RimWorld.XenotypeIconDef"                  , { "RimWorld"    , "XenotypeIconDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.AI.DutyDef"                          , { "Verse.AI"    , "DutyDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.AnimationDef"                        , { "Verse"       , "AnimationDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ApparelLayerDef"                     , { "Verse"       , "ApparelLayerDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.BodyDef"                             , { "Verse"       , "BodyDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.BodyPartDef"                         , { "Verse"       , "BodyPartDef"                      , "Verse.Def"                  , { "labelShort", "removeRecipeLabelOverride", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.BodyPartGroupDef"                    , { "Verse"       , "BodyPartGroupDef"                 , "Verse.Def"                  , { "labelShort", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.BodyPartTagDef"                      , { "Verse"       , "BodyPartTagDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.BuildableDef"                        , { "Verse"       , "BuildableDef"                     , "Verse.Def"                  , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ClamorDef"                           , { "Verse"       , "ClamorDef"                        , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerAggressiveDef"            , { "Verse"       , "CreepJoinerAggressiveDef"         , "Verse.CreepJoinerBaseDef"   , { "message", "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerBaseDef"                  , { "Verse"       , "CreepJoinerBaseDef"               , "Verse.Def"                  , { "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerBenefitDef"               , { "Verse"       , "CreepJoinerBenefitDef"            , "Verse.CreepJoinerBaseDef"   , { "letterExtra", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerDownsideDef"              , { "Verse"       , "CreepJoinerDownsideDef"           , "Verse.CreepJoinerBaseDef"   , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerFormKindDef"              , { "Verse"       , "CreepJoinerFormKindDef"           , "Verse.PawnKindDef"          , { "letterLabel", "letterPrompt", "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.CreepJoinerRejectionDef"             , { "Verse"       , "CreepJoinerRejectionDef"          , "Verse.CreepJoinerBaseDef"   , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.DamageArmorCategoryDef"              , { "Verse"       , "DamageArmorCategoryDef"           , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.DamageDef"                           , { "Verse"       , "DamageDef"                        , "Verse.Def"                  , { "adaptedText", "deathMessage", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.Def"                                 , { "Verse"       , "Def"                              , "Verse.Editable"             , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.DesignationCategoryDef"              , { "Verse"       , "DesignationCategoryDef"           , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.DesignationDef"                      , { "Verse"       , "DesignationDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.DesignatorDropdownGroupDef"          , { "Verse"       , "DesignatorDropdownGroupDef"       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.Editable"                            , { "Verse"       , "Editable"                         , ""                           , {}, {}, }, },
	{ "Verse.EffecterDef"                         , { "Verse"       , "EffecterDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.FleckDef"                            , { "Verse"       , "FleckDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.GameConditionDef"                    , { "Verse"       , "GameConditionDef"                 , "Verse.Def"                  , { "startMessage", "endMessage", "letterText", "descriptionFuture", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.GeneCategoryDef"                     , { "Verse"       , "GeneCategoryDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.GeneDef"                             , { "Verse"       , "GeneDef"                          , "Verse.Def"                  , { "labelShortAdj", "resourceLabel", "resourceDescription", "label", "description", "ignoreConfigErrors" }, { "customEffectDescriptions" }, }, },
	{ "Verse.GenStepDef"                          , { "Verse"       , "GenStepDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.HeadTypeDef"                         , { "Verse"       , "HeadTypeDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.HediffDef"                           , { "Verse"       , "HediffDef"                        , "Verse.Def"                  , { "descriptionShort", "overrideTooltip", "extraTooltip", "labelNoun", "battleStateLabel", "labelNounPretty", "targetPrefix", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.IdeoStoryPatternDef"                 , { "Verse"       , "IdeoStoryPatternDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ImplementOwnerTypeDef"               , { "Verse"       , "ImplementOwnerTypeDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.InventoryStockGroupDef"              , { "Verse"       , "InventoryStockGroupDef"           , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.JobDef"                              , { "Verse"       , "JobDef"                           , "Verse.Def"                  , { "reportString", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.KeyBindingCategoryDef"               , { "Verse"       , "KeyBindingCategoryDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.KeyBindingDef"                       , { "Verse"       , "KeyBindingDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.LetterDef"                           , { "Verse"       , "LetterDef"                        , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.LogEntryDef"                         , { "Verse"       , "LogEntryDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ManeuverDef"                         , { "Verse"       , "ManeuverDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MapGeneratorDef"                     , { "Verse"       , "MapGeneratorDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MechWorkModeDef"                     , { "Verse"       , "MechWorkModeDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MentalBreakDef"                      , { "Verse"       , "MentalBreakDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MentalFitDef"                        , { "Verse"       , "MentalFitDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MentalStateDef"                      , { "Verse"       , "MentalStateDef"                   , "Verse.Def"                  , { "beginLetter", "beginLetterLabel", "recoveryMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.MessageTypeDef"                      , { "Verse"       , "MessageTypeDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.OptionCategoryDef"                   , { "Verse"       , "OptionCategoryDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.OrderedTakeGroupDef"                 , { "Verse"       , "OrderedTakeGroupDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.PawnCapacityDef"                     , { "Verse"       , "PawnCapacityDef"                  , "Verse.Def"                  , { "labelMechanoids", "labelAnimals", "labelAnomalyEntity", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.PawnKindDef"                         , { "Verse"       , "PawnKindDef"                      , "Verse.Def"                  , { "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.PawnRenderNodeTagDef"                , { "Verse"       , "PawnRenderNodeTagDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.PawnRenderTreeDef"                   , { "Verse"       , "PawnRenderTreeDef"                , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.PlaceDef"                            , { "Verse"       , "PlaceDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.RecipeDef"                           , { "Verse"       , "RecipeDef"                        , "Verse.Def"                  , { "jobString", "successfullyRemovedHediffMessage", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ResearchProjectDef"                  , { "Verse"       , "ResearchProjectDef"               , "Verse.Def"                  , { "discoveredLetterTitle", "discoveredLetterText", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ResearchProjectTagDef"               , { "Verse"       , "ResearchProjectTagDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ReservationLayerDef"                 , { "Verse"       , "ReservationLayerDef"              , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.RoofDef"                             , { "Verse"       , "RoofDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.RoomRoleDef"                         , { "Verse"       , "RoomRoleDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.RoomStatDef"                         , { "Verse"       , "RoomStatDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.RulePackDef"                         , { "Verse"       , "RulePackDef"                      , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ScatterableDef"                      , { "Verse"       , "ScatterableDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ShaderTypeDef"                       , { "Verse"       , "ShaderTypeDef"                    , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.SongDef"                             , { "Verse"       , "SongDef"                          , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.Sound.ImpactSoundTypeDef"            , { "Verse.Sound" , "ImpactSoundTypeDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.SoundDef"                            , { "Verse"       , "SoundDef"                         , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.SpecialThingFilterDef"               , { "Verse"       , "SpecialThingFilterDef"            , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.StuffAppearanceDef"                  , { "Verse"       , "StuffAppearanceDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.StyleCategoryDef"                    , { "Verse"       , "StyleCategoryDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.SubcameraDef"                        , { "Verse"       , "SubcameraDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.TerrainAffordanceDef"                , { "Verse"       , "TerrainAffordanceDef"             , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.TerrainDef"                          , { "Verse"       , "TerrainDef"                       , "Verse.BuildableDef"         , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ThingCategoryDef"                    , { "Verse"       , "ThingCategoryDef"                 , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ThingDef"                            , { "Verse"       , "ThingDef"                         , "Verse.BuildableDef"         , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ThingStyleDef"                       , { "Verse"       , "ThingStyleDef"                    , "Verse.Def"                  , { "overrideLabel", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ThinkTreeDef"                        , { "Verse"       , "ThinkTreeDef"                     , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.TipSetDef"                           , { "Verse"       , "TipSetDef"                        , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.ToolCapacityDef"                     , { "Verse"       , "ToolCapacityDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.TrainabilityDef"                     , { "Verse"       , "TrainabilityDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.WeatherDef"                          , { "Verse"       , "WeatherDef"                       , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.WorkTypeDef"                         , { "Verse"       , "WorkTypeDef"                      , "Verse.Def"                  , { "labelShort", "pawnLabel", "gerundLabel", "verb", "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "Verse.WorldGenStepDef"                     , { "Verse"       , "WorldGenStepDef"                  , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "WeaponClassDef"                            , { ""            , "WeaponClassDef"                   , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
	{ "WeaponClassPairDef"                        , { ""            , "WeaponClassPairDef"               , "Verse.Def"                  , { "label", "description", "ignoreConfigErrors" }, {}, }, },
};

