inline classinfo_dict_t const gRimWorldClasses
{
	{ "RimWorld.AbilityCategoryDef"                                  , { "RimWorld"   , "AbilityCategoryDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.AbilityDef"                                          , { "RimWorld"   , "AbilityDef"                                          , "Verse.Def"                                              , { "confirmationDialogText", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "requiredMemes" } }, }, },
	{ "RimWorld.AbilityGroupDef"                                     , { "RimWorld"   , "AbilityGroupDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ApparelRequirement"                                  , { "RimWorld"   , "ApparelRequirement"                                  , ""                                                       , { "groupLabel" }, {}, { { "Verse.BodyPartGroupDef", "bodyPartGroupsMatchAny" }, { "Verse.ThingDef", "requiredDefs" } }, }, },
	{ "RimWorld.BabyPlayDef"                                         , { "RimWorld"   , "BabyPlayDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BackstoryDef"                                        , { "RimWorld"   , "BackstoryDef"                                        , "Verse.Def"                                              , { "title", "titleFemale", "titleShort", "titleShortFemale", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BeardDef"                                            , { "RimWorld"   , "BeardDef"                                            , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BillRepeatModeDef"                                   , { "RimWorld"   , "BillRepeatModeDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BillStoreModeDef"                                    , { "RimWorld"   , "BillStoreModeDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BiomeDef"                                            , { "RimWorld"   , "BiomeDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.SoundDef", "soundsAmbient" } }, }, },
	{ "RimWorld.BodyTypeDef"                                         , { "RimWorld"   , "BodyTypeDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BossDef"                                             , { "RimWorld"   , "BossDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.BossgroupDef"                                        , { "RimWorld"   , "BossgroupDef"                                        , "Verse.Def"                                              , { "leaderDescription", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ChemicalDef"                                         , { "RimWorld"   , "ChemicalDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ColorDef"                                            , { "RimWorld"   , "ColorDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ComplexLayoutDef"                                    , { "RimWorld"   , "ComplexLayoutDef"                                    , "RimWorld.LayoutDef"                                     , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.LayoutRoomDef", "roomDefs" } }, }, },
	{ "RimWorld.ComplexThreatDef"                                    , { "RimWorld"   , "ComplexThreatDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.CompProperties_AbilityConvert"                       , { "RimWorld"   , "CompProperties_AbilityConvert"                       , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage", "failMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_AbilityCounsel"                       , { "RimWorld"   , "CompProperties_AbilityCounsel"                       , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage", "successMessageNoNegativeThought", "failMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_AbilityReassure"                      , { "RimWorld"   , "CompProperties_AbilityReassure"                      , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Activity"                             , { "RimWorld"   , "CompProperties_Activity"                             , "Verse.CompProperties"                                   , { "letterTitle", "letterDesc" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Analyzable"                           , { "RimWorld"   , "CompProperties_Analyzable"                           , "RimWorld.CompProperties_Interactable"                   , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, }, },
	{ "RimWorld.CompProperties_ApparelReloadable"                    , { "RimWorld"   , "CompProperties_ApparelReloadable"                    , "RimWorld.CompProperties_ApparelVerbOwnerCharged"        , { "cooldownGerund", "chargeNoun" }, {}, {}, }, },
	{ "RimWorld.CompProperties_ApparelVerbOwnerCharged"              , { "RimWorld"   , "CompProperties_ApparelVerbOwnerCharged"              , "RimWorld.CompProperties_ApparelVerbOwner"               , { "chargeNoun" }, {}, {}, }, },
	{ "RimWorld.CompProperties_AssignableToPawn"                     , { "RimWorld"   , "CompProperties_AssignableToPawn"                     , "Verse.CompProperties"                                   , { "noAssignablePawnsDesc" }, {}, {}, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_AgeReversalCycle"      , { "RimWorld"   , "CompProperties_BiosculpterPod_AgeReversalCycle"      , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "Verse.ResearchProjectDef", "requiredResearch" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_BaseCycle"             , { "RimWorld"   , "CompProperties_BiosculpterPod_BaseCycle"             , "Verse.CompProperties"                                   , { "label", "description" }, {}, { { "Verse.ResearchProjectDef", "requiredResearch" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_HealingCycle"          , { "RimWorld"   , "CompProperties_BiosculpterPod_HealingCycle"          , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "Verse.BodyPartDef", "bodyPartsToRestore" }, { "Verse.HediffDef", "conditionsToPossiblyCure" }, { "Verse.ResearchProjectDef", "requiredResearch" } }, }, },
	{ "RimWorld.CompProperties_BiosculpterPod_PleasureCycle"         , { "RimWorld"   , "CompProperties_BiosculpterPod_PleasureCycle"         , "RimWorld.CompProperties_BiosculpterPod_BaseCycle"       , { "label", "description" }, {}, { { "Verse.ResearchProjectDef", "requiredResearch" } }, }, },
	{ "RimWorld.CompProperties_Chimera"                              , { "RimWorld"   , "CompProperties_Chimera"                              , "Verse.CompProperties"                                   , { "simpleAnimalLabel" }, {}, {}, }, },
	{ "RimWorld.CompProperties_CompAnalyzableBiosignature"           , { "RimWorld"   , "CompProperties_CompAnalyzableBiosignature"           , "RimWorld.CompProperties_Analyzable"                     , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, }, },
	{ "RimWorld.CompProperties_CompAnalyzableUnlockResearch"         , { "RimWorld"   , "CompProperties_CompAnalyzableUnlockResearch"         , "RimWorld.CompProperties_Analyzable"                     , { "progressedLetterLabel", "completedLetterLabel", "completedLetter", "repeatCompletedLetterLabel", "repeatCompletedLetter", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, { "progressedLetters" }, {}, }, },
	{ "RimWorld.CompProperties_DestroyAfterDelay"                    , { "RimWorld"   , "CompProperties_DestroyAfterDelay"                    , "Verse.CompProperties"                                   , { "countdownLabel" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Devourer"                             , { "RimWorld"   , "CompProperties_Devourer"                             , "Verse.CompProperties"                                   , { "messageDigested", "messageEmerged", "messageEmergedCorpse", "messageDigestionCompleted", "digestingInspector" }, {}, {}, }, },
	{ "RimWorld.CompProperties_DisableUnnaturalCorpse"               , { "RimWorld"   , "CompProperties_DisableUnnaturalCorpse"               , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_EquippableAbilityReloadable"          , { "RimWorld"   , "CompProperties_EquippableAbilityReloadable"          , "RimWorld.CompProperties_EquippableAbility"              , { "chargeNoun", "cooldownGerund" }, {}, {}, }, },
	{ "RimWorld.CompProperties_GiveThoughtToAllMapPawnsOnDestroy"    , { "RimWorld"   , "CompProperties_GiveThoughtToAllMapPawnsOnDestroy"    , "Verse.CompProperties"                                   , { "message" }, {}, {}, }, },
	{ "RimWorld.CompProperties_GoldenCube"                           , { "RimWorld"   , "CompProperties_GoldenCube"                           , "RimWorld.CompProperties_Interactable"                   , { "letterDeactivatedLabel", "letterDeactivatedDesc", "letterDeactivatedAppend", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_GrayStatue"                           , { "RimWorld"   , "CompProperties_GrayStatue"                           , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_GrayStatueGas"                        , { "RimWorld"   , "CompProperties_GrayStatueGas"                        , "RimWorld.CompProperties_GrayStatue"                     , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_GrayStatueTeleporter"                 , { "RimWorld"   , "CompProperties_GrayStatueTeleporter"                 , "RimWorld.CompProperties_GrayStatue"                     , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_HasSources"                           , { "RimWorld"   , "CompProperties_HasSources"                           , "Verse.CompProperties"                                   , { "inspectStringLabel" }, {}, {}, }, },
	{ "RimWorld.CompProperties_HoldingPlatformTarget"                , { "RimWorld"   , "CompProperties_HoldingPlatformTarget"                , "Verse.CompProperties"                                   , { "capturedLetterLabel", "capturedLetterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_InspectString"                        , { "RimWorld"   , "CompProperties_InspectString"                        , "Verse.CompProperties"                                   , { "inspectString" }, {}, {}, }, },
	{ "RimWorld.CompProperties_InspectStringStatValue"               , { "RimWorld"   , "CompProperties_InspectStringStatValue"               , "RimWorld.CompProperties_InspectString"                  , { "inspectString" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Interactable"                         , { "RimWorld"   , "CompProperties_Interactable"                         , "Verse.CompProperties"                                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_LabyrinthDoor"                        , { "RimWorld"   , "CompProperties_LabyrinthDoor"                        , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_LeavingsLetter"                       , { "RimWorld"   , "CompProperties_LeavingsLetter"                       , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_MechPowerCell"                        , { "RimWorld"   , "CompProperties_MechPowerCell"                        , "Verse.CompProperties"                                   , { "labelOverride", "tooltipOverride" }, {}, {}, }, },
	{ "RimWorld.CompProperties_NeuralSupercharger"                   , { "RimWorld"   , "CompProperties_NeuralSupercharger"                   , "RimWorld.CompProperties_Rechargeable"                   , { "jobString" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Nociosphere"                          , { "RimWorld"   , "CompProperties_Nociosphere"                          , "RimWorld.CompProperties_Interactable"                   , { "onslaughtInspectText", "becomingUnstableInspectText", "unstableInspectText", "unstableWarning", "leftLetterLabel", "leftLetterText", "onslaughtEndedMessage", "departingMessage", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_ObeliskDeactivationInteractor"        , { "RimWorld"   , "CompProperties_ObeliskDeactivationInteractor"        , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_ObeliskLabyrinth"                     , { "RimWorld"   , "CompProperties_ObeliskLabyrinth"                     , "RimWorld.CompProperties_Interactable"                   , { "messageActivating", "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_ObeliskTriggerInteractor"             , { "RimWorld"   , "CompProperties_ObeliskTriggerInteractor"             , "RimWorld.CompProperties_Interactable"                   , { "jobString", "activatingStringPending", "activatingString", "activateLabelString", "activateDescString", "guiLabelString", "onCooldownString", "inspectString", "messageCompletedString", "messageCooldownEnded" }, {}, {}, }, },
	{ "RimWorld.CompProperties_ProximityLetter"                      , { "RimWorld"   , "CompProperties_ProximityLetter"                      , "Verse.CompProperties"                                   , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Refuelable"                           , { "RimWorld"   , "CompProperties_Refuelable"                           , "Verse.CompProperties"                                   , { "fuelLabel", "fuelGizmoLabel", "outOfFuelMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Schedule"                             , { "RimWorld"   , "CompProperties_Schedule"                             , "Verse.CompProperties"                                   , { "offMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_StatEntry"                            , { "RimWorld"   , "CompProperties_StatEntry"                            , "Verse.CompProperties"                                   , { "statLabel", "reportText" }, {}, {}, }, },
	{ "RimWorld.CompProperties_StopManhunter"                        , { "RimWorld"   , "CompProperties_StopManhunter"                        , "RimWorld.CompProperties_AbilityEffect"                  , { "successMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Studiable"                            , { "RimWorld"   , "CompProperties_Studiable"                            , "Verse.CompProperties"                                   , { "completedLetterTitle", "completedLetterText", "completedMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_StudiableMonolith"                    , { "RimWorld"   , "CompProperties_StudiableMonolith"                    , "RimWorld.CompProperties_Studiable"                      , { "completedLetterTitle", "completedLetterText", "completedMessage" }, {}, {}, }, },
	{ "RimWorld.CompProperties_TempControl"                          , { "RimWorld"   , "CompProperties_TempControl"                          , "Verse.CompProperties"                                   , { "inspectString" }, {}, {}, }, },
	{ "RimWorld.CompProperties_Transmute"                            , { "RimWorld"   , "CompProperties_Transmute"                            , "RimWorld.CompProperties_AbilityEffect"                  , { "failedMessage" }, {}, { { "Verse.ThingDef", "outcomeItems" }, { "Verse.ThingDef", "outcomeStuff" } }, }, },
	{ "RimWorld.CompProperties_Usable"                               , { "RimWorld"   , "CompProperties_Usable"                               , "Verse.CompProperties"                                   , { "useLabel", "useMessage" }, {}, { { "RimWorld.MutantDef", "allowedMutants" } }, }, },
	{ "RimWorld.ConceptDef"                                          , { "RimWorld"   , "ConceptDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.CultureDef"                                          , { "RimWorld"   , "CultureDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.DebugTabMenuDef"                                     , { "RimWorld"   , "DebugTabMenuDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.DeityNameType"                                       , { "RimWorld"   , "DeityNameType"                                       , ""                                                       , { "type" }, {}, {}, }, },
	{ "RimWorld.DifficultyDef"                                       , { "RimWorld"   , "DifficultyDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.DrugPolicyDef"                                       , { "RimWorld"   , "DrugPolicyDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.EntityCategoryDef"                                   , { "RimWorld"   , "EntityCategoryDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.EntityCodexEntryDef"                                 , { "RimWorld"   , "EntityCodexEntryDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "linkedThings" }, { "Verse.ResearchProjectDef", "discoveredResearchProjects" }, { "RimWorld.IncidentDef", "provocationIncidents" } }, }, },
	{ "RimWorld.ExpansionDef"                                        , { "RimWorld"   , "ExpansionDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ExpectationDef"                                      , { "RimWorld"   , "ExpectationDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.FactionDef"                                          , { "RimWorld"   , "FactionDef"                                          , "Verse.Def"                                              , { "fixedName", "pawnSingular", "pawnsPlural", "leaderTitle", "leaderTitleFemale", "royalFavorLabel", "ideoDescription", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ResearchProjectTagDef", "startingResearchTags" }, { "Verse.ResearchProjectTagDef", "startingTechprintsResearchTags" }, { "Verse.PawnKindDef", "fixedLeaderKinds" }, { "RimWorld.TraderKindDef", "caravanTraderKinds" }, { "RimWorld.TraderKindDef", "visitorTraderKinds" }, { "RimWorld.TraderKindDef", "baseTraderKinds" }, { "RimWorld.RaidStrategyDef", "disallowedRaidStrategies" }, { "RimWorld.RaidAgeRestrictionDef", "disallowedRaidAgeRestrictions" }, { "RimWorld.FactionDef", "permanentEnemyToEveryoneExcept" }, { "RimWorld.PawnRelationDef", "royalTitleInheritanceRelations" }, { "RimWorld.CultureDef", "allowedCultures" }, { "RimWorld.MemeDef", "requiredMemes" }, { "RimWorld.MemeDef", "allowedMemes" }, { "RimWorld.MemeDef", "disallowedMemes" }, { "RimWorld.PreceptDef", "disallowedPrecepts" }, { "Verse.StyleCategoryDef", "styles" }, { "RimWorld.MemeDef", "forcedMemes" } }, }, },
	{ "RimWorld.FeatureDef"                                          , { "RimWorld"   , "FeatureDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.BiomeDef", "rootBiomes" }, { "RimWorld.BiomeDef", "acceptableBiomes" } }, }, },
	{ "RimWorld.FleshTypeDef"                                        , { "RimWorld"   , "FleshTypeDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.FurDef"                                              , { "RimWorld"   , "FurDef"                                              , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.GatheringDef"                                        , { "RimWorld"   , "GatheringDef"                                        , "Verse.Def"                                              , { "letterTitle", "letterText", "calledOffMessage", "finishedMessage", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "gatherSpotDefs" }, { "RimWorld.RoyalTitleDef", "requiredTitleAny" } }, }, },
	{ "RimWorld.GauranlenTreeModeDef"                                , { "RimWorld"   , "GauranlenTreeModeDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "requiredMemes" }, { "RimWorld.StatDef", "displayedStats" } }, }, },
	{ "RimWorld.GeneTemplateDef"                                     , { "RimWorld"   , "GeneTemplateDef"                                     , "Verse.Def"                                              , { "labelShortAdj", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.GoodwillSituationDef"                                , { "RimWorld"   , "GoodwillSituationDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.HairDef"                                             , { "RimWorld"   , "HairDef"                                             , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.HediffGiverSetDef"                                   , { "RimWorld"   , "HediffGiverSetDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.HibernatableStateDef"                                , { "RimWorld"   , "HibernatableStateDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.HistoryAutoRecorderDef"                              , { "RimWorld"   , "HistoryAutoRecorderDef"                              , "Verse.Def"                                              , { "graphLabelY", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.HistoryAutoRecorderGroupDef"                         , { "RimWorld"   , "HistoryAutoRecorderGroupDef"                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.HistoryAutoRecorderDef", "historyAutoRecorderDefs" } }, }, },
	{ "RimWorld.HistoryEventDef"                                     , { "RimWorld"   , "HistoryEventDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IdeoColorDef"                                        , { "RimWorld"   , "IdeoColorDef"                                        , "RimWorld.IdeoSymbolPartDef"                             , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "memes" }, { "RimWorld.CultureDef", "cultures" } }, }, },
	{ "RimWorld.IdeoFoundationDef"                                   , { "RimWorld"   , "IdeoFoundationDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IdeoIconDef"                                         , { "RimWorld"   , "IdeoIconDef"                                         , "RimWorld.IdeoSymbolPartDef"                             , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "memes" }, { "RimWorld.CultureDef", "cultures" } }, }, },
	{ "RimWorld.IdeoPresetCategoryDef"                               , { "RimWorld"   , "IdeoPresetCategoryDef"                               , "Verse.Def"                                              , { "groupLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IdeoPresetDef"                                       , { "RimWorld"   , "IdeoPresetDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "memes" } }, }, },
	{ "RimWorld.IdeoSymbolPack"                                      , { "RimWorld"   , "IdeoSymbolPack"                                      , ""                                                       , { "ideoName", "theme", "adjective", "member" }, {}, {}, }, },
	{ "RimWorld.IdeoSymbolPartDef"                                   , { "RimWorld"   , "IdeoSymbolPartDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "memes" }, { "RimWorld.CultureDef", "cultures" } }, }, },
	{ "RimWorld.IncidentCategoryDef"                                 , { "RimWorld"   , "IncidentCategoryDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IncidentDef"                                         , { "RimWorld"   , "IncidentDef"                                         , "Verse.Def"                                              , { "letterText", "letterLabel", "diseaseLethalLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.IncidentTargetTagDef", "targetTags" }, { "RimWorld.BiomeDef", "allowedBiomes" }, { "RimWorld.BiomeDef", "disallowedBiomes" }, { "Verse.HediffDef", "letterHyperlinkHediffDefs" }, { "Verse.BodyPartDef", "diseasePartsToAffect" } }, }, },
	{ "RimWorld.IncidentTargetTagDef"                                , { "RimWorld"   , "IncidentTargetTagDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.InfectionPathwayDef"                                 , { "RimWorld"   , "InfectionPathwayDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IngestibleProperties"                                , { "RimWorld"   , "IngestibleProperties"                                , ""                                                       , { "ingestCommandString", "ingestReportString", "ingestReportStringEat" }, {}, {}, }, },
	{ "RimWorld.InspirationDef"                                      , { "RimWorld"   , "InspirationDef"                                      , "Verse.Def"                                              , { "beginLetter", "beginLetterLabel", "endMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.StatDef", "requiredNonDisabledStats" }, { "Verse.WorkTypeDef", "requiredNonDisabledWorkTypes" }, { "Verse.WorkTypeDef", "requiredAnyNonDisabledWorkType" }, { "Verse.PawnCapacityDef", "requiredCapacities" }, { "RimWorld.SkillDef", "associatedSkills" } }, }, },
	{ "RimWorld.InstructionDef"                                      , { "RimWorld"   , "InstructionDef"                                      , "Verse.Def"                                              , { "text", "textController", "rejectInputMessage", "onMapInstruction", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.InteractionDef"                                      , { "RimWorld"   , "InteractionDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.IssueDef"                                            , { "RimWorld"   , "IssueDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.JoyGiverDef"                                         , { "RimWorld"   , "JoyGiverDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "thingDefs" }, { "Verse.PawnCapacityDef", "requiredCapacities" } }, }, },
	{ "RimWorld.JoyKindDef"                                          , { "RimWorld"   , "JoyKindDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.RoyalTitleDef", "titleRequiredAny" } }, }, },
	{ "RimWorld.KnowledgeCategoryDef"                                , { "RimWorld"   , "KnowledgeCategoryDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.LayoutDef"                                           , { "RimWorld"   , "LayoutDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.LayoutRoomDef", "roomDefs" } }, }, },
	{ "RimWorld.LayoutRoomDef"                                       , { "RimWorld"   , "LayoutRoomDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.TerrainDef", "floorTypes" } }, }, },
	{ "RimWorld.LearningDesireDef"                                   , { "RimWorld"   , "LearningDesireDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.LifeStageDef"                                        , { "RimWorld"   , "LifeStageDef"                                        , "Verse.Def"                                              , { "customMoodTipString", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MainButtonDef"                                       , { "RimWorld"   , "MainButtonDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MapMeshFlagDef"                                      , { "RimWorld"   , "MapMeshFlagDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MeditationFocusDef"                                  , { "RimWorld"   , "MeditationFocusDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MemeDef"                                             , { "RimWorld"   , "MemeDef"                                             , "Verse.Def"                                              , { "worshipRoomLabel", "label", "description", "ignoreConfigErrors" }, { "symbolPacks" }, { { "Verse.ThingDef", "requireAnyRitualSeat" }, { "RimWorld.FactionDef", "factionWhitelist" }, { "RimWorld.DeityNameType", "fixedDeityNameTypes" }, { "RimWorld.RitualPatternDef", "replacementPatterns" }, { "Verse.ThingDef", "consumableBuildings" }, { "Verse.ResearchProjectDef", "startingResearchProjects" }, { "Verse.BuildableDef", "addDesignators" }, { "Verse.DesignatorDropdownGroupDef", "addDesignatorGroups" } }, }, },
	{ "RimWorld.MemeGroupDef"                                        , { "RimWorld"   , "MemeGroupDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MonolithLevelDef"                                    , { "RimWorld"   , "MonolithLevelDef"                                    , "Verse.Def"                                              , { "monolithLabel", "monolithDescription", "levelInspectText", "extraQuestDescription", "activateGizmoText", "activateFloatMenuText", "activateGizmoDescription", "pawnSentToActivateMessage", "monolithCanBeActivatedText", "activateQuestText", "activatableLetterLabel", "activatableLetterText", "activatedLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.IncidentDef", "incidentsOnReached" }, { "Verse.GameConditionDef", "unreachableDuringConditions" } }, }, },
	{ "RimWorld.MusicSequenceDef"                                    , { "RimWorld"   , "MusicSequenceDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.SongDef", "songs" } }, }, },
	{ "RimWorld.MusicTransitionDef"                                  , { "RimWorld"   , "MusicTransitionDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.MutantCount"                                         , { "RimWorld"   , "MutantCount"                                         , "RimWorld.StartingPawnCount"                             , { "description" }, {}, {}, }, },
	{ "RimWorld.MutantDef"                                           , { "RimWorld"   , "MutantDef"                                           , "Verse.Def"                                              , { "namePrefix", "deathLetter", "deathLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.WorkTypeDef", "enabledWorkTypes" }, { "Verse.GeneDef", "disablesGenes" }, { "RimWorld.NeedDef", "enabledNeeds" }, { "Verse.HeadTypeDef", "forcedHeadTypes" }, { "Verse.ThingDef", "drugWhitelist" }, { "Verse.HediffDef", "removesHediffs" }, { "Verse.VerbProperties", "verbs" }, { "Verse.Tool", "tools" }, { "RimWorld.AbilityDef", "abilities" }, { "RimWorld.AbilityDef", "abilityWhitelist" } }, }, },
	{ "RimWorld.NeedDef"                                             , { "RimWorld"   , "NeedDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.RoyalTitleDef", "titleRequiredAny" }, { "Verse.HediffDef", "hediffRequiredAny" }, { "RimWorld.PreceptDef", "nullifyingPrecepts" } }, }, },
	{ "RimWorld.PawnColumnDef"                                       , { "RimWorld"   , "PawnColumnDef"                                       , "Verse.Def"                                              , { "headerTip", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PawnExpectationsQualityOffset"                       , { "RimWorld"   , "PawnExpectationsQualityOffset"                       , ""                                                       , { "labelOverride" }, {}, {}, }, },
	{ "RimWorld.PawnGroupKindDef"                                    , { "RimWorld"   , "PawnGroupKindDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PawnRelationDef"                                     , { "RimWorld"   , "PawnRelationDef"                                     , "Verse.Def"                                              , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.ThoughtDef", "soldThoughts" } }, }, },
	{ "RimWorld.PawnsArrivalModeDef"                                 , { "RimWorld"   , "PawnsArrivalModeDef"                                 , "Verse.Def"                                              , { "textEnemy", "textFriendly", "textWillArrive", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PawnTableDef"                                        , { "RimWorld"   , "PawnTableDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.PawnColumnDef", "columns" } }, }, },
	{ "RimWorld.PitGateIncidentDef"                                  , { "RimWorld"   , "PitGateIncidentDef"                                  , "Verse.Def"                                              , { "disableEnteringReason", "letterText", "letterLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PreceptComp"                                         , { "RimWorld"   , "PreceptComp"                                         , ""                                                       , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_Apparel"                                 , { "RimWorld"   , "PreceptComp_Apparel"                                 , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_Apparel_Desired"                         , { "RimWorld"   , "PreceptComp_Apparel_Desired"                         , "RimWorld.PreceptComp_Apparel"                           , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_Apparel_DesiredStrong"                   , { "RimWorld"   , "PreceptComp_Apparel_DesiredStrong"                   , "RimWorld.PreceptComp_Apparel"                           , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_BedThought"                              , { "RimWorld"   , "PreceptComp_BedThought"                              , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, }, },
	{ "RimWorld.PreceptComp_DevelopmentPoints"                       , { "RimWorld"   , "PreceptComp_DevelopmentPoints"                       , "RimWorld.PreceptComp"                                   , { "eventLabel", "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_GoodwillSituation"                       , { "RimWorld"   , "PreceptComp_GoodwillSituation"                       , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_KnowsMemoryThought"                      , { "RimWorld"   , "PreceptComp_KnowsMemoryThought"                      , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, }, },
	{ "RimWorld.PreceptComp_MentalBreak"                             , { "RimWorld"   , "PreceptComp_MentalBreak"                             , "RimWorld.PreceptComp"                                   , { "description" }, {}, {}, }, },
	{ "RimWorld.PreceptComp_SelfTookMemoryThought"                   , { "RimWorld"   , "PreceptComp_SelfTookMemoryThought"                   , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, }, },
	{ "RimWorld.PreceptComp_SituationalThought"                      , { "RimWorld"   , "PreceptComp_SituationalThought"                      , "RimWorld.PreceptComp_Thought"                           , { "description" }, { "thoughtStageDescriptions" }, {}, }, },
	{ "RimWorld.PreceptComp_Thought"                                 , { "RimWorld"   , "PreceptComp_Thought"                                 , "RimWorld.PreceptComp"                                   , { "description" }, { "thoughtStageDescriptions" }, {}, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo"                           , { "RimWorld"   , "PreceptComp_UnwillingToDo"                           , "RimWorld.PreceptComp"                                   , { "description" }, {}, { { "Verse.HediffDef", "nullifyingHediffs" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_Chance"                    , { "RimWorld"   , "PreceptComp_UnwillingToDo_Chance"                    , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "Verse.HediffDef", "nullifyingHediffs" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_Gendered"                  , { "RimWorld"   , "PreceptComp_UnwillingToDo_Gendered"                  , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "Verse.HediffDef", "nullifyingHediffs" } }, }, },
	{ "RimWorld.PreceptComp_UnwillingToDo_WithDef"                   , { "RimWorld"   , "PreceptComp_UnwillingToDo_WithDef"                   , "RimWorld.PreceptComp_UnwillingToDo"                     , { "description" }, {}, { { "Verse.HediffDef", "nullifyingHediffs" } }, }, },
	{ "RimWorld.PreceptDef"                                          , { "RimWorld"   , "PreceptDef"                                          , "Verse.Def"                                              , { "tipLabelOverride", "extraTextPawnDeathLetter", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.PreceptComp", "comps" }, { "Verse.WorkTypeDef", "opposedWorkTypes" }, { "RimWorld.MemeDef", "associatedMemes" }, { "RimWorld.MemeDef", "conflictingMemes" }, { "RimWorld.MemeDef", "requiredMemes" }, { "RimWorld.ExpectationDef", "buildingMinExpectations" }, { "RimWorld.AbilityDef", "grantedAbilities" }, { "RimWorld.RoleEffect", "roleEffects" } }, }, },
	{ "RimWorld.PrisonerInteractionModeDef"                          , { "RimWorld"   , "PrisonerInteractionModeDef"                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef"                                    , { "RimWorld"   , "PsychicRitualDef"                                    , "Verse.Def"                                              , { "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_BloodRain"                          , { "RimWorld"   , "PsychicRitualDef_BloodRain"                          , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_Brainwipe"                          , { "RimWorld"   , "PsychicRitualDef_Brainwipe"                          , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_Chronophagy"                        , { "RimWorld"   , "PsychicRitualDef_Chronophagy"                        , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_ImbueDeathRefusal"                  , { "RimWorld"   , "PsychicRitualDef_ImbueDeathRefusal"                  , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_InvocationCircle"                   , { "RimWorld"   , "PsychicRitualDef_InvocationCircle"                   , "RimWorld.PsychicRitualDef"                              , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_NeurosisPulse"                      , { "RimWorld"   , "PsychicRitualDef_NeurosisPulse"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_Philophagy"                         , { "RimWorld"   , "PsychicRitualDef_Philophagy"                         , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_PleasurePulse"                      , { "RimWorld"   , "PsychicRitualDef_PleasurePulse"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_Psychophagy"                        , { "RimWorld"   , "PsychicRitualDef_Psychophagy"                        , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SkipAbduction"                      , { "RimWorld"   , "PsychicRitualDef_SkipAbduction"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SkipAbductionPlayer"                , { "RimWorld"   , "PsychicRitualDef_SkipAbductionPlayer"                , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SummonAnimals"                      , { "RimWorld"   , "PsychicRitualDef_SummonAnimals"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SummonFleshbeasts"                  , { "RimWorld"   , "PsychicRitualDef_SummonFleshbeasts"                  , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SummonFleshbeastsPlayer"            , { "RimWorld"   , "PsychicRitualDef_SummonFleshbeastsPlayer"            , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SummonPitGate"                      , { "RimWorld"   , "PsychicRitualDef_SummonPitGate"                      , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_SummonShamblers"                    , { "RimWorld"   , "PsychicRitualDef_SummonShamblers"                    , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualDef_VoidProvocation"                    , { "RimWorld"   , "PsychicRitualDef_VoidProvocation"                    , "RimWorld.PsychicRitualDef_InvocationCircle"             , { "outcomeDescription", "letterAICompleteLabel", "letterAICompleteText", "letterAIArrivedText", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualRoleDef"                                , { "RimWorld"   , "PsychicRitualRoleDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.PsychicRitualRoleDef_DeathRefusalTarget"             , { "RimWorld"   , "PsychicRitualRoleDef_DeathRefusalTarget"             , "RimWorld.PsychicRitualRoleDef"                          , { "psychicRitualLeaveReason_MaxDeathRefusal", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.QuestScriptDef"                                      , { "RimWorld"   , "QuestScriptDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RaidAgeRestrictionDef"                               , { "RimWorld"   , "RaidAgeRestrictionDef"                               , "Verse.Def"                                              , { "arrivalTextExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RaidStrategyDef"                                     , { "RimWorld"   , "RaidStrategyDef"                                     , "Verse.Def"                                              , { "arrivalTextFriendly", "arrivalTextEnemy", "letterLabelEnemy", "letterLabelFriendly", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.PawnsArrivalModeDef", "arriveModes" } }, }, },
	{ "RimWorld.RecordDef"                                           , { "RimWorld"   , "RecordDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.JobDef", "measuredTimeJobs" } }, }, },
	{ "RimWorld.RenderSkipFlagDef"                                   , { "RimWorld"   , "RenderSkipFlagDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ResearchTabDef"                                      , { "RimWorld"   , "ResearchTabDef"                                      , "Verse.Def"                                              , { "generalTitle", "generalDescription", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RitualAttachableOutcomeEffectDef"                    , { "RimWorld"   , "RitualAttachableOutcomeEffectDef"                    , "Verse.Def"                                              , { "letterInfoText", "effectDesc", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.MemeDef", "requiredMemeAny" }, { "RimWorld.RitualPatternDef", "allowedRituals" }, { "RimWorld.RitualPatternDef", "disallowedRituals" } }, }, },
	{ "RimWorld.RitualBehaviorDef"                                   , { "RimWorld"   , "RitualBehaviorDef"                                   , "Verse.Def"                                              , { "letterTitle", "letterText", "spectatorsLabel", "spectatorGerund", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.RitualRole", "roles" }, { "Verse.SoundDef", "soundDefsPerEnhancerCount" } }, }, },
	{ "RimWorld.RitualObligationTargetFilterDef"                     , { "RimWorld"   , "RitualObligationTargetFilterDef"                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "thingDefs" } }, }, },
	{ "RimWorld.RitualOutcomeComp_AtLeastOneSpectator"               , { "RimWorld"   , "RitualOutcomeComp_AtLeastOneSpectator"               , "RimWorld.RitualOutcomeComp_ParticipantCount"            , { "labelNotMet" }, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_LovedOnePresent"                   , { "RimWorld"   , "RitualOutcomeComp_LovedOnePresent"                   , "RimWorld.RitualOutcomeComp_Quality"                     , { "labelNotMet" }, {}, {}, }, },
	{ "RimWorld.RitualOutcomeComp_RitualTargetDefs"                  , { "RimWorld"   , "RitualOutcomeComp_RitualTargetDefs"                  , "RimWorld.RitualOutcomeComp_QualitySingleOffset"         , { "expectedThingLabelTip" }, {}, { { "Verse.ThingDef", "defs" } }, }, },
	{ "RimWorld.RitualOutcomeEffectDef"                              , { "RimWorld"   , "RitualOutcomeEffectDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, { "extraPredictedOutcomeDescriptions", "extraInfoLines" }, { { "RimWorld.RitualOutcomePossibility", "outcomeChances" }, { "RimWorld.RitualOutcomeEffectDef+ExtraOutcomeChanceDescription", "extraOutcomeDescriptions" } }, }, },
	{ "RimWorld.RitualOutcomeEffectDef+ExtraOutcomeChanceDescription", { "RimWorld"   , "ExtraOutcomeChanceDescription"                       , ""                                                       , { "description" }, {}, {}, }, },
	{ "RimWorld.RitualOutcomePossibility"                            , { "RimWorld"   , "RitualOutcomePossibility"                            , ""                                                       , { "label", "description", "potentialExtraOutcomeDesc" }, {}, {}, }, },
	{ "RimWorld.RitualPatternDef"                                    , { "RimWorld"   , "RitualPatternDef"                                    , "Verse.Def"                                              , { "ritualExpectedDesc", "ritualExpectedDescNoAdjective", "shortDescOverride", "descOverride", "ritualExplanation", "beginRitualOverride", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RitualRole"                                          , { "RimWorld"   , "RitualRole"                                          , ""                                                       , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRole_Mother"                                   , { "RimWorld"   , "RitualRole_Mother"                                   , "RimWorld.RitualRoleForced"                              , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleAnimal"                                    , { "RimWorld"   , "RitualRoleAnimal"                                    , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleAnimaLinker"                               , { "RimWorld"   , "RitualRoleAnimaLinker"                               , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleBehavior"                                  , { "RimWorld"   , "RitualRoleBehavior"                                  , ""                                                       , { "jobReportOverride" }, {}, {}, }, },
	{ "RimWorld.RitualRoleBlindingTarget"                            , { "RimWorld"   , "RitualRoleBlindingTarget"                            , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleColonist"                                  , { "RimWorld"   , "RitualRoleColonist"                                  , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleColonistConnectable"                       , { "RimWorld"   , "RitualRoleColonistConnectable"                       , "RimWorld.RitualRoleColonist"                            , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleConvertee"                                 , { "RimWorld"   , "RitualRoleConvertee"                                 , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleForced"                                    , { "RimWorld"   , "RitualRoleForced"                                    , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleIdeoRoleChanger"                           , { "RimWorld"   , "RitualRoleIdeoRoleChanger"                           , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleOrganizer"                                 , { "RimWorld"   , "RitualRoleOrganizer"                                 , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRolePrisoner"                                  , { "RimWorld"   , "RitualRolePrisoner"                                  , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRolePrisonerOrSlave"                           , { "RimWorld"   , "RitualRolePrisonerOrSlave"                           , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleScarificationTarget"                       , { "RimWorld"   , "RitualRoleScarificationTarget"                       , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleTag"                                       , { "RimWorld"   , "RitualRoleTag"                                       , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualRoleWarden"                                    , { "RimWorld"   , "RitualRoleWarden"                                    , "RimWorld.RitualRole"                                    , { "missingDesc", "noCandidatesGizmoDesc", "customChildDisallowMessage" }, {}, {}, }, },
	{ "RimWorld.RitualSpectatorFilter"                               , { "RimWorld"   , "RitualSpectatorFilter"                               , ""                                                       , { "description" }, {}, {}, }, },
	{ "RimWorld.RitualSpectatorFilter_NatureFocus"                   , { "RimWorld"   , "RitualSpectatorFilter_NatureFocus"                   , "RimWorld.RitualSpectatorFilter"                         , { "description" }, {}, {}, }, },
	{ "RimWorld.RitualSpectatorFilter_WillWitnessExecution"          , { "RimWorld"   , "RitualSpectatorFilter_WillWitnessExecution"          , "RimWorld.RitualSpectatorFilter"                         , { "description" }, {}, {}, }, },
	{ "RimWorld.RitualStageAction_Message"                           , { "RimWorld"   , "RitualStageAction_Message"                           , "RimWorld.RitualStageAction"                             , { "text" }, {}, {}, }, },
	{ "RimWorld.RitualTargetFilterDef"                               , { "RimWorld"   , "RitualTargetFilterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RitualVisualEffectDef"                               , { "RimWorld"   , "RitualVisualEffectDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RiverDef"                                            , { "RimWorld"   , "RiverDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RoadDef"                                             , { "RimWorld"   , "RoadDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RoadPathingDef"                                      , { "RimWorld"   , "RoadPathingDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RoadWorldLayerDef"                                   , { "RimWorld"   , "RoadWorldLayerDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RoleEffect"                                          , { "RimWorld"   , "RoleEffect"                                          , ""                                                       , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_GiveThoughtOnTend"                        , { "RimWorld"   , "RoleEffect_GiveThoughtOnTend"                        , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_HuntingRevengeChanceFactor"               , { "RimWorld"   , "RoleEffect_HuntingRevengeChanceFactor"               , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_NoMeleeWeapons"                           , { "RimWorld"   , "RoleEffect_NoMeleeWeapons"                           , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_NoRangedWeapons"                          , { "RimWorld"   , "RoleEffect_NoRangedWeapons"                          , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_PawnStatFactor"                           , { "RimWorld"   , "RoleEffect_PawnStatFactor"                           , "RimWorld.RoleEffect_PawnStatModifier"                   , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_PawnStatModifier"                         , { "RimWorld"   , "RoleEffect_PawnStatModifier"                         , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_PawnStatOffset"                           , { "RimWorld"   , "RoleEffect_PawnStatOffset"                           , "RimWorld.RoleEffect_PawnStatModifier"                   , { "label" }, {}, {}, }, },
	{ "RimWorld.RoleEffect_ProductionQualityOffset"                  , { "RimWorld"   , "RoleEffect_ProductionQualityOffset"                  , "RimWorld.RoleEffect"                                    , { "label" }, {}, {}, }, },
	{ "RimWorld.RoyalTitleDef"                                       , { "RimWorld"   , "RoyalTitleDef"                                       , "Verse.Def"                                              , { "labelFemale", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.ApparelRequirement", "requiredApparel" }, { "RimWorld.RoyalTitlePermitDef", "permits" }, { "RimWorld.JoyKindDef", "disabledJoyKinds" }, { "RimWorld.AbilityDef", "grantedAbilities" } }, }, },
	{ "RimWorld.RoyalTitlePermitDef"                                 , { "RimWorld"   , "RoyalTitlePermitDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.RuleDef"                                             , { "RimWorld"   , "RuleDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.Scenario"                                            , { "RimWorld"   , "Scenario"                                            , ""                                                       , { "name", "summary", "description" }, {}, {}, }, },
	{ "RimWorld.ScenarioDef"                                         , { "RimWorld"   , "ScenarioDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawns_Mutants"  , { "RimWorld"   , "ScenPart_ConfigPage_ConfigureStartingPawns_Mutants"  , "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawnsBase", { "customSummary" }, {}, { { "RimWorld.MutantCount", "mutantCounts" } }, }, },
	{ "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawns_Xenotypes", { "RimWorld"   , "ScenPart_ConfigPage_ConfigureStartingPawns_Xenotypes", "RimWorld.ScenPart_ConfigPage_ConfigureStartingPawnsBase", { "customSummary" }, {}, { { "RimWorld.XenotypeCount", "xenotypeCounts" } }, }, },
	{ "RimWorld.ScenPartDef"                                         , { "RimWorld"   , "ScenPartDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ShipJobDef"                                          , { "RimWorld"   , "ShipJobDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.SitePartDef"                                         , { "RimWorld"   , "SitePartDef"                                         , "Verse.Def"                                              , { "approachOrderString", "approachingReportString", "arrivedLetter", "arrivedLetterLabelPart", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffDef", "arrivedLetterHediffHyperlinks" } }, }, },
	{ "RimWorld.SketchResolverDef"                                   , { "RimWorld"   , "SketchResolverDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.SkillDef"                                            , { "RimWorld"   , "SkillDef"                                            , "Verse.Def"                                              , { "skillLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.SlaveInteractionModeDef"                             , { "RimWorld"   , "SlaveInteractionModeDef"                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger"                                    , { "RimWorld"   , "StageFailTrigger"                                    , ""                                                       , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_NoPoweredLoudspeakers"              , { "RimWorld"   , "StageFailTrigger_NoPoweredLoudspeakers"              , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_NoThingPresent"                     , { "RimWorld"   , "StageFailTrigger_NoThingPresent"                     , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_PawnAlive"                          , { "RimWorld"   , "StageFailTrigger_PawnAlive"                          , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_PawnAsleep"                         , { "RimWorld"   , "StageFailTrigger_PawnAsleep"                         , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetNotLit"                       , { "RimWorld"   , "StageFailTrigger_TargetNotLit"                       , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetPawnUnreachable"              , { "RimWorld"   , "StageFailTrigger_TargetPawnUnreachable"              , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetThingMissing"                 , { "RimWorld"   , "StageFailTrigger_TargetThingMissing"                 , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StageFailTrigger_TargetUnpowered"                    , { "RimWorld"   , "StageFailTrigger_TargetUnpowered"                    , "RimWorld.StageFailTrigger"                              , { "desc" }, {}, {}, }, },
	{ "RimWorld.StatCategoryDef"                                     , { "RimWorld"   , "StatCategoryDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.StatDef"                                             , { "RimWorld"   , "StatDef"                                             , "Verse.Def"                                              , { "formatString", "formatStringUnfinalized", "statFactorsExplanationHeader", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffDef", "showIfHediffsPresent" }, { "Verse.PawnKindDef", "showOnPawnKind" }, { "RimWorld.StatDef", "statFactors" }, { "RimWorld.StatDef", "postProcessStatFactors" } }, }, },
	{ "RimWorld.StorytellerDef"                                      , { "RimWorld"   , "StorytellerDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.StudyNote"                                           , { "RimWorld"   , "StudyNote"                                           , ""                                                       , { "label", "text" }, {}, {}, }, },
	{ "RimWorld.StuffCategoryDef"                                    , { "RimWorld"   , "StuffCategoryDef"                                    , "Verse.Def"                                              , { "noun", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.StyleItemCategoryDef"                                , { "RimWorld"   , "StyleItemCategoryDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.StyleItemDef"                                        , { "RimWorld"   , "StyleItemDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome"                                      , { "RimWorld"   , "SurgeryOutcome"                                      , ""                                                       , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_Death"                                , { "RimWorld"   , "SurgeryOutcome_Death"                                , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_Failure"                              , { "RimWorld"   , "SurgeryOutcome_Failure"                              , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.SurgeryOutcome_FailureWithHediff"                    , { "RimWorld"   , "SurgeryOutcome_FailureWithHediff"                    , "RimWorld.SurgeryOutcome_Failure"                        , { "letterLabel", "letterText" }, {}, { { "Verse.RecipeDef", "applyToRecipes" } }, }, },
	{ "RimWorld.SurgeryOutcome_HediffWithDuration"                   , { "RimWorld"   , "SurgeryOutcome_HediffWithDuration"                   , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.SurgeryOutcomeEffectDef"                             , { "RimWorld"   , "SurgeryOutcomeEffectDef"                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.SurgeryOutcome", "outcomes" } }, }, },
	{ "RimWorld.SurgeryOutcomeSuccess"                               , { "RimWorld"   , "SurgeryOutcomeSuccess"                               , "RimWorld.SurgeryOutcome"                                , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "RimWorld.TaleDef"                                             , { "RimWorld"   , "TaleDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.TattooDef"                                           , { "RimWorld"   , "TattooDef"                                           , "RimWorld.StyleItemDef"                                  , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.TerrainTemplateDef"                                  , { "RimWorld"   , "TerrainTemplateDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "RimWorld.ThingSetMakerDef"                                    , { "RimWorld"   , "ThingSetMakerDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.ThoughtDef"                                          , { "RimWorld"   , "ThoughtDef"                                          , "Verse.Def"                                              , { "labelInBracketsExtraForHediff", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.ThoughtStage", "stages" }, { "RimWorld.TraitDef", "nullifyingTraits" }, { "RimWorld.TraitDef", "neverNullifyIfAnyTrait" }, { "RimWorld.TaleDef", "nullifyingOwnTales" }, { "RimWorld.PreceptDef", "nullifyingPrecepts" }, { "Verse.HediffDef", "nullifyingHediffs" }, { "Verse.GeneDef", "nullifyingGenes" }, { "RimWorld.TraitDef", "requiredTraits" }, { "Verse.GeneDef", "requiredGenes" }, { "Verse.HediffDef", "requiredHediffs" }, { "RimWorld.ThoughtDef", "replaceThoughts" } }, }, },
	{ "RimWorld.ThoughtStage"                                        , { "RimWorld"   , "ThoughtStage"                                        , ""                                                       , { "label", "labelSocial", "labelAbstract", "description" }, {}, {}, }, },
	{ "RimWorld.TimeAssignmentDef"                                   , { "RimWorld"   , "TimeAssignmentDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.TraderKindDef"                                       , { "RimWorld"   , "TraderKindDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.TrainableDef"                                        , { "RimWorld"   , "TrainableDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.TrainableDef", "prerequisites" } }, }, },
	{ "RimWorld.TraitDef"                                            , { "RimWorld"   , "TraitDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.TraitDegreeData", "degreeDatas" }, { "RimWorld.TraitDef", "conflictingTraits" }, { "RimWorld.SkillDef", "conflictingPassions" }, { "RimWorld.SkillDef", "forcedPassions" }, { "Verse.WorkTypeDef", "requiredWorkTypes" }, { "Verse.WorkTypeDef", "disabledWorkTypes" } }, }, },
	{ "RimWorld.TraitDegreeData"                                     , { "RimWorld"   , "TraitDegreeData"                                     , ""                                                       , { "label", "labelMale", "labelFemale", "description" }, {}, { { "Verse.MentalStateDef", "disallowedMentalStates" }, { "RimWorld.ThoughtDef", "disallowedThoughts" }, { "RimWorld.InspirationDef", "disallowedInspirations" }, { "RimWorld.InspirationDef", "mentalBreakInspirationGainSet" }, { "RimWorld.MeditationFocusDef", "allowedMeditationFocusTypes" }, { "RimWorld.MeditationFocusDef", "disallowedMeditationFocusTypes" }, { "Verse.MentalBreakDef", "theOnlyAllowedMentalBreaks" }, { "RimWorld.AbilityDef", "abilities" }, { "RimWorld.NeedDef", "needs" }, { "RimWorld.NeedDef", "disablesNeeds" } }, }, },
	{ "RimWorld.TransferableSorterDef"                               , { "RimWorld"   , "TransferableSorterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.TransportShipDef"                                    , { "RimWorld"   , "TransportShipDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.WeaponTraitDef"                                      , { "RimWorld"   , "WeaponTraitDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffDef", "equippedHediffs" }, { "Verse.HediffDef", "bondedHediffs" } }, }, },
	{ "RimWorld.WorkGiverDef"                                        , { "RimWorld"   , "WorkGiverDef"                                        , "Verse.Def"                                              , { "verb", "gerund", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.PawnCapacityDef", "requiredCapacities" }, { "Verse.ThingDef", "fixedBillGiverDefs" } }, }, },
	{ "RimWorld.WorkGiverEquivalenceGroupDef"                        , { "RimWorld"   , "WorkGiverEquivalenceGroupDef"                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "RimWorld.WorldObjectDef"                                      , { "RimWorld"   , "WorldObjectDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.IncidentTargetTagDef", "IncidentTargetTags" } }, }, },
	{ "RimWorld.XenotypeCount"                                       , { "RimWorld"   , "XenotypeCount"                                       , "RimWorld.StartingPawnCount"                             , { "description" }, {}, {}, }, },
	{ "RimWorld.XenotypeDef"                                         , { "RimWorld"   , "XenotypeDef"                                         , "Verse.Def"                                              , { "descriptionShort", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.GeneDef", "genes" }, { "WeaponClassDef", "forbiddenWeaponClasses" } }, }, },
	{ "RimWorld.XenotypeIconDef"                                     , { "RimWorld"   , "XenotypeIconDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.AI.DutyDef"                                             , { "Verse.AI"   , "DutyDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.AI.Job"                                                 , { "Verse.AI"   , "Job"                                                 , ""                                                       , { "reportStringOverride", "crawlingReportStringOverride" }, {}, {}, }, },
	{ "Verse.AnimationDef"                                           , { "Verse"      , "AnimationDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ApparelLayerDef"                                        , { "Verse"      , "ApparelLayerDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.BodyDef"                                                , { "Verse"      , "BodyDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.BodyPartDef"                                            , { "Verse"      , "BodyPartDef"                                         , "Verse.Def"                                              , { "labelShort", "removeRecipeLabelOverride", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.BodyPartTagDef", "tags" } }, }, },
	{ "Verse.BodyPartGroupDef"                                       , { "Verse"      , "BodyPartGroupDef"                                    , "Verse.Def"                                              , { "labelShort", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.BodyPartRecord"                                         , { "Verse"      , "BodyPartRecord"                                      , ""                                                       , { "customLabel" }, {}, { { "Verse.BodyPartRecord", "parts" }, { "Verse.BodyPartGroupDef", "groups" } }, }, },
	{ "Verse.BodyPartTagDef"                                         , { "Verse"      , "BodyPartTagDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.BuildableDef"                                           , { "Verse"      , "BuildableDef"                                        , "Verse.Def"                                              , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.StuffCategoryDef", "stuffCategories" }, { "Verse.ThingDef", "buildingPrerequisites" }, { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.ClamorDef"                                              , { "Verse"      , "ClamorDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.CreepJoinerAggressiveDef"                               , { "Verse"      , "CreepJoinerAggressiveDef"                            , "Verse.CreepJoinerBaseDef"                               , { "message", "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.CreepJoinerBaseDef"                                     , { "Verse"      , "CreepJoinerBaseDef"                                  , "Verse.Def"                                              , { "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.CreepJoinerBenefitDef"                                  , { "Verse"      , "CreepJoinerBenefitDef"                               , "Verse.CreepJoinerBaseDef"                               , { "letterExtra", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffDef", "hediffs" }, { "RimWorld.AbilityDef", "abilities" } }, }, },
	{ "Verse.CreepJoinerDownsideDef"                                 , { "Verse"      , "CreepJoinerDownsideDef"                              , "Verse.CreepJoinerBaseDef"                               , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffDef", "hediffs" }, { "RimWorld.AbilityDef", "abilities" } }, }, },
	{ "Verse.CreepJoinerFormKindDef"                                 , { "Verse"      , "CreepJoinerFormKindDef"                              , "Verse.PawnKindDef"                                      , { "letterLabel", "letterPrompt", "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HeadTypeDef", "forcedHeadTypes" }, { "Verse.PawnKindLifeStage", "lifeStages" }, { "RimWorld.TraitDef", "disallowedTraits" }, { "RimWorld.AbilityDef", "abilities" }, { "RimWorld.BackstoryDef", "fixedChildBackstories" }, { "RimWorld.BackstoryDef", "fixedAdultBackstories" }, { "RimWorld.RoyalTitleDef", "titleSelectOne" }, { "RimWorld.InfectionPathwayDef", "meleeAttackInfectionPathways" }, { "RimWorld.InfectionPathwayDef", "rangedAttackInfectionPathways" }, { "Verse.ThingDef", "apparelRequired" }, { "Verse.ThingDef", "techHediffsRequired" }, { "RimWorld.ChemicalDef", "forcedAddictions" } }, }, },
	{ "Verse.CreepJoinerRejectionDef"                                , { "Verse"      , "CreepJoinerRejectionDef"                             , "Verse.CreepJoinerBaseDef"                               , { "letterLabel", "letterDesc", "surgicalInspectionLetterExtra", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.DamageArmorCategoryDef"                                 , { "Verse"      , "DamageArmorCategoryDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.DamageDef"                                              , { "Verse"      , "DamageDef"                                           , "Verse.Def"                                              , { "adaptedText", "deathMessage", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.Def"                                                    , { "Verse"      , "Def"                                                 , "Verse.Editable"                                         , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.DesignationCategoryDef"                                 , { "Verse"      , "DesignationCategoryDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.DesignationDef"                                         , { "Verse"      , "DesignationDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.DesignatorDropdownGroupDef"                             , { "Verse"      , "DesignatorDropdownGroupDef"                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.Editable"                                               , { "Verse"      , "Editable"                                            , ""                                                       , {}, {}, {}, }, },
	{ "Verse.EffecterDef"                                            , { "Verse"      , "EffecterDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.FleckDef"                                               , { "Verse"      , "FleckDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.GameConditionDef"                                       , { "Verse"      , "GameConditionDef"                                    , "Verse.Def"                                              , { "startMessage", "endMessage", "letterText", "descriptionFuture", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "letterHyperlinks" }, { "Verse.GameConditionDef", "silencedByConditions" } }, }, },
	{ "Verse.GeneCategoryDef"                                        , { "Verse"      , "GeneCategoryDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.GeneDef"                                                , { "Verse"      , "GeneDef"                                             , "Verse.Def"                                              , { "labelShortAdj", "resourceLabel", "resourceDescription", "label", "description", "ignoreConfigErrors" }, { "customEffectDescriptions" }, { { "RimWorld.AbilityDef", "abilities" }, { "RimWorld.NeedDef", "disablesNeeds" }, { "Verse.HediffDef", "makeImmuneTo" }, { "Verse.HediffDef", "hediffGiversCannotGive" }, { "Verse.HeadTypeDef", "forcedHeadTypes" } }, }, },
	{ "Verse.GeneSymbolPack+WeightedSymbol"                          , { "Verse"      , "WeightedSymbol"                                      , ""                                                       , { "symbol" }, {}, {}, }, },
	{ "Verse.GenStepDef"                                             , { "Verse"      , "GenStepDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.HeadTypeDef"                                            , { "Verse"      , "HeadTypeDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.GeneDef", "requiredGenes" } }, }, },
	{ "Verse.HediffCompProperties_CauseMentalState"                  , { "Verse"      , "HediffCompProperties_CauseMentalState"               , "Verse.HediffCompProperties"                             , { "overrideLetterLabel", "overrideLetterDesc" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_Disappears"                        , { "Verse"      , "HediffCompProperties_Disappears"                     , "Verse.HediffCompProperties"                             , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_DisappearsAndKills"                , { "Verse"      , "HediffCompProperties_DisappearsAndKills"             , "Verse.HediffCompProperties_DisappearsDisableable"       , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_DisappearsDisableable"             , { "Verse"      , "HediffCompProperties_DisappearsDisableable"          , "Verse.HediffCompProperties_Disappears"                  , { "messageOnDisappear", "letterTextOnDisappear", "letterLabelOnDisappear" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_FleshbeastEmerge"                  , { "Verse"      , "HediffCompProperties_FleshbeastEmerge"               , "Verse.HediffCompProperties"                             , { "letterLabel", "letterText" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_GetsPermanent"                     , { "Verse"      , "HediffCompProperties_GetsPermanent"                  , "Verse.HediffCompProperties"                             , { "permanentLabel", "instantlyPermanentLabel" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_LetterOnDeath"                     , { "Verse"      , "HediffCompProperties_LetterOnDeath"                  , "Verse.HediffCompProperties"                             , { "letterText", "letterLabel" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_MessageAboveSeverity"              , { "Verse"      , "HediffCompProperties_MessageAboveSeverity"           , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_MessageAfterTicks"                 , { "Verse"      , "HediffCompProperties_MessageAfterTicks"              , "Verse.HediffCompProperties"                             , { "message", "letterLabel", "letterText" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_MessageBase"                       , { "Verse"      , "HediffCompProperties_MessageBase"                    , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_MessageOnRemoval"                  , { "Verse"      , "HediffCompProperties_MessageOnRemoval"               , "Verse.HediffCompProperties_MessageBase"                 , { "message" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_MessageStageIncreased"             , { "Verse"      , "HediffCompProperties_MessageStageIncreased"          , "Verse.HediffCompProperties"                             , { "message" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_RandomizeSeverityPhases"           , { "Verse"      , "HediffCompProperties_RandomizeSeverityPhases"        , "Verse.HediffCompProperties_Randomizer"                  , { "notifyMessage" }, {}, { { "Verse.HediffCompProperties_RandomizeSeverityPhases+Phase", "phases" } }, }, },
	{ "Verse.HediffCompProperties_RandomizeSeverityPhases+Phase"     , { "Verse"      , "Phase"                                               , ""                                                       , { "labelPrefix", "descriptionExtra" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_RandomizeStageWithInterval"        , { "Verse"      , "HediffCompProperties_RandomizeStageWithInterval"     , "Verse.HediffCompProperties_Randomizer"                  , { "notifyMessage" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_RemoveIfOtherHediff"               , { "Verse"      , "HediffCompProperties_RemoveIfOtherHediff"            , "Verse.HediffCompProperties_MessageBase"                 , { "message" }, {}, { { "Verse.HediffDef", "hediffs" } }, }, },
	{ "Verse.HediffCompProperties_ReplaceHediff"                     , { "Verse"      , "HediffCompProperties_ReplaceHediff"                  , "Verse.HediffCompProperties"                             , { "message", "letterLabel", "letterDesc" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_SurgeryInspectable"                , { "Verse"      , "HediffCompProperties_SurgeryInspectable"             , "Verse.HediffCompProperties"                             , { "surgicalDetectionDesc" }, {}, {}, }, },
	{ "Verse.HediffCompProperties_SurgeryInspectableMetalHorror"     , { "Verse"      , "HediffCompProperties_SurgeryInspectableMetalHorror"  , "Verse.HediffCompProperties_SurgeryInspectable"          , { "surgicalDetectionDesc" }, {}, {}, }, },
	{ "Verse.HediffDef"                                              , { "Verse"      , "HediffDef"                                           , "Verse.Def"                                              , { "descriptionShort", "overrideTooltip", "extraTooltip", "labelNoun", "battleStateLabel", "labelNounPretty", "targetPrefix", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.HediffStage", "stages" }, { "RimWorld.NeedDef", "disablesNeeds" }, { "Verse.BodyPartDef", "onlyLifeThreateningTo" }, { "RimWorld.InfectionPathwayDef", "givesInfectionPathways" }, { "RimWorld.MeditationFocusDef", "allowedMeditationFocusTypes" }, { "RimWorld.AbilityDef", "abilities" }, { "Verse.PawnKindDef", "removeOnRedressIfNotOfKind" } }, }, },
	{ "Verse.HediffDef+ReportStringOverride"                         , { "Verse"      , "ReportStringOverride"                                , ""                                                       , { "reportString" }, {}, {}, }, },
	{ "Verse.HediffStage"                                            , { "Verse"      , "HediffStage"                                         , ""                                                       , { "label", "overrideLabel", "overrideTooltip", "extraTooltip" }, {}, { { "Verse.HediffDef", "makeImmuneTo" } }, }, },
	{ "Verse.IdeoStoryPatternDef"                                    , { "Verse"      , "IdeoStoryPatternDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ImplementOwnerTypeDef"                                  , { "Verse"      , "ImplementOwnerTypeDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.InventoryStockGroupDef"                                 , { "Verse"      , "InventoryStockGroupDef"                              , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "thingDefs" } }, }, },
	{ "Verse.JobDef"                                                 , { "Verse"      , "JobDef"                                              , "Verse.Def"                                              , { "reportString", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.KeyBindingCategoryDef"                                  , { "Verse"      , "KeyBindingCategoryDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.KeyBindingCategoryDef", "checkForConflicts" } }, }, },
	{ "Verse.KeyBindingDef"                                          , { "Verse"      , "KeyBindingDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.LetterDef"                                              , { "Verse"      , "LetterDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.LogEntryDef"                                            , { "Verse"      , "LogEntryDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ManeuverDef"                                            , { "Verse"      , "ManeuverDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.MapGeneratorDef"                                        , { "Verse"      , "MapGeneratorDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.GenStepDef", "genSteps" } }, }, },
	{ "Verse.MechWorkModeDef"                                        , { "Verse"      , "MechWorkModeDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.MentalBreakDef"                                         , { "Verse"      , "MentalBreakDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.MentalFitDef"                                           , { "Verse"      , "MentalFitDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.MentalStateDef"                                         , { "Verse"      , "MentalStateDef"                                      , "Verse.Def"                                              , { "beginLetter", "beginLetterLabel", "recoveryMessage", "baseInspectLine", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.PawnCapacityDef", "requiredCapacities" }, { "RimWorld.InteractionDef", "blockInteractionInitiationExcept" }, { "RimWorld.InteractionDef", "blockInteractionRecipientExcept" } }, }, },
	{ "Verse.MessageTypeDef"                                         , { "Verse"      , "MessageTypeDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.OptionCategoryDef"                                      , { "Verse"      , "OptionCategoryDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.OrderedTakeGroupDef"                                    , { "Verse"      , "OrderedTakeGroupDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.PawnCapacityDef"                                        , { "Verse"      , "PawnCapacityDef"                                     , "Verse.Def"                                              , { "labelMechanoids", "labelAnimals", "labelAnomalyEntity", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.PawnKindDef"                                            , { "Verse"      , "PawnKindDef"                                         , "Verse.Def"                                              , { "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.PawnKindLifeStage", "lifeStages" }, { "RimWorld.TraitDef", "disallowedTraits" }, { "RimWorld.AbilityDef", "abilities" }, { "RimWorld.BackstoryDef", "fixedChildBackstories" }, { "RimWorld.BackstoryDef", "fixedAdultBackstories" }, { "RimWorld.RoyalTitleDef", "titleSelectOne" }, { "RimWorld.InfectionPathwayDef", "meleeAttackInfectionPathways" }, { "RimWorld.InfectionPathwayDef", "rangedAttackInfectionPathways" }, { "Verse.ThingDef", "apparelRequired" }, { "Verse.ThingDef", "techHediffsRequired" }, { "RimWorld.ChemicalDef", "forcedAddictions" } }, }, },
	{ "Verse.PawnKindLifeStage"                                      , { "Verse"      , "PawnKindLifeStage"                                   , ""                                                       , { "label", "labelPlural", "labelMale", "labelMalePlural", "labelFemale", "labelFemalePlural" }, {}, {}, }, },
	{ "Verse.PawnRenderNodeTagDef"                                   , { "Verse"      , "PawnRenderNodeTagDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.PawnRenderTreeDef"                                      , { "Verse"      , "PawnRenderTreeDef"                                   , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.PlaceDef"                                               , { "Verse"      , "PlaceDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.RaceProperties"                                         , { "Verse"      , "RaceProperties"                                      , ""                                                       , { "meatLabel" }, {}, { { "RimWorld.HediffGiverSetDef", "hediffGiverSets" }, { "Verse.ThingDef", "willNeverEat" }, { "Verse.WorkTypeDef", "mechEnabledWorkTypes" } }, }, },
	{ "Verse.RecipeDef"                                              , { "Verse"      , "RecipeDef"                                           , "Verse.Def"                                              , { "jobString", "successfullyRemovedHediffMessage", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.SpecialThingFilterDef", "forceHiddenSpecialFilters" }, { "Verse.ThingDef", "recipeUsers" }, { "Verse.BodyPartDef", "appliedOnFixedBodyParts" }, { "Verse.BodyPartGroupDef", "appliedOnFixedBodyPartGroups" }, { "RimWorld.MutantDef", "mutantPrerequisite" }, { "RimWorld.MutantDef", "mutantBlacklist" }, { "RimWorld.MemeDef", "memePrerequisitesAny" }, { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.RecipeMakerProperties"                                  , { "Verse"      , "RecipeMakerProperties"                               , ""                                                       , { "label" }, {}, { { "Verse.ThingDef", "recipeUsers" }, { "RimWorld.MemeDef", "memePrerequisitesAny" }, { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.ResearchProjectDef"                                     , { "Verse"      , "ResearchProjectDef"                                  , "Verse.Def"                                              , { "discoveredLetterTitle", "discoveredLetterText", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ResearchProjectDef", "prerequisites" }, { "Verse.ResearchProjectDef", "hiddenPrerequisites" }, { "Verse.ResearchProjectDef", "requiredByThis" }, { "Verse.ThingDef", "requiredResearchFacilities" }, { "Verse.ResearchProjectTagDef", "tags" }, { "Verse.ThingDef", "requiredAnalyzed" } }, }, },
	{ "Verse.ResearchProjectTagDef"                                  , { "Verse"      , "ResearchProjectTagDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ReservationLayerDef"                                    , { "Verse"      , "ReservationLayerDef"                                 , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.RoofDef"                                                , { "Verse"      , "RoofDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.RoomRoleDef"                                            , { "Verse"      , "RoomRoleDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.RoomStatDef"                                            , { "Verse"      , "RoomStatDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.RulePackDef"                                            , { "Verse"      , "RulePackDef"                                         , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.RulePackDef", "include" } }, }, },
	{ "Verse.ScatterableDef"                                         , { "Verse"      , "ScatterableDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ShaderTypeDef"                                          , { "Verse"      , "ShaderTypeDef"                                       , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.SongDef"                                                , { "Verse"      , "SongDef"                                             , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.Sound.ImpactSoundTypeDef"                               , { "Verse.Sound", "ImpactSoundTypeDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.SoundDef"                                               , { "Verse"      , "SoundDef"                                            , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.SpecialThingFilterDef"                                  , { "Verse"      , "SpecialThingFilterDef"                               , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.StuffAppearanceDef"                                     , { "Verse"      , "StuffAppearanceDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.StyleCategoryDef"                                       , { "Verse"      , "StyleCategoryDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.BuildableDef", "addDesignators" }, { "Verse.DesignatorDropdownGroupDef", "addDesignatorGroups" } }, }, },
	{ "Verse.SubcameraDef"                                           , { "Verse"      , "SubcameraDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.TerrainAffordanceDef"                                   , { "Verse"      , "TerrainAffordanceDef"                                , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.TerrainDef"                                             , { "Verse"      , "TerrainDef"                                          , "Verse.BuildableDef"                                     , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.TerrainAffordanceDef", "affordances" }, { "Verse.Tool", "tools" }, { "RimWorld.StuffCategoryDef", "stuffCategories" }, { "Verse.ThingDef", "buildingPrerequisites" }, { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.ThingCategoryDef"                                       , { "Verse"      , "ThingCategoryDef"                                    , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingCategoryDef", "childCategories" }, { "Verse.ThingDef", "childThingDefs" }, { "Verse.SpecialThingFilterDef", "childSpecialFilters" } }, }, },
	{ "Verse.ThingDef"                                               , { "Verse"      , "ThingDef"                                            , "Verse.BuildableDef"                                     , { "stuffCategorySummary", "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.ThingDef", "virtualDefs" }, { "Verse.RecipeDef", "recipes" }, { "Verse.ThingCategoryDef", "thingCategories" }, { "Verse.Tool", "tools" }, { "WeaponClassDef", "weaponClasses" }, { "RimWorld.StuffCategoryDef", "stuffCategories" }, { "Verse.ThingDef", "buildingPrerequisites" }, { "Verse.ResearchProjectDef", "researchPrerequisites" } }, }, },
	{ "Verse.ThingFilter"                                            , { "Verse"      , "ThingFilter"                                         , ""                                                       , { "customSummary" }, {}, { { "Verse.SpecialThingFilterDef", "hiddenSpecialFilters" } }, }, },
	{ "Verse.ThingStyleDef"                                          , { "Verse"      , "ThingStyleDef"                                       , "Verse.Def"                                              , { "overrideLabel", "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.ThinkTreeDef"                                           , { "Verse"      , "ThinkTreeDef"                                        , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.TipSetDef"                                              , { "Verse"      , "TipSetDef"                                           , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.Tool"                                                   , { "Verse"      , "Tool"                                                , ""                                                       , { "label", "labelNoLocation" }, {}, { { "Verse.ToolCapacityDef", "capacities" } }, }, },
	{ "Verse.ToolCapacityDef"                                        , { "Verse"      , "ToolCapacityDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.TrainabilityDef"                                        , { "Verse"      , "TrainabilityDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "Verse.VerbProperties"                                         , { "Verse"      , "VerbProperties"                                      , ""                                                       , { "label", "mouseTargetingText" }, {}, {}, }, },
	{ "Verse.WeatherDef"                                             , { "Verse"      , "WeatherDef"                                          , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, { { "Verse.SoundDef", "ambientSounds" } }, }, },
	{ "Verse.WorkTypeDef"                                            , { "Verse"      , "WorkTypeDef"                                         , "Verse.Def"                                              , { "labelShort", "pawnLabel", "gerundLabel", "verb", "label", "description", "ignoreConfigErrors" }, {}, { { "RimWorld.SkillDef", "relevantSkills" }, { "RimWorld.WorkGiverDef", "workGiversByPriority" } }, }, },
	{ "Verse.WorldGenStepDef"                                        , { "Verse"      , "WorldGenStepDef"                                     , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "WeaponClassDef"                                               , { ""           , "WeaponClassDef"                                      , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
	{ "WeaponClassPairDef"                                           , { ""           , "WeaponClassPairDef"                                  , "Verse.Def"                                              , { "label", "description", "ignoreConfigErrors" }, {}, {}, }, },
};

